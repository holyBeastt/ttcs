const fs = require("fs");
const path = require("path");
const appRoot = require("app-root-path");

const transferFacultyFileGvm = (oldFaculty, newFaculty, subject, fullName) => {
  const oldFolder = path.join(
    appRoot.path,
    "Giang_Vien_Moi",
    oldFaculty,
    subject,
    fullName
  );
  const newFolder = path.join(
    appRoot.path,
    "Giang_Vien_Moi",
    newFaculty,
    oldFaculty,
    fullName
  );

  if (fs.existsSync(oldFolder)) {
    // T·∫°o folder cha n·∫øu ch∆∞a c√≥
    console.log("üìÅ T·∫°o th∆∞ m·ª•c:", path.dirname(newFolder));
    fs.mkdirSync(path.dirname(newFolder), { recursive: true });
    console.log("‚úÖ T·∫°o xong");

    fs.renameSync(oldFolder, newFolder);
    console.log("‚úÖ ƒê√£ ƒë·ªïi th∆∞ m·ª•c:", oldFolder, "‚Üí", newFolder);

    // ƒê·ªïi t√™n file ch·ª©a m√£ khoa c≈©
    const files = fs.readdirSync(newFolder);
    files.forEach((file) => {
      if (file.startsWith(oldFaculty + "_")) {
        const newFileName = file.replace(oldFaculty + "_", newFaculty + "_");
        fs.renameSync(
          path.join(newFolder, file),
          path.join(newFolder, newFileName)
        );
        console.log("‚úÖ ƒê√£ ƒë·ªïi t√™n file:", file, "‚Üí", newFileName);
      }
    });

    const oldDeptFolder = path.join(appRoot.path, "Giang_Vien_Moi", oldFaculty);
    if (fs.existsSync(oldDeptFolder)) {
      const files = fs.readdirSync(oldDeptFolder);
      if (files.length === 0) {
        fs.rmdirSync(oldDeptFolder); // Kh√¥ng c·∫ßn recursive v√¨ th∆∞ m·ª•c ƒë√£ r·ªóng
        console.log("üóëÔ∏è ƒê√£ x√≥a th∆∞ m·ª•c khoa c≈© (r·ªóng):", oldDeptFolder);
      } else {
        console.log("‚ö†Ô∏è Kh√¥ng x√≥a, th∆∞ m·ª•c c√≤n d·ªØ li·ªáu:", oldDeptFolder);
      }
    }
  } else {
    console.warn("‚ö†Ô∏è Th∆∞ m·ª•c c≈© kh√¥ng t·ªìn t·∫°i:", oldFolder);
  }
};

module.exports = transferFacultyFileGvm;
