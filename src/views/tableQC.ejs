<!DOCTYPE html>
<html lang="en">

<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>Học Viện Kỹ Thuật Mật Mã</title>
  <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap@5.2.3/dist/css/bootstrap.min.css">
  <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap-icons@1.11.3/font/bootstrap-icons.css">
  <link rel="stylesheet" href="/css/styles.css">
  <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.6.0/css/all.min.css">
  <style>
    /* CSS cho bảng */
    .table {
      width: 100%;
      border-collapse: collapse;
      margin-top: 20px;
    }

    .table th,
    .table td {
      padding: 10px;
      text-align: left;
      border: 1px solid #dee2e6;
    }

    .table th {
      background-color: #007bff;
      color: white;
      font-weight: bold;
    }

    .table tbody tr:nth-child(even) {
      background-color: #f8f9fa;
    }

    .table tbody tr:hover {
      background-color: #e2e6ea;
    }

    .table td {
      vertical-align: middle;
    }

    .bg-custom {
      background-color: #f8f9fa;
      padding: 20px;
      border-radius: 8px;
      box-shadow: 0 0 10px rgba(0, 0, 0, 0.1);
    }

    .spinner-border {
      position: fixed;
      left: 50%;
      top: 50%;
      transform: translate(-50%, -50%);
      z-index: 1000;
    }



    /* Đảm bảo menu con không hiển thị mặc định */
    .dropdown-submenu .dropdown-menu {
      display: none;
      position: absolute;
      left: 100%;
      top: 0;
    }

    /* Hiển thị menu con khi hover */
    .dropdown-submenu:hover .dropdown-menu {
      display: block;
    }
  </style>

  <script src="https://ajax.googleapis.com/ajax/libs/jquery/3.7.1/jquery.min.js"></script>
  <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/js/bootstrap.bundle.min.js"></script>
</head>

<body>
  <!-- Phần header -->
  <%- include('header') %>

  <!-- Phần nội dung -->

  <div class="container-fluid box m-4  ">
    <div class="mx-5 flex-grow-1">
      <div class="d-flex justify-content-start align-items-end mb-3">

        <!-- Combo box Đợt -->
        <select class="form-select w-100px mx-1 selectop" id="combobox-dot">
          <option value="">Đợt</option>
        </select>

        <!-- Combo box kì -->
        <select class="form-select w-100px mx-1 selectop" id="comboboxki">
          <option value="">Kì</option>
        </select>

        <!-- Combo box Năm -->
        <select class="form-select mx-1 selectop" id="NamHoc" style="width: max-content">
          <option value="">Chọn năm học</option>
        </select>

        <!-- Combo box với các giá trị CNTT, ATTT, DTVT -->
        <select class="form-select w-100px mx-1 selectop" id="MaPhongBan">
          <option value="">Chọn khoa</option>
        </select>

        <button class="btn mx-1" id="render" style="margin-bottom: 0px; height: 45px;">Hiển thị</button>
        <!-- <button class="btn btn-success mx-2" id="filter">Lọc</button> -->
        <!-- Nút Lọc màu giống nút Hiển thị -->

        <!-- <div class="btn-group">
          <button type="button" class="btn btn-success dropdown-toggle" data-bs-toggle="dropdown" aria-expanded="false">
            Lọc
          </button>
          <ul class="dropdown-menu">
            <li><a class="dropdown-item" href="#" id="filter-guest-class">Các lớp mời giảng</a></li>
            <li><a class="dropdown-item" href="#" id="filter-teacher-name">Theo tên giảng viên</a></li>
            <li class="dropdown-submenu">
              <a class="dropdown-item" href="#" id="filter-by-department">Theo khoa</a>
              <ul class="dropdown-menu">
                <li><a class="dropdown-item" href="#" id="filter-dept-cntt">CNTT</a></li>
                <li><a class="dropdown-item" href="#" id="filter-dept-attt">ATTT</a></li>
                <li><a class="dropdown-item" href="#" id="filter-dept-dtvt">DTVT</a></li>
                <li><a class="dropdown-item" href="#" id="filter-dept-mm">MM</a></li>
                <li><a class="dropdown-item" href="#" id="filter-dept-gdtc">GDTC</a></li>
                <li><a class="dropdown-item" href="#" id="filter-dept-cb">CB</a></li>
                <li><a class="dropdown-item" href="#" id="filter-dept-llct">LLCT</a></li>
              </ul>
            </li>
          </ul>
        </div> -->


      </div>
      <div class="overflow-auto">
        <table class="table table-bordered">
          <thead>
            <tr id="table-header"></tr>
          </thead>
          <tbody id="data-table-body"></tbody>
        </table>
      </div>
    </div>
  </div>
  </div>
  <script src="https://ajax.googleapis.com/ajax/libs/jquery/3.7.1/jquery.min.js"></script>
  <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/js/bootstrap.bundle.min.js"></script>

      <!-- Link script Sweet alert 2 -->
  <!-- SweetAlert2 CSS -->
  <link href="https://cdn.jsdelivr.net/npm/sweetalert2@11.6.16/dist/sweetalert2.min.css" rel="stylesheet">

  <!-- SweetAlert2 JavaScript -->
  <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11.6.16/dist/sweetalert2.all.min.js"></script>


  <script>

    // Lắng nghe sự kiện click vào button
    document.getElementById('render').addEventListener('click', function () {
      loadData(); // Gọi hàm loadData khi button được click
    });


    async function loadData() {
      try {
        // Biến để lưu trữ giá trị mặc định
        let dotValue = document.getElementById('combobox-dot').value;
        let kiValue = document.getElementById('comboboxki').value;
        let namValue = document.getElementById('NamHoc').value;
        let khoaValue = document.getElementById('MaPhongBan').value;

        // Hàm cập nhật giá trị từ comboboxes
        const updateValues = () => {
          dotValue = document.getElementById('combobox-dot').value;
          kiValue = document.getElementById('comboboxki').value;
          namValue = document.getElementById('NamHoc').value;
          khoaValue = document.getElementById('MaPhongBan').value;

          console.log({ dotValue, kiValue, namValue, khoaValue }); // In ra giá trị hiện tại
        };

        // Hàm xử lý sự thay đổi ở bất kỳ combobox nào
        const handleComboboxChange = async () => {
          updateValues(); // Cập nhật giá trị khi có sự thay đổi

          // Tạo đối tượng dữ liệu để gửi
          const requestData = {
            Khoa: khoaValue,
            Dot: dotValue,
            Ki: kiValue,
            Nam: namValue,
          };

          // Fetch thông tin giảng dạy
          const teachingResponse = await fetch('/quy-chuan-chinh-thuc', {
            method: 'POST',
            headers: {
              'Content-Type': 'application/json',
            },
            body: JSON.stringify(requestData),
          });
          if (!teachingResponse.ok) {
            // Lấy thông tin chi tiết lỗi từ server
            const errorData = await teachingResponse.json();
            // Hiển thị thông báo lỗi từ server
            Swal.fire({
              title: 'Thông báo',
              html: errorData.message || "Đã có lỗi xảy ra!",
              icon: 'error',
              confirmButtonText: 'OK',
              width: 'auto', // Tự động điều chỉnh chiều rộng
              padding: '20px', // Giữ khoảng cách cho nội dung
            });
            return;
          }



          // Xử lý dữ liệu giảng dạy
          const globalData = await teachingResponse.json();
          console.log('Tổng hợp bảng dữ liệu:', globalData.results);

          // Sau khi có dữ liệu thành công, thực hiện render bảng
          renderTable(globalData.results); // Gọi hàm renderTable sau khi đã có đủ dữ liệu
        };

        // Thêm trình lắng nghe sự kiện cho từng combobox
        document.getElementById('combobox-dot').addEventListener('change', handleComboboxChange);
        document.getElementById('comboboxki').addEventListener('change', handleComboboxChange);
        document.getElementById('NamHoc').addEventListener('change', handleComboboxChange);
        document.getElementById('MaPhongBan').addEventListener('change', handleComboboxChange);

        // Gọi updateValues để lấy giá trị mặc định ngay khi tải trang
        updateValues();

        // Tạo đối tượng dữ liệu để gửi ngay khi tải trang
        const requestData = {
          Khoa: khoaValue,
          Dot: dotValue,
          Ki: kiValue,
          Nam: namValue,
        };

        console.log(requestData);
        // Fetch thông tin giảng dạy ngay khi tải trang
        const teachingResponse = await fetch('/quy-chuan-chinh-thuc', {
          method: 'POST',
          headers: {
            'Content-Type': 'application/json',
          },
          body: JSON.stringify(requestData),
        });

        if (!teachingResponse.ok) {
          // Lấy thông tin chi tiết lỗi từ server
          const errorData = await teachingResponse.json();
          // Hiển thị thông báo lỗi từ server
          Swal.fire({
            title: 'Thông báo',
            html: errorData.message || "Đã có lỗi xảy ra!",
            icon: 'error',
            confirmButtonText: 'OK',
            width: 'auto', // Tự động điều chỉnh chiều rộng
            padding: '20px', // Giữ khoảng cách cho nội dung
          });
          return;
        }


        // Xử lý dữ liệu giảng dạy ngay khi tải trang
        const globalData = await teachingResponse.json();
        console.log('Tổng hợp bảng dữ liệu:', globalData);

        // Sau khi có dữ liệu thành công, thực hiện render bảng
        renderTable(globalData); // Gọi hàm renderTable sau khi đã có đủ dữ liệu

      } catch (error) {
        console.error('Đã có lỗi xảy ra:', error);
      }
    }

    // Hàm renderTable sẽ được sử dụng để render bảng
    function renderTable(data) {
      // Chọn các cột bạn muốn hiển thị
      const columnsToDisplay = ['Khoa', 'Dot', 'KiHoc', 'NamHoc', 'LopHocPhan', 'GiaoVien', 'GiaoVienGiangDay', 'MoiGiang', 'SoTinChi', 'TenLop', 'LL', 'QuyChuan'];
      let tableHtml = '';

      const headersMap = {
        'Khoa': 'Khoa',
        'Dot': 'Đợt',
        'KiHoc': 'Kì',
        'NamHoc': 'Năm',
        'LopHocPhan': 'Lớp học phần',
        'GiaoVien': 'Giảng viên theo TKB',
        'GiaoVienGiangDay': 'Giảng viên giảng dạy',
        'MoiGiang': 'Mời giảng?',
        'SoTinChi': 'Số tín chỉ',
        'TenLop': 'Tên lớp',
        'LL': 'Số tiết lên lớp',
        'QuyChuan': 'Số tiết quy chuẩn',
      };

      // Tạo header
      columnsToDisplay.forEach(header => {
        const newHeaderName = headersMap[header] || header; // Sử dụng tên cột mới nếu có
        tableHtml += `<th>${newHeaderName}</th>`;
      });

      document.getElementById('table-header').innerHTML = tableHtml;

      // Xóa dữ liệu bảng cũ nếu có trước khi thêm mới
      document.getElementById('data-table-body').innerHTML = '';

      // Duyệt qua từng mục trong dữ liệu
      data.forEach(item => {
        let rowHtml = columnsToDisplay.map(key => {
          let cellValue = item[key] !== null ? item[key] : '';

          // Chuyển đổi 0 và 1 thành 'Có' hoặc 'Không'
          if (key === 'MoiGiang') {
            cellValue = cellValue === 1 ? 'Có' : 'Không';
          }

          return `<td>${cellValue}</td>`;
        }).join('');

        document.getElementById('data-table-body').innerHTML += `<tr>${rowHtml}</tr>`;
      });

      // Xóa spinner sau khi hoàn thành (nếu có spinner)
      const loadingSpinner = document.getElementById('loading-spinner');
      if (loadingSpinner) {
        loadingSpinner.remove();
      }
    }

    // Thêm sự kiện cho nút lọc
    document.getElementById('filter').addEventListener('click', function () {
      const rows = document.querySelectorAll('#data-table-body tr');
      rows.forEach(row => {
        const cells = row.getElementsByTagName('td');
        const moiGiang = cells[2].textContent; // Giả sử "Mời giảng" là cột thứ 3 (index 2)
        if (moiGiang !== 'Có') { // Lọc theo giá trị 'Có' thay vì 1
          row.style.display = 'none'; // Ẩn hàng nếu "Mời giảng" không phải là 'Có'
        } else {
          row.style.display = ''; // Hiện hàng nếu "Mời giảng" là 'Có'
        }
      });
    });

  </script>

  <!-- Phần phân quyền -->
  <script>
    document.addEventListener('DOMContentLoaded', () => {

      // Thêm sự kiện click cho phần tử có id="ThongTinGD"
      const ThongTinGD = document.getElementById("ThongTinGD");

      ThongTinGD.addEventListener("click", function (event) {
        event.preventDefault(); // Ngăn chặn hành vi mặc định của liên kết

        const isKhoa = localStorage.getItem("isKhoa"); // Lấy role từ localStorage

        if (isKhoa == 0) { // Nếu là đào tạo hoặc tài chính
          window.location.href = "/info2";
        } else {
          window.location.href = "/info";
        }
      });

      // Thêm sự kiện click cho phần tử có id="Home"

      const Home = document.getElementById("Home");

      Home.addEventListener("click", function (event) {
        event.preventDefault(); // Ngăn chặn hành vi mặc định của liên kết

        const isKhoa = localStorage.getItem("isKhoa")

        if (isKhoa == 0) { // Nếu là đào tạo hoặc tài chính
          window.location.href = "/maindt";
        } else {
          window.location.href = "/mainkhoa";
        }
      });
    });

  </script>

  <script>
    document.getElementById("changePasswordLink").addEventListener("click", function (event) {
      event.preventDefault(); // Ngăn chặn hành vi mặc định của thẻ a
      const tenDangNhap = localStorage.getItem("TenDangNhap"); // Lấy TenDangNhap từ localStorage

      if (tenDangNhap) {
        // Chuyển hướng đến trang changePassword và truyền TenDangNhap trong URL
        window.location.href = `/changePassword?tenDangNhap=${encodeURIComponent(tenDangNhap)}`;
      } else {
        alert("Không tìm thấy TenDangNhap trong localStorage.");
      }
    });
  </script>
  <script>
    $(document).ready(function () {
      $('#NamHoc option[value=""]').remove();
      $('#comboboxki option[value=""]').remove();
      $('#combobox-dot option[value=""]').remove();

      $.ajax({
        url: '/getNamHoc',
        method: 'GET',
        success: function (response) {
          if (response.success) {

            response.NamHoc.forEach(function (item) {
              console.log(item.NamHoc);
              $('#NamHoc').append(
                `<option value="${item.NamHoc}">${item.NamHoc}</option>`
              );
            });

            response.Ki.forEach(function (item) {
              console.log(item.Ki);
              $('#comboboxki').append(
                `<option value="${item.value}">${item.Ki}</option>`
              );
            });
            response.Dot.forEach(function (item) {
              console.log(item.Dot);
              $('#combobox-dot').append(
                `<option value="${item.value}">${item.Dot}</option>`
              );
            });
          } else {
            console.error("Không lấy được dữ liệu năm học:", response.message);
          }
        },
        error: function (error) {
          console.error("Lỗi khi lấy dữ liệu năm học:", error);
        }
      });
    });
  </script>
  <script>
    $(document).ready(function () {
      $('#MaPhongBan option[value=""]').remove();
      // Gọi AJAX để lấy dữ liệu JSON từ API
      $.ajax({
        url: '/getPhongBan', // Đường dẫn tới API getPhongBan
        method: 'GET',
        success: function (response) {
          // Kiểm tra nếu response thành công
          const MaPhongBan = response.MaPhongBan;
          if (response.success) {
            $('#MaPhongBan').prepend('<option value="ALL">ALL</option>');
            // Lặp qua từng mục trong mảng MaPhongBan
            response.MaPhongBan.forEach(function (item) {
              // Nếu item.MaPhongBan bằng boMon.MaPhongBan, hiển thị trước
              console.log(item);
              $('#MaPhongBan').append(
                `<option value="${item.MaPhongBan}">${item.MaPhongBan}</option>`
              );
            }
            );

            // Nếu không có phòng ban nào tương ứng, bạn có thể thêm tùy chọn mặc định ở đây
            if (!$('#MaPhongBan option:selected').length) {
              $('#MaPhongBan').prepend('<option value="">Chọn Phòng Ban</option>');
            }
          } else {
            console.error("Không lấy được dữ liệu phongBan:", response.message);
          }
        },
        error: function (error) {
          console.error("Lỗi khi lấy dữ liệu phongBan:", error);
        }
      });
    });
  </script>
  <script>
    document.getElementById("infome").addEventListener("click", function (event) {
      event.preventDefault(); // Ngăn chặn hành vi mặc định của thẻ a
      const id_User = localStorage.getItem("id_User"); // Lấy id_User từ localStorage\
      if (id_User) {
        // Chuyển hướng đến trang infome và truyền id_User trong URL
        window.location.href = `/infome/${id_User}`;
      } else {
        alert("Không tìm thấy id_User trong localStorage.");
      }
    });
  </script>

  <script>
    document.addEventListener("DOMContentLoaded", () => {
      const role = localStorage.getItem("userRole");
      const isKhoa = localStorage.getItem("isKhoa");

      // Ẩn button import đồ án
      const importDoAn = document.getElementById('importDoAn');
      const suaHD = document.getElementById('suaHD');

      if (isKhoa == 0 && role == 'Duyệt'){
        importDoAn.style.display = 'block';
        suaHD.style.display = 'block';
      }

      // Ẩn button ngay khi trang được tải
      const actionButton = document.getElementById('changeMessage');
      //Ẩn site thêm thông báo
      if (role === "Duyệt") {
        actionButton.style.display = '';
      } else {
        actionButton.style.display = 'none';
      }
    });
  </script>
  <script>
    document.getElementById("changeMessage").addEventListener("click", function (event) {
      event.preventDefault(); // Ngăn chặn hành vi mặc định của thẻ a
      const MaPhongBan = localStorage.getItem("MaPhongBan"); // Lấy MaPhongBan từ localStorage

      if (MaPhongBan) {
        // Chuyển hướng đến trang changeMessage và truyền MaPhongBan trong URL
        window.location.href = `/changeMessage/${MaPhongBan}`;
      } else {
        alert("Không tìm thấy MaPhongBan trong localStorage.");
      }
    });
  </script>
</body>

</html>