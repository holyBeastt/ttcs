<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>Học Viện Kỹ Thuật Mật Mã</title>
    <link rel="stylesheet" href="/css/table.css" />
    <link rel="stylesheet" href="/css/admin.css" />
    <link
      rel="stylesheet"
      href="https://cdn.jsdelivr.net/npm/bootstrap@5.2.3/dist/css/bootstrap.min.css"
    />
    <link
      rel="stylesheet"
      href="https://cdn.jsdelivr.net/npm/bootstrap-icons@1.11.3/font/bootstrap-icons.css"
    />
    <link rel="stylesheet" href="/css/styles.css" />

    <script src="https://ajax.googleapis.com/ajax/libs/jquery/3.7.1/jquery.min.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/js/bootstrap.bundle.min.js"></script>
  </head>
  <style>
    .viet_tat-cell {
      cursor: pointer;
    }
    .edit-input {
      margin: 2px;
      padding: 2px 5px;
      border: 1px solid #ddd;
      border-radius: 3px;
    }

    .save-btn,
    .cancel-btn {
      padding: 2px 8px;
      margin-left: 5px;
      border: none;
      border-radius: 3px;
      cursor: pointer;
    }

    .save-btn {
      background-color: #4caf50;
      color: white;
    }

    .cancel-btn {
      background-color: #f44336;
      color: white;
    }
    .form-group {
      margin-bottom: 20px;
    }

    .navbar-nav .dropdown-menu {
      z-index: 1050 !important;
    }

    .container.my-5.box {
      position: relative;
      z-index: 1;
    }

    .navbar-bottom {
      position: relative;
      z-index: 1040;
    }

    .nav-link.dropdown-toggle {
      z-index: 1050;
      position: relative;
    }

    select.edit-input {
      width: 100%;
      margin-bottom: 5px;
      display: flex;
    }
  </style>
  <body>
    <%- include('adminHeader') %>
    <div class="container my-5 box">
      <form action="/kytubatdau" method="POST" class="row">
        <div class="col-md-5">
          <div class="form-group">
            <label for="viet_tat">Viết tắt:</label>
            <input
              type="text"
              class="form-control"
              id="viet_tat"
              name="viet_tat"
              required
            />
          </div>
        </div>

        <!-- Loại đào tạo -->
        <div class="col-md-2">
          <div class="form-group">
            <select class="selectop" id="LoaiDaoTao" name="loai_dao_tao">
              <option value="Đại học">Đại học</option>
              <option value="Cao học">Cao học</option>
              <option value="Nghiên cứu sinh">Nghiên cứu sinh</option>
            </select>
          </div>
        </div>

        <!-- Hệ đào tạo -->
        <div class="col-md-2">
          <div class="form-group">
            <select class="selectop" id="he_dao_tao" name="he_dao_tao">
              <option value="Đóng học phí">Đóng học phí</option>
              <option value="Mật Mã">Mật mã</option>
            </select>
          </div>
        </div>

        <div class="col-md-2 d-flex align-items-end">
          <button
            type="submit"
            class="btn btn-primary w-100"
            style="z-index: 1; margin-bottom: 1.5rem"
          >
            Thêm mới
          </button>
        </div>
      </form>

      <!-- Nút Lọc màu giống nút Hiển thị -->
      <div class="pb-3">
        <table id="NamHocTable" class="table table-bordered">
          <thead>
            <tr>
              <th>STT</th>
              <th>Viết tắt</th>
              <th>Tên lớp ví dụ</th>
              <th>Hệ đào tạo</th>
              <th>Thao tác</th>
            </tr>
          </thead>
          <tbody id="data-table-body">
            <% if (kyTuBD && kyTuBD.length > 0) { %> <% for (var i = 0; i <
            kyTuBD.length; i++) { %>
            <tr
              data-lop-vi-du="<%= kyTuBD[i].lop_vi_du %>"
              data-viet-tat="<%= kyTuBD[i].viet_tat %>"
            >
              <td><%= i + 1 %></td>
              <td class="editable viet_tat-cell"><%= kyTuBD[i].viet_tat %></td>
              <td class="editable lop_vi_du-cell">
                <%= kyTuBD[i].lop_vi_du %>
              </td>
              <td class="editable"><%= kyTuBD[i].gia_tri_so_sanh %></td>
              <td class="d-flex justify-content-center">
                <button class="bi bi-pencil action-button edit-btn"></button>
                <button
                  class="bi bi-trash3 action-button me-2"
                  onclick="deleteKyTuBD(this, '<%= kyTuBD[i].lop_vi_du %>')"
                ></button>
              </td>
            </tr>
            <% } %> <% } %>
          </tbody>
        </table>
      </div>
    </div>

    <!-- Link script Sweet alert 2 -->
    <!-- SweetAlert2 CSS -->
    <link
      href="https://cdn.jsdelivr.net/npm/sweetalert2@11.6.16/dist/sweetalert2.min.css"
      rel="stylesheet"
    />

    <!-- SweetAlert2 JavaScript -->
    <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11.6.16/dist/sweetalert2.all.min.js"></script>

    <script>
      function deleteKyTuBD(button, id) {
        if (confirm(`Bạn có chắc chắn muốn xóa Hệ đào tạo${id} không?`)) {
          fetch(`/kytubatdau/${id}`, {
            method: "DELETE",
            headers: {
              "Content-Type": "application/json",
            },
          })
            .then((response) => {
              if (response.ok) {
                alert("Xóa thành công!");
                button.closest("tr").remove();
              } else {
                return response.text().then((text) => {
                  // Kiểm tra nếu phản hồi là HTML, thường là trang đăng nhập hoặc lỗi
                  if (text.startsWith("<!DOCTYPE html>")) {
                    alert(
                      "Có lỗi xảy ra, có thể bạn cần đăng nhập lại hoặc endpoint không tồn tại."
                    );
                  } else {
                    const data = JSON.parse(text); // Xử lý JSON nếu không phải HTML
                    alert("Xóa thất bại: " + data.message);
                  }
                });
              }
            })
            .catch((error) => {
              alert("Có lỗi xảy ra: " + error.message);
            });
        }
      }
    </script>
    <script>
      $(document).ready(function () {
        let originalValues = {};

        $(".edit-btn").click(function () {
          const row = $(this).closest("tr");
          const id = row.data("id");

          // Lưu giá trị gốc
          originalValues[id] = {
            viet_tat: row.find(".viet_tat").text().trim(),
          };

          // Chuyển text thành input
          row.find(".viet_tat").html(`
            <input type="text" class="form-control" value="${originalValues[id].viet_tat}">
          `);

          // Hiển thị/ẩn các nút
          row.find(".edit-btn").hide();
          row.find(".save-btn, .cancel-btn").show();
        });

        $(".save-btn").click(function () {
          const row = $(this).closest("tr");
          const id = row.data("id");
          const newviet_tat = row.find(".viet_tat input").val();

          $.ajax({
            url: "/updateKyTuBD",
            method: "POST",
            data: {
              lop_vi_du: id,
              viet_tat: newviet_tat,
            },
            success: function (response) {
              // Cập nhật giao diện
              row.find(".viet_tat").text(newviet_tat);
              row.find(".edit-btn").show();
              row.find(".save-btn, .cancel-btn").hide();

              // Hiển thị thông báo thành công
              toastr.success("Cập nhật thành công");
            },
            error: function (error) {
              toastr.error("Có lỗi xảy ra khi cập nhật");
            },
          });
        });

        $(".cancel-btn").click(function () {
          const row = $(this).closest("tr");
          const id = row.data("id");

          // Khôi phục giá trị gốc
          row.find(".viet_tat").text(originalValues[id].viet_tat);

          // Hiển thị/ẩn các nút
          row.find(".edit-btn").show();
          row.find(".save-btn, .cancel-btn").hide();
        });
      });
    </script>
    <script>
      document
        .getElementById("changePasswordLink")
        .addEventListener("click", function (event) {
          event.preventDefault(); // Ngăn chặn hành vi mặc định của thẻ a
          const tenDangNhap = localStorage.getItem("TenDangNhap"); // Lấy TenDangNhap từ localStorage

          if (tenDangNhap) {
            // Chuyển hướng đến trang changePassword và truyền TenDangNhap trong URL
            window.location.href = `/changePassword?tenDangNhap=${encodeURIComponent(
              tenDangNhap
            )}`;
          } else {
            alert("Không tìm thấy TenDangNhap trong localStorage.");
          }
        });
    </script>

    <script>
      document.addEventListener("DOMContentLoaded", function () {
        const table = document.querySelector("table");

        // Handle edit button click
        table.addEventListener("click", function (e) {
          if (e.target.classList.contains("edit-btn")) {
            const row = e.target.closest("tr");
            const lop_vi_duCell = row.querySelector(".lop_vi_du-cell");
            const viet_tatCell = row.querySelector(".viet_tat-cell");
            const giaTriSoSanhCell = row.querySelector(
              ".editable:nth-child(4)"
            );

            // Lưu giá trị gốc
            row.dataset.originallopViDu = lop_vi_duCell.textContent.trim();
            row.dataset.originalvietTat = viet_tatCell.textContent.trim();
            row.dataset.originalgiaTriSoSanh =
              giaTriSoSanhCell.textContent.trim();

            // Parse giá trị gốc của hệ đào tạo
            const match = giaTriSoSanhCell.textContent.match(/(.+) \((.+)\)/);
            const originalLoaiDaoTao = match ? match[1].trim() : "Đại học";
            const originalHeDaoTao = match ? match[2].trim() : "Đóng học phí";

            // Chuyển cells thành inputs
            lop_vi_duCell.innerHTML = `
              <input type="text" class="edit-input" value="${row.dataset.originallopViDu}">
            `;
            viet_tatCell.innerHTML = `
              <input type="text" class="edit-input" value="${row.dataset.originalvietTat}">
            `;
            giaTriSoSanhCell.innerHTML = `
              <select class="edit-input" id="LoaiDaoTao">
                <option value="Đại học" ${
                  originalLoaiDaoTao === "Đại học" ? "selected" : ""
                }>Đại học</option>
                <option value="Cao học" ${
                  originalLoaiDaoTao === "Cao học" ? "selected" : ""
                }>Cao học</option>
                <option value="Nghiên cứu sinh" ${
                  originalLoaiDaoTao === "Nghiên cứu sinh" ? "selected" : ""
                }>Nghiên cứu sinh</option>
              </select>
              <select class="edit-input" id="HeDaoTao">
                <option value="Đóng học phí" ${
                  originalHeDaoTao === "Đóng học phí" ? "selected" : ""
                }>Đóng học phí</option>
                <option value="Mật mã" ${
                  originalHeDaoTao === "Mật mã" ? "selected" : ""
                }>Mật mã</option>
              </select>
            `;

            // Add save/cancel buttons
            const actionCell = row.querySelector("td:last-child");
            actionCell.innerHTML = `
              <button class="save-btn btn btn-success btn-sm">Lưu</button>
              <button class="cancel-btn btn btn-danger btn-sm ms-2">Hủy</button>
            `;
          }
        });

        // Handle save button click
        table.addEventListener("click", async function (e) {
          if (e.target.classList.contains("save-btn")) {
            const row = e.target.closest("tr");
            const newlop_vi_du = row.querySelector(
              ".lop_vi_du-cell input"
            ).value;
            const newviet_tat = row.querySelector(".viet_tat-cell input").value;
            const newLoaiDaoTao = row.querySelector("#LoaiDaoTao").value;
            const newHeDaoTao = row.querySelector("#HeDaoTao").value;
            const originallop_vi_du = row.dataset.originallopViDu;

            try {
              const response = await fetch(`/kytubatdau/${originallop_vi_du}`, {
                method: "PUT",
                headers: {
                  "Content-Type": "application/json",
                },
                body: JSON.stringify({
                  lop_vi_du: newlop_vi_du,
                  viet_tat: newviet_tat,
                  loai_dao_tao: newLoaiDaoTao,
                  he_dao_tao: newHeDaoTao,
                }),
              });

              if (response.ok) {
                // Update UI
                row.dataset.lop_vi_du = newlop_vi_du;
                row.dataset.viet_tat = newviet_tat;
                row.querySelector(".lop_vi_du-cell").textContent = newlop_vi_du;
                row.querySelector(".viet_tat-cell").textContent = newviet_tat;
                row.querySelector(
                  ".editable:nth-child(4)"
                ).textContent = `${newLoaiDaoTao} (${newHeDaoTao})`;

                // Restore edit/delete buttons
                const actionCell = row.querySelector("td:last-child");
                actionCell.innerHTML = `
                  <button class="bi bi-pencil action-button edit-btn"></button>
                  <button class="bi bi-trash3 action-button me-2" 
                      onclick="deleteKyTuBD(this, '${newlop_vi_du}')">
                  </button>
                `;

                alert("Cập nhật thành công!");
              } else {
                throw new Error("Có lỗi xảy ra");
              }
            } catch (error) {
              console.error("Error:", error);
              alert("Lỗi khi cập nhật: " + error.message);
            }
          }
        });

        // Handle cancel button click
        table.addEventListener("click", function (e) {
          if (e.target.classList.contains("cancel-btn")) {
            const row = e.target.closest("tr");

            // Restore original values
            row.querySelector(".lop_vi_du-cell").textContent =
              row.dataset.originallopViDu;
            row.querySelector(".viet_tat-cell").textContent =
              row.dataset.originalvietTat;
            row.querySelector(".editable:nth-child(4)").textContent =
              row.dataset.originalgiaTriSoSanh;

            // Restore edit/delete buttons
            const actionCell = row.querySelector("td:last-child");
            actionCell.innerHTML = `
              <button class="bi bi-pencil action-button edit-btn"></button>
              <button class="bi bi-trash3 action-button me-2" 
                  onclick="deleteKyTuBD(this, '${row.dataset.originallopViDu}')">
              </button>
            `;
          }
        });
      });
    </script>

    <!-- Script thông báo khi thêm -->
    <script>
      // Lấy query string từ URL
      const urlParams = new URLSearchParams(window.location.search);
      const message = urlParams.get("message");

      // Lấy phần tử div để hiển thị thông báo
      const messageDiv = document.getElementById("message");

      // Hiển thị thông báo dựa trên giá trị của message

      if (message === "insertSuccess") {
        Swal.fire({
          title: "Thông báo",
          html: "Thành công",
          icon: "success",
          confirmButtonText: "OK",
          width: "auto",
          padding: "20px",
        });
      } else if (message === "duplicateKiTu") {
        Swal.fire({
          title: "Thông báo",
          html: "Kí tự bắt đầu đã tồn tại",
          icon: "info",
          confirmButtonText: "OK",
          width: "auto",
          padding: "20px",
        });
      } else if (message === "duplicateKiTuAndHeDaoTao") {
        Swal.fire({
          title: "Thông báo",
          html: "Kí tự bắt đầu với hệ đào tạo này đã tồn tại",
          icon: "info",
          confirmButtonText: "OK",
          width: "auto",
          padding: "20px",
        });
      } else if (message == null) {
      } else {
        alert(message);
      }

      // Sau khi hiển thị thông báo, xóa query string để tránh hiển thị lại khi refresh
      if (message) {
        // Sử dụng window.history để xóa query string mà không refresh lại trang
        const newUrl = window.location.origin + window.location.pathname;
        window.history.replaceState({}, document.title, newUrl);
      }
    </script>
    <script>
      $(document).ready(function () {
        // Handle form submission
        $("form").submit(function (event) {
          event.preventDefault(); // Prevent default form submission

          const vietTat = $("#viet_tat").val();
          const loaiDaoTao = $("#LoaiDaoTao").val();
          const heDaoTao = $("#he_dao_tao").val();
          const giaTriSoSanh = `${loaiDaoTao} (${heDaoTao})`;

          // Kiểm tra trùng lặp trước khi thêm mới
          $.ajax({
            url: "/kytubatdau/check",
            method: "POST",
            contentType: "application/json",
            data: JSON.stringify({
              viet_tat: vietTat,
              gia_tri_so_sanh: giaTriSoSanh,
            }),
            success: function (response) {
              // Nếu không trùng, tiến hành thêm mới
              addNewKyTuBD(vietTat, loaiDaoTao, heDaoTao, giaTriSoSanh);
            },
            error: function (xhr) {
              if (xhr.status === 409) {
                Swal.fire({
                  title: "Thông báo",
                  html:
                    xhr.responseJSON.message ||
                    "Kí tự bắt đầu với hệ đào tạo này đã tồn tại",
                  icon: "error",
                  confirmButtonText: "OK",
                  width: "auto",
                  padding: "20px",
                });
              } else {
                alert("Có lỗi xảy ra khi kiểm tra.");
              }
            },
          });
        });

        function addNewKyTuBD(vietTat, loaiDaoTao, heDaoTao, giaTriSoSanh) {
          $.ajax({
            url: "/kytubatdau",
            method: "POST",
            contentType: "application/json",
            data: JSON.stringify({
              viet_tat: vietTat,
              loai_dao_tao: loaiDaoTao,
              he_dao_tao: heDaoTao,
              gia_tri_so_sanh: giaTriSoSanh,
            }),
            success: function (response) {
              Swal.fire({
                title: "Thông báo",
                html: "Thêm mới thành công!",
                icon: "success",
                confirmButtonText: "OK",
                width: "auto",
                padding: "20px",
              }).then((result) => {
                if (result.isConfirmed) {
                  location.reload();
                }
              });
            },
            error: function (error) {
              alert("Có lỗi xảy ra khi thêm mới.");
            },
          });
        }
      });
    </script>
  </body>
</html>
