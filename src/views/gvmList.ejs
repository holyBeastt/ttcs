<!DOCTYPE html>
<html lang="en">

<head>
  <meta charset="UTF-8" />
  <meta name="viewport" content="width=device-width, initial-scale=1.0" />
  <title>H·ªçc Vi·ªán K·ªπ Thu·∫≠t M·∫≠t M√£</title>
  <link rel="stylesheet" href="/css/table.css" />
  <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap@5.2.3/dist/css/bootstrap.min.css" />
  <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap-icons@1.11.3/font/bootstrap-icons.css" />
  <link rel="stylesheet" href="/css/gvmList.css" />
  <link rel="stylesheet" href="/css/styles.css" />
  <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.6.0/css/all.min.css" />

  <style>
    /* T√πy ch·ªânh danh s√°ch g·ª£i √Ω */
    .ui-autocomplete {
      background: white;
      border: 1px solid #ccc;
      max-height: 200px;
      overflow-y: auto;
      box-shadow: 0px 4px 6px rgba(0, 0, 0, 0.1);
      font-size: 14px;
      padding: 5px;
      width: 200px ; /* Gi·∫£m ƒë·ªô r·ªông */
      font-size: 12px !important;
  }
  
  
    /* Hi·ªÉn th·ªã ƒë·∫πp h∆°n, kh√¥ng c·∫ßn hover */
    .ui-menu-item {
        padding: 8px;
        cursor: default;
    }
  </style>
</head>

<body>
  <!-- Ph·∫ßn header -->
  <%- include('header') %>

  <!-- Ph·∫ßn n·ªôi dung -->

  <div class="container-fluid box m-4">
    <!-- Main content -->
    <div class="gvmList">
      <div class="m-3">
        <div class="">
          <h1>DANH S√ÅCH GI·∫¢NG VI√äN M·ªúI</h1>
          <div class="header-actions">
            <button id="createGvm" class="bi bi-plus btn" onclick="addClass()">
              Th√™m gi·∫£ng vi√™n m·ªùi
            </button>
            <input type="text" placeholder="T√¨m ki·∫øm theo T√™n..." class="search" id="searchInput" />
              <input type="text" placeholder="T√¨m ki·∫øm theo B·ªô m√¥n" class="searchBoMon" id="searchBoMon" />

            <select id="filterByDepartment" class="filter">
              <option value="all">T·∫•t c·∫£</option>
              <% phongBanList.forEach(function(phongBan) { %>
                <option value="<%= phongBan.MaPhongBan %>">
                  <%= phongBan.TenPhongBan %>
                </option>
                <% }); %>
            </select>
            <script>
              // H√†m l·ªçc chung
              function filterTable() {
                let nameInput = document.getElementById("searchInput").value.toLowerCase();
                let boMonInput = document.getElementById('searchBoMon').value.toLowerCase();
                let departmentFilter = document.getElementById("filterByDepartment").value.trim();

                let table = document.getElementById("classTable");
                let tr = table.getElementsByTagName("tr");

                for (let i = 1; i < tr.length; i++) { // B·ªè qua h√†ng ti√™u ƒë·ªÅ
                  let nameCell = tr[i].getElementsByTagName("td")[2]; // T√™n gi·∫£ng vi√™n
                  let boMonCell = tr[i].getElementsByTagName("td")[5]; // B·ªô m√¥n
                  let departmentCell = tr[i].getElementsByTagName("td")[4]; // Khoa

                  // L·∫•y gi√° tr·ªã t·ª´ c√°c √¥
                  let nameValue = nameCell ? nameCell.textContent.toLowerCase() : '';
                  let boMonValue = boMonCell ? boMonCell.textContent.toLowerCase() : '';
                  let departmentValue = departmentCell ? departmentCell.textContent.trim() : '';

                  // Ki·ªÉm tra ƒëi·ªÅu ki·ªán l·ªçc
                  let nameMatch = nameValue.includes(nameInput);
                  let boMonMatch = boMonValue.includes(boMonInput);
                  let departmentMatch = (departmentFilter === "all" || departmentValue === departmentFilter);

                  // Hi·ªán ho·∫∑c ·∫©n h√†ng d·ª±a tr√™n c√°c ƒëi·ªÅu ki·ªán
                  if (nameMatch && boMonMatch && departmentMatch) {
                    tr[i].style.display = ""; // Hi·ªán h√†ng n·∫øu t·∫•t c·∫£ c√°c ƒëi·ªÅu ki·ªán ƒë·ªÅu kh·ªõp
                  } else {
                    tr[i].style.display = "none"; // ·∫®n h√†ng n·∫øu kh√¥ng kh·ªõp
                  }
                }
              }

              // G·ªçi h√†m l·ªçc khi c√≥ thay ƒë·ªïi trong c√°c √¥ t√¨m ki·∫øm
              document.getElementById("searchInput").addEventListener("keyup", filterTable);
              document.getElementById("searchBoMon").addEventListener("keyup", filterTable);
              document.getElementById("filterByDepartment").addEventListener("change", filterTable);
            </script>
          </div>
          <table class="class-table" id="classTable">
            <thead>
              <tr>
                <th style="width: 100px;">STT</th>
                <th>CƒÉn c∆∞·ªõc c√¥ng d√¢n</th>
                <th>T√™n gi·∫£ng vi√™n m·ªùi</th>
                <th>Ng√†y sinh</th>
                <th style="display: none;">Khoa</th>
                <th>B·ªô m√¥n</th>
                <th>H√†nh ƒë·ªông</th>
              </tr>
            </thead>
            <tbody>
              <% const options={ year: 'numeric' , month: '2-digit' , day: '2-digit' }; %>
                <% for (let i=0; i < gvmLists.length; i++) { %>
                  <tr>
                    <td>
                      <%= i + 1 %>
                    </td>
                    <td>
                      <%= gvmLists[i].CCCD %>
                    </td>
                    <td>
                      <%= gvmLists[i].HoTen %>
                    </td>
                    <td>
                      <%= new Date(gvmLists[i].NgaySinh).toLocaleDateString('vi-VN', options) %>
                    </td>
                    <td style="display: none;">
                      <%= gvmLists[i].MaPhongBan %>
                    </td>
                    <td id="BoMon">
                      <%= gvmLists[i].MonGiangDayChinh %>
                    </td>
                    <td>
                      <button class="action-button view"
                        onclick="viewClass(this, <%= parseInt(gvmLists[i].id_Gvm) - 1 %>)">
                        üëÅÔ∏è
                      </button>
                    </td>
                  </tr>
                  <% } %>
            </tbody>
          </table>

        </div>
      </div>
    </div>
    <script src="https://ajax.googleapis.com/ajax/libs/jquery/3.7.1/jquery.min.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/js/bootstrap.bundle.min.js"></script>

        <!-- Link script Sweet alert 2 -->
  <!-- SweetAlert2 CSS -->
  <link href="https://cdn.jsdelivr.net/npm/sweetalert2@11.6.16/dist/sweetalert2.min.css" rel="stylesheet">

  <!-- SweetAlert2 JavaScript -->
  <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11.6.16/dist/sweetalert2.all.min.js"></script>

<!-- Th√™m jQuery v√† jQuery UI -->
<link rel="stylesheet" href="https://code.jquery.com/ui/1.12.1/themes/base/jquery-ui.css">
<script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
<script src="https://code.jquery.com/ui/1.12.1/jquery-ui.js"></script>

<!-- jQuery UI CSS -->
<link rel="stylesheet" href="https://code.jquery.com/ui/1.12.1/themes/base/jquery-ui.css">

    <script>
      // // T√¨m ki·∫øm gi·∫£ng vi√™n m·ªùi theo t√™n
      // function searchClass() {
      //   let input = document.getElementById("searchInput").value.toLowerCase();
      //   let table = document.getElementById("classTable");
      //   let tr = table.getElementsByTagName("tr");

      //   for (let i = 1; i < tr.length; i++) {
      //     let td = tr[i].getElementsByTagName("td")[2];
      //     if (td) {
      //       let textValue = td.textContent || td.innerText;
      //       if (textValue.toLowerCase().indexOf(input) > -1) {
      //         tr[i].style.display = "";
      //       } else {
      //         tr[i].style.display = "none";
      //       }
      //     }
      //   }
      // }

      // // T√¨m ki·∫øm theo b·ªô m√¥n
      function searchBoMon() {
        const input = document.getElementById('searchBoMon');
        const filter = input.value.trim().toLowerCase(); // B·ªè kho·∫£ng tr·∫Øng v√† chuy·ªÉn ch·ªØ th∆∞·ªùng
        const tableRows = document.querySelectorAll('#classTable tr');

        tableRows.forEach(row => {
          const nameCell = row.querySelector('td:nth-child(6)'); // L·∫•y √¥ ch·ª©a b·ªô m√¥n ·ªü c·ªôt th·ª© 6

          if (nameCell) {
            const name = nameCell.textContent.trim().toLowerCase(); // L·∫•y n·ªôi dung text c·ªßa √¥ b·ªô m√¥n

            if (filter === '' || name.includes(filter)) {
              row.style.display = ''; // Hi·ªán h√†ng n·∫øu kh·ªõp ho·∫∑c filter tr·ªëng
            } else {
              row.style.display = 'none'; // ·∫®n h√†ng n·∫øu kh√¥ng kh·ªõp
            }
          }
        });
      }


      // Th√™m l·ªõp h·ªçc
      function addClass() {
        window.location.href = "/daotaoxemhd/daotaonhap";
      }

      // Ch·ªânh s·ª≠a gvm
      function viewClass(button, index) {
        var hre = "/viewGvm/" + index;
        window.location.href = hre;
      }
    </script>

    <script>
      // L·∫•y query string t·ª´ URL
      const urlParams = new URLSearchParams(window.location.search);
      const message = urlParams.get("message");

      // L·∫•y ph·∫ßn t·ª≠ div ƒë·ªÉ hi·ªÉn th·ªã th√¥ng b√°o
      const messageDiv = document.getElementById("message");

      // Hi·ªÉn th·ªã th√¥ng b√°o d·ª±a tr√™n gi√° tr·ªã c·ªßa message

      if (message === "insertSuccess") {
        Swal.fire({
          title: 'Th√¥ng b√°o',
          html: "Th√†nh c√¥ng",
          icon: 'success',
          confirmButtonText: 'OK',
          width: 'auto', // T·ª± ƒë·ªông ƒëi·ªÅu ch·ªânh chi·ªÅu r·ªông
          padding: '20px', // Gi·ªØ kho·∫£ng c√°ch cho n·ªôi dung
        });
      } else if (message === "duplicateCCCD") {
        Swal.fire({
          title: 'Th√¥ng b√°o',
          html: "S·ªë CCCD ƒë√£ t·ªìn t·∫°i. Vui l√≤ng ki·ªÉm tra l·∫°i s·ªë CCCD.",
          icon: 'info',
          confirmButtonText: 'OK',
          width: 'auto', // T·ª± ƒë·ªông ƒëi·ªÅu ch·ªânh chi·ªÅu r·ªông
          padding: '20px', // Gi·ªØ kho·∫£ng c√°ch cho n·ªôi dung
        });
      } else if (message === "insertFalse") {
        Swal.fire({
          title: 'Th√¥ng b√°o',
          html: "ƒê√£ x·∫£y ra l·ªói trong qu√° tr√¨nh th√™m gi·∫£ng vi√™n.",
          icon: 'error',
          confirmButtonText: 'OK',
          width: 'auto', // T·ª± ƒë·ªông ƒëi·ªÅu ch·ªânh chi·ªÅu r·ªông
          padding: '20px', // Gi·ªØ kho·∫£ng c√°ch cho n·ªôi dung
        });
      } else if (message == null) {
        // alert(message);
      } else {
        alert(message);
      }


      // Sau khi hi·ªÉn th·ªã th√¥ng b√°o, x√≥a query string ƒë·ªÉ tr√°nh hi·ªÉn th·ªã l·∫°i khi refresh
      if (message) {
        // S·ª≠ d·ª•ng window.history ƒë·ªÉ x√≥a query string m√† kh√¥ng refresh l·∫°i trang
        const newUrl = window.location.origin + window.location.pathname;
        window.history.replaceState({}, document.title, newUrl);
      }
    </script>

    <!-- Ph·∫ßn ph√¢n quy·ªÅn -->
    <script>
      document.addEventListener("DOMContentLoaded", () => {

        // Th√™m s·ª± ki·ªán click cho ph·∫ßn t·ª≠ c√≥ id="ThongTinGD"
        const ThongTinGD = document.getElementById("ThongTinGD");

        ThongTinGD.addEventListener("click", function (event) {
          event.preventDefault(); // NgƒÉn ch·∫∑n h√†nh vi m·∫∑c ƒë·ªãnh c·ªßa li√™n k·∫øt

          const isKhoa = localStorage.getItem("isKhoa"); // L·∫•y role t·ª´ localStorage

          if (isKhoa == 0) {
            // N·∫øu l√† ƒë√†o t·∫°o ho·∫∑c t√†i ch√≠nh
            window.location.href = "/info2";
          } else {
            window.location.href = "/info";
          }
        });

        // Th√™m s·ª± ki·ªán click cho ph·∫ßn t·ª≠ c√≥ id="Home"

        const Home = document.getElementById("Home");

        Home.addEventListener("click", function (event) {
          event.preventDefault(); // NgƒÉn ch·∫∑n h√†nh vi m·∫∑c ƒë·ªãnh c·ªßa li√™n k·∫øt

          const isKhoa = localStorage.getItem("isKhoa");

          if (isKhoa == 0) {
            // N·∫øu l√† ƒë√†o t·∫°o ho·∫∑c t√†i ch√≠nh
            window.location.href = "/maindt";
          } else {
            window.location.href = "/mainkhoa";
          }
        });
      });
    </script>

    <script>
      function filterClasses() {
        let filterValue = document.getElementById("filterByDepartment").value.trim();
        let table = document.getElementById("classTable");
        let tr = table.getElementsByTagName("tr");

        for (let i = 1; i < tr.length; i++) { // B·ªè qua h√†ng ti√™u ƒë·ªÅ
          let td = tr[i].getElementsByTagName("td")[4]; // ƒê·∫£m b·∫£o c·ªôt ch·ª©a m√£ ph√≤ng ban l√† c·ªôt th·ª© 5
          if (td) {
            let textValue = (td.textContent || td.innerText).trim(); // Lo·∫°i b·ªè kho·∫£ng tr·∫Øng th·ª´a

            // So s√°nh ch√≠nh x√°c gi√° tr·ªã m√£ ph√≤ng ban
            if (filterValue === "all" || textValue === filterValue) {
              tr[i].style.display = ""; // Hi·ªÉn th·ªã h√†ng
            } else {
              tr[i].style.display = "none"; // ·∫®n h√†ng
            }
          }
        }
      }

    </script>

    <script>
      document.getElementById("changePasswordLink").addEventListener("click", function (event) {
        event.preventDefault(); // NgƒÉn ch·∫∑n h√†nh vi m·∫∑c ƒë·ªãnh c·ªßa th·∫ª a
        const tenDangNhap = localStorage.getItem("TenDangNhap"); // L·∫•y TenDangNhap t·ª´ localStorage

        if (tenDangNhap) {
          // Chuy·ªÉn h∆∞·ªõng ƒë·∫øn trang changePassword v√† truy·ªÅn TenDangNhap trong URL
          window.location.href = `/changePassword?tenDangNhap=${encodeURIComponent(tenDangNhap)}`;
        } else {
          alert("Kh√¥ng t√¨m th·∫•y TenDangNhap trong localStorage.");
        }
      });
    </script>


    <script>
      document.addEventListener('DOMContentLoaded', async function () {
        const MaPhongBan = localStorage.getItem("MaPhongBan");

        try {
          const response = await fetch('/bo-mon', {
            method: 'POST', // Thay ƒë·ªïi th√†nh POST
            headers: {
              'Content-Type': 'application/json'
            },
            body: JSON.stringify({ MaPhongBan }) // G·ª≠i MaPhongBan trong th√¢n y√™u c·∫ßu
          });

          if (!response.ok) {
            throw new Error(`Error: ${response.status} - ${response.statusText}`);
          }

          const data = await response.json(); // Chuy·ªÉn ƒë·ªïi d·ªØ li·ªáu JSON
          localStorage.setItem('boMon', JSON.stringify(data));
          // Th√™m v√†o b·∫£ng ho·∫∑c x·ª≠ l√Ω d·ªØ li·ªáu theo nhu c·∫ßu c·ªßa b·∫°n

        } catch (error) {
          console.error('C√≥ l·ªói x·∫£y ra khi l·∫•y d·ªØ li·ªáu b·ªô m√¥n:', error);
        }
      });

      $(document).ready(function () {
        // C·∫•u h√¨nh autocomplete
        $("#searchBoMon").autocomplete({
            source: function (request, response) {
                const value = request.term.toLowerCase();
                const khoaValue = $("#filterByDepartment").val() || "all";
                let boMon = JSON.parse(localStorage.getItem("boMon")) || [];
    
                let suggestions = boMon
                    .filter(item => khoaValue === 'all' || item.MaPhongBan === khoaValue)
                    .map(item => `${item.MaPhongBan} - ${item.TenBoMon} - ${item.MaBoMon}`);
    
                // N·∫øu c√≥ gi√° tr·ªã nh·∫≠p v√†o th√¨ l·ªçc
                if (value) {
                    suggestions = suggestions.filter(name => name.toLowerCase().includes(value));
                }
    
                response(suggestions);
            },
            minLength: 0, // Cho ph√©p hi·ªÉn th·ªã ngay khi nh·∫•n v√†o √¥ input
            select: function (event, ui) {
                let parts = ui.item.value.split("-");
                let processedName = parts.slice(2).join("-").trim();
                $("#searchBoMon").val(processedName);
                filterTable();
                return false;
            }
        });
    
        // Khi click v√†o √¥ input, hi·ªÉn th·ªã danh s√°ch g·ª£i √Ω ngay l·∫≠p t·ª©c
        $("#searchBoMon").on("focus", function () {
            $(this).autocomplete("search", ""); // G·ªçi autocomplete v·ªõi chu·ªói r·ªóng ƒë·ªÉ hi·ªÉn th·ªã to√†n b·ªô
        });
    });
    
      // H√†m ·∫©n g·ª£i √Ω


      // H√†m x·ª≠ l√Ω t√¨m ki·∫øm theo t√™n b·ªô m√¥n
      function filterBoMon() {
        const input = document.getElementById('filterBoMon');
        const filter = input.value.trim().toLowerCase(); // B·ªè kho·∫£ng tr·∫Øng v√† chuy·ªÉn ch·ªØ th∆∞·ªùng
        const tableRows = document.querySelectorAll('#tableBody tr');

        tableRows.forEach(row => {
          const nameCell = row.querySelector('td:nth-child(7)'); // L·∫•y √¥ ch·ª©a t√™n b·ªô m√¥n ·ªü c·ªôt th·ª© 7
          const checkbox = row.querySelector('input[type="checkbox"]');

          if (nameCell) {
            const name = nameCell.textContent.trim().toLowerCase(); // L·∫•y n·ªôi dung text c·ªßa √¥ b·ªô m√¥n v√† chuy·ªÉn th√†nh ch·ªØ th∆∞·ªùng

            if (filter === '' || name.includes(filter)) {
              row.style.display = ''; // Hi·ªán h√†ng n·∫øu kh·ªõp ho·∫∑c filter tr·ªëng
              checkbox.disabled = false; // K√≠ch ho·∫°t checkbox
            } else {
              row.style.display = 'none'; // ·∫®n h√†ng n·∫øu kh√¥ng kh·ªõp
              checkbox.disabled = true; // V√¥ hi·ªáu h√≥a checkbox
            }
          }
        });
      }


    </script>
    <script>
      document.getElementById("infome").addEventListener("click", function (event) {
        event.preventDefault(); // NgƒÉn ch·∫∑n h√†nh vi m·∫∑c ƒë·ªãnh c·ªßa th·∫ª a
        const id_User = localStorage.getItem("id_User"); // L·∫•y id_User t·ª´ localStorage\
        if (id_User) {
          // Chuy·ªÉn h∆∞·ªõng ƒë·∫øn trang infome v√† truy·ªÅn id_User trong URL
          window.location.href = `/infome/${id_User}`;
        } else {
          alert("Kh√¥ng t√¨m th·∫•y id_User trong localStorage.");
        }
      });
    </script>

    <script>
      document.addEventListener("DOMContentLoaded", () => {
        const role = localStorage.getItem("userRole");

        // ·∫®n button ngay khi trang ƒë∆∞·ª£c t·∫£i
        const actionButton = document.getElementById('changeMessage');
        //·∫®n site th√™m th√¥ng b√°o
        if (role === "Duy·ªát") {
          actionButton.style.display = '';
        } else {
          actionButton.style.display = 'none';
        }
      });
    </script>
    <script>
      document.getElementById("changeMessage").addEventListener("click", function (event) {
        event.preventDefault(); // NgƒÉn ch·∫∑n h√†nh vi m·∫∑c ƒë·ªãnh c·ªßa th·∫ª a
        const MaPhongBan = localStorage.getItem("MaPhongBan"); // L·∫•y MaPhongBan t·ª´ localStorage

        if (MaPhongBan) {
          // Chuy·ªÉn h∆∞·ªõng ƒë·∫øn trang changeMessage v√† truy·ªÅn MaPhongBan trong URL
          window.location.href = `/changeMessage/${MaPhongBan}`;
        } else {
          alert("Kh√¥ng t√¨m th·∫•y MaPhongBan trong localStorage.");
        }
      });
    </script>

      <!-- Ph√¢n quy·ªÅn -->
  <script>
    document.addEventListener("DOMContentLoaded", () => {
      const isKhoa = localStorage.getItem("isKhoa");
      const role = localStorage.getItem("userRole");

      // ·∫®n button ngay khi trang ƒë∆∞·ª£c t·∫£i
      const createGvm = document.getElementById("createGvm");
      // ·∫®n ph·∫ßn l·ªçc khoa n·∫øu role l√† Khoa
      const filterByDepartment =
        document.getElementById("filterByDepartment");

      if (isKhoa == 0 || role.toLowerCase() == 'gv') {
        createGvm.style.display = "none"; // ·∫®n button
        const editButtons = document.querySelectorAll('.action-button.edit');
        editButtons.forEach(button => button.style.visibility = 'hidden');
      }

      if (isKhoa == 1) {
        if (role.toLowerCase() == 'gv') {
          filterByDepartment.style.visibility = "hidden";
        } else {
          filterByDepartment.style.display = "none";
        }
      }
    });
  </script>
</body>

</html>