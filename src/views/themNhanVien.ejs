<!DOCTYPE html>
<html lang="en">

<head>
  <meta charset="UTF-8" />
  <meta name="viewport" content="width=device-width, initial-scale=1.0" />
  <title>Thêm Nhân Viên</title>
  <link rel="stylesheet" href="/css/admin.css" />
  <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap@5.2.3/dist/css/bootstrap.min.css" />
  <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap-icons@1.11.3/font/bootstrap-icons.css" />
  <link rel="stylesheet" href="/css/styles.css" />
  <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
</head>

<body>
  <%- include('adminHeader') %>
    <div class="container my-5 box">
      <h2>Thêm Nhân Viên Mới</h2>

      <form id="themNhanVienForm" action="/themNhanVien" method="POST" onsubmit="setDefaultPassword()">
        <div class="row mb-3">
          <div class="col-md-4 input-wrapper">
            <label for="TenNhanVien" class="form-label">Tên Nhân Viên*</label>
            <input type="text" class="form-control" id="TenNhanVien" name="TenNhanVien" required />
          </div>
          <div class="col-md-4 input-wrapper">
            <label for="NgaySinh" class="form-label">Ngày Sinh*</label>
            <input type="date" class="form-control" id="NgaySinh" name="NgaySinh" required />
          </div>
          <div class="col-md-4 input-wrapper">
            <label for="HocVi" class="form-label">Học Hàm/Học Vị*</label>
            <select class="form-control" name="HocVi" id="HocVi">
              <option value="Cử nhân">Cử nhân</option>
              <option value="Kỹ sư">Kỹ sư</option>
              <option value="Thạc sĩ">Thạc sĩ</option>
              <option value="Tiến sĩ">Tiến sĩ</option>
              <option value="Phó giáo sư. Tiến sĩ">Phó giáo sư. Tiến sĩ</option>
              <option value="Giáo sư. Tiến sĩ">Giáo sư. Tiến sĩ</option>
            </select>
          </div>
        </div>
        <div class="row mb-3">
          <div class="col-md-4 input-wrapper">
            <label for="TenDangNhap" class="form-label">Tên đăng nhập*</label>
            <input type="text" class="form-control" id="TenDangNhap" name="TenDangNhap" required />
          </div>
          <div class="col-md-4 input-wrapper d-flex justify-content-between">
            <div>
              <label for="ChucVu" class="form-label">Chức Vụ*</label>
              <input type="text" class="form-control" id="ChucVu" name="ChucVu" required />
            </div>
            <div>
              <label for="PhanTramMienGiam" class="form-label">Phần trăm miễn giảm</label>
              <input type="text" class="form-control" id="PhanTramMienGiam" name="PhanTramMienGiam"
                style="text-align: center" readonly />
            </div>
          </div>
          <div class="col-md-4 input-wrapper d-flex justify-content-between">
            <div>
              <label for="HSL" class="form-label">Hệ số lương*</label>
              <input type="text" class="form-control" id="HSL" name="HSL" required />
            </div>
            <div>
              <label for="Luong" class="form-label">Lương*</label>
              <input type="text" class="form-control" id="Luong" name="Luong" />
            </div>
          </div>
          <div class="col-md-4 input-wrapper" hidden>
            <label for="MatKhau" class="form-label">Mật khẩu</label>
            <input type="text" class="form-control" id="MatKhau" name="MatKhau" />
          </div>
        </div>
        <div class="row mb-3">
          <div class="col-md-4 input-wrapper">
            <label for="LyDo">Lý do miễn giảm:</label>
            <select class="form-control" name="LyDo" id="LyDo" onchange="layPhanTramTuLyDo()"></select>
          </div>
          <div class="col-md-4 input-wrapper">
            <label for="MonGiangDayChinh" class="form-label">Bộ môn</label>
            <select class="form-control" name="MonGiangDayChinh" id="MonGiangDayChinh"></select>
          </div>
          <div class="col-md-4 input-wrapper d-flex justify-content-between">
            <div class="ml-2">
              <label for="MaPhongBan" class="form-label">Mã Phòng Ban</label>
              <select class="form-control" id="MaPhongBan" name="MaPhongBan" onchange="fetchQuyen(), fetchBoMon()">
                <% departmentLists.forEach(function(departmentLists) { %>
                  <option value="<%= departmentLists.MaPhongBan %>">
                    <%= departmentLists.MaPhongBan %>
                  </option>
                  <% }); %>
              </select>
            </div>
            <div>
              <label for="Quyen" class="form-label">Quyền</label>
              <select id="Quyen" class="form-control" name="Quyen" style="width: 250px">
                <option value="GV">Giảng Viên</option>
                <option value="GV_CNBM">Giáo vụ - Chủ nhiệm bộ môn</option>
                <option value="Lãnh đạo khoa">Lãnh đạo khoa</option>
              </select>
            </div>
          </div>
        </div>
        <div class="row mb-3">
          <div class="col-md-4 input-wrapper d-flex justify-content-between">
            <div>
              <label for="gioitinh" class="form-label">Giới tính:</label>
              <select class="form-control" name="GioiTinh" id="gioitinh" style="width: auto">
                <option value="Nam">Nam</option>
                <option value="Nữ">Nữ</option>
              </select>
            </div>
            <div>
              <label for="CCCD" class="form-label">CCCD*</label>
              <input type="text" class="form-control" id="CCCD" name="CCCD" style="width: 300px" required />
            </div>
          </div>
          <div class="col-md-4 input-wrapper">
            <label for="NgayCapCCCD" class="form-label">Ngày Cấp CCCD</label>
            <input type="date" class="form-control" id="NgayCapCCCD" name="NgayCapCCCD" />
          </div>
          <div class="col-md-4 input-wrapper">
            <label for="NoiCapCCCD" class="form-label">Nơi Cấp CCCD</label>
            <input type="text" class="form-control" id="NoiCapCCCD" name="NoiCapCCCD" />
          </div>
        </div>
        <div class="row mb-3">
          <div class="col-md-4 input-wrapper">
            <label for="DienThoai" class="form-label">Điện Thoại</label>
            <input type="tel" class="form-control" id="DienThoai" name="DienThoai" />
          </div>
          <div class="col-md-4 input-wrapper">
            <label for="DiaChiCCCD" class="form-label">Địa Chỉ trong CCCD</label>
            <input type="text" class="form-control" id="DiaChiCCCD" name="DiaChiCCCD" />
          </div>
          <div class="col-md-4 input-wrapper">
            <label for="CacMonLienQuan" class="form-label">Các Môn Liên Quan</label>
            <input type="text" class="form-control" id="CacMonLienQuan" name="CacMonLienQuan" />
          </div>
        </div>
        <div class="row mb-3">
          <div class="col-md-4 input-wrapper">
            <label for="NoiCongTac" class="form-label">Nơi Công Tác</label>
            <input type="text" class="form-control" id="NoiCongTac" name="NoiCongTac" />
          </div>
          <div class="col-md-4 input-wrapper">
            <label for="DiaChiHienNay" class="form-label">Địa Chỉ Hiện Nay</label>
            <input type="text" class="form-control" id="DiaChiHienNay" name="DiaChiHienNay" />
          </div>
          <div class="col-md-4 input-wrapper">
            <label for="MaSoThue" class="form-label">Mã Số Thuế</label>
            <input type="text" class="form-control" id="MaSoThue" name="MaSoThue" />
          </div>
        </div>
        <div class="row mb-3">
          <div class="col-md-4 input-wrapper">
            <label for="SoTaiKhoan" class="form-label">Số Tài Khoản</label>
            <input type="text" class="form-control" id="SoTaiKhoan" name="SoTaiKhoan" />
          </div>
          <div class="col-md-4 input-wrapper">
            <label for="NganHang" class="form-label">Ngân Hàng</label>
            <input type="text" class="form-control" id="NganHang" name="NganHang" />
          </div>
          <div class="col-md-4 input-wrapper">
            <label for="ChiNhanh" class="form-label">Chi Nhánh</label>
            <input type="text" class="form-control" id="ChiNhanh" name="ChiNhanh" />
          </div>
        </div>
        <div class="row mb-3">
          <div class="col-md-4 input-wrapper">
            <label for="tinhTrang">Tình trạng giảng dạy:</label>
            <select class="form-control" name="tinhTrangGiangDay" id="tinhTrang">
              <option value="1">Đang giảng dạy</option>
              <option value="0">Đã ngừng giảng dạy</option>
            </select>
          </div>
        </div>
        <button type="submit" class="btn" id="btnThemNhanVien">
          Thêm Nhân Viên
        </button>
        <button type="button" class="btn mx-5" onclick="window.location.href='/nhanVien'">
          Trở về
        </button>
        <h6 class="p-2">Ghi chú: Những ô có dấu * là thông tin bắt buộc.</h6>
      </form>
    </div>

    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.2.3/dist/js/bootstrap.bundle.min.js"></script>
    <script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
    <script>
      $(document).ready(function () {
        $("#themNhanVienForm").on("submit", function (e) {
          e.preventDefault();

          var formData = $(this).serialize();

          $.ajax({
            url: "/themNhanVien",
            type: "POST",
            data: formData,
            success: function (response) {
              console.log("res = ", response);
              Swal.fire({
                title: "Thông báo",
                text: response.message,
                icon: "success",
                confirmButtonText: "Đồng ý",
              }).then(() => {
                window.location.href = "/nhanVien"; // Chuyển hướng sau khi người dùng nhấn "Đồng ý"
              });
            },
            error: function (xhr, status, error) {
              try {
                // Nếu responseText là JSON, parse và lấy thông báo lỗi
                var response = JSON.parse(xhr.responseText);
                Swal.fire({
                  title: "Thông báo",
                  text: response.message || "Đã xảy ra lỗi",
                  icon: "error",
                  confirmButtonText: "Đồng ý",
                });
              } catch (e) {
                // Nếu không parse được, hiển thị toàn bộ nội dung
                Swal.fire({
                  title: "Thông báo",
                  text: "Đã xảy ra lỗi: " + xhr.responseText,
                  icon: "error",
                  confirmButtonText: "Đồng ý",
                });
              }
            },
          });
        });
      });
    </script>
    <script>
      function setDefaultPassword(event) {
        const matKhauField = document.getElementById("MatKhau");

        // Nếu mật khẩu chưa nhập, đặt mật khẩu mặc định là "1"
        if (matKhauField.value === "") {
          matKhauField.value = "1";
        }
      }
    </script>

    <script>
      // Helper function để decode HTML entities
      function decodeHTMLEntities(text) {
        const textArea = document.createElement('textarea');
        textArea.innerHTML = text;
        return textArea.value;
      }

      function fetchQuyen() {
        const maPhongBan = decodeHTMLEntities(document.getElementById("MaPhongBan").value);
        // Gọi API để lấy thông tin isKhoa
        fetch(`/getQuyenByPhongBan?MaPhongBan=${maPhongBan}`)
          .then((response) => response.json())
          .then((data) => {
            const quyenSelect = document.getElementById("Quyen");
            quyenSelect.innerHTML = ""; // Xóa các option cũ

            // Biến để xác định phòng Khảo Thí
            const phongKhaoThi = (maPhongBan === "KT&ĐBCL" && data.isKhoa === 0);

            // Kiểm tra isKhoa và cập nhật quyền dựa theo giá trị
            if (data.isKhoa === 1) {
              quyenSelect.innerHTML = `
          <option value="GV">Giảng Viên</option>
          <option value="GV_CNBM">Giáo vụ - Chủ nhiệm bộ môn</option>
          <option value="Lãnh đạo khoa">Lãnh đạo khoa</option>`;
            } else if (phongKhaoThi) {
              // Trường hợp riêng cho phòng Khảo Thí (KT)
              quyenSelect.innerHTML = `
          <option value="Lãnh đạo">Lãnh đạo</option>
          <option value="Trợ lý">Trợ lý</option>
          <option value="Thường">Thường</option>`;
            } else {
              // Các phòng ban hành chính khác
              quyenSelect.innerHTML = `
          <option value="Thường">Thường</option>
          <option value="Duyệt">Duyệt</option>`;
            }
          })
          .catch((error) => console.error("Error:", error));
      }
    </script>
    <script>
      document
        .getElementById("changePasswordLink")
        .addEventListener("click", function (event) {
          event.preventDefault(); // Ngăn chặn hành vi mặc định của thẻ a
          const tenDangNhap = localStorage.getItem("TenDangNhap"); // Lấy TenDangNhap từ localStorage

          if (tenDangNhap) {
            // Chuyển hướng đến trang changePassword và truyền TenDangNhap trong URL
            window.location.href = `/changePassword?tenDangNhap=${encodeURIComponent(
              tenDangNhap
            )}`;
          } else {
            alert("Không tìm thấy TenDangNhap trong localStorage.");
          }
        });
    </script>
    <script>
      document.addEventListener("DOMContentLoaded", function () {
        const maPhongBan = document.getElementById("MaPhongBan").value;
        fetch(`/getMaBoMon/${maPhongBan}`)
          .then((response) => response.json())
          .then((data) => {
            console.log(data); // In ra phản hồi để kiểm tra
            const maBoMonSelect = document.getElementById("MonGiangDayChinh");

            if (!maBoMonSelect) {
              console.error("Không tìm thấy phần tử với ID 'MonGiangDayChinh'");
              return;
            }

            maBoMonSelect.innerHTML = ""; // Xóa các option cũ

            // Kiểm tra success và dữ liệu maBoMon
            if (data.success && data.maBoMon) {
              data.maBoMon.forEach((item) => {
                const option = document.createElement("option");
                option.value = item.MaBoMon; // Giả sử MaBoMon là thuộc tính cần làm value
                option.textContent = item.TenBoMon; // Giả sử TenBoMon là tên bộ môn cần hiển thị

                maBoMonSelect.appendChild(option); // Thêm option vào select
              });
            } else {
              console.error(
                "Dữ liệu maBoMon không tồn tại hoặc không thành công"
              );
            }
          })
          .catch((error) => console.error("Error:", error));
        fetchLyDo(); // Gọi hàm này để lấy lý do miễn giảm khi trang được tải
      });
    </script>
    <script>
      function fetchBoMon() {
        const maPhongBan = document.getElementById("MaPhongBan").value;
        fetch(`/getMaBoMon/${maPhongBan}`)
          .then((response) => response.json())
          .then((data) => {
            console.log(data); // In ra phản hồi để kiểm tra
            const maBoMonSelect = document.getElementById("MonGiangDayChinh");

            if (!maBoMonSelect) {
              console.error("Không tìm thấy phần tử với ID 'MonGiangDayChinh'");
              return;
            }

            maBoMonSelect.innerHTML = ""; // Xóa các option cũ

            // Kiểm tra success và dữ liệu maBoMon
            if (data.success && data.maBoMon) {
              data.maBoMon.forEach((item) => {
                const option = document.createElement("option");
                option.value = item.MaBoMon; // Giả sử MaBoMon là thuộc tính cần làm value
                option.textContent = item.TenBoMon; // Giả sử TenBoMon là tên bộ môn cần hiển thị

                maBoMonSelect.appendChild(option); // Thêm option vào select
              });
            } else {
              console.error(
                "Dữ liệu maBoMon không tồn tại hoặc không thành công"
              );
            }
          })
          .catch((error) => console.error("Error:", error));
      }
    </script>
    <script>
      function fetchLyDo() {
        fetch(`/getmiengiam`)
          .then((response) => response.json())
          .then((data) => {
            const lyDoSelect = document.getElementById("LyDo");
            lyDoSelect.innerHTML = ""; // Xóa các option cũ

            data.lydo.forEach((item) => {
              const option = document.createElement("option");
              option.value = item.LyDo; // hoặc item.LyDo tuỳ bạn muốn lưu gì
              option.textContent = item.LyDo;
              lyDoSelect.appendChild(option);
            });
            layPhanTramTuLyDo(); // Gọi hàm này để lấy phần trăm miễn giảm khi trang được tải
          })
          .catch((error) => console.error("Error:", error));
      }
    </script>
    <script>
      function layPhanTramTuLyDo() {
        const lyDoValue = document.getElementById("LyDo").value;

        if (!lyDoValue) {
          document.getElementById("PhanTramMienGiam").value = "";
          return;
        }

        fetch(`/getphantram/${lyDoValue}`)
          .then((response) => response.json())
          .then((data) => {
            document.getElementById("PhanTramMienGiam").value =
              data.phanTram[0].PhanTramMienGiam + " %";
          })
          .catch((error) => {
            console.error("Lỗi khi lấy phần trăm miễn giảm:", error);
            document.getElementById("PhanTramMienGiam").value = "";
          });
      }
    </script>
</body>

</html>