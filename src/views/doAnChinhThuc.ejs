<!DOCTYPE html>
<html lang="en">

<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>Học Viện Kỹ Thuật Mật Mã</title>
  <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap@5.2.3/dist/css/bootstrap.min.css">
  <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap-icons@1.11.3/font/bootstrap-icons.css">
  <link rel="stylesheet" href="/css/styles.css">
  <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.6.0/css/all.min.css">
  <style>
    /* CSS cho bảng */
    .table {
      width: 100%;
      border-collapse: collapse;
      margin-top: 20px;
    }

    .table th,
    .table td {
      padding: 10px;
      text-align: left;
      border: 1px solid #dee2e6;
    }

    .table th {
      background-color: #007bff;
      color: white;
      font-weight: bold;
    }

    .table tbody tr:nth-child(even) {
      background-color: #f8f9fa;
    }

    .table tbody tr:hover {
      background-color: #e2e6ea;
    }

    .table td {
      vertical-align: middle;
    }

    .bg-custom {
      background-color: #f8f9fa;
      padding: 20px;
      border-radius: 8px;
      box-shadow: 0 0 10px rgba(0, 0, 0, 0.1);
    }

    .spinner-border {
      position: fixed;
      left: 50%;
      top: 50%;
      transform: translate(-50%, -50%);
      z-index: 1000;
    }



    /* Đảm bảo menu con không hiển thị mặc định */
    .dropdown-submenu .dropdown-menu {
      display: none;
      position: absolute;
      left: 100%;
      top: 0;
    }

    /* Hiển thị menu con khi hover */
    .dropdown-submenu:hover .dropdown-menu {
      display: block;
    }
  </style>

  <script src="https://ajax.googleapis.com/ajax/libs/jquery/3.7.1/jquery.min.js"></script>
  <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/js/bootstrap.bundle.min.js"></script>
</head>

<body>
  <!-- Phần header -->
  <%- include('header') %>

    <!-- Phần nội dung -->

    <div class="container-fluid box m-4  ">
      <div class="mx-5 flex-grow-1">
        <div class="d-flex justify-content-start align-items-end mb-3">

          <!-- Combo box Đợt -->
          <select class="form-select w-100px mx-1 selectop" id="combobox-dot">
            <option value="">Đợt</option>
          </select>

          <select class="form-select w-100px mx-1 selectop" id="combobox-ki">
            <option value="">Kì</option>
          </select>

          <!-- Combo box Năm -->
          <select class="form-select mx-1 selectop" id="NamHoc" style="width: max-content">
            <option value="">Chọn năm học</option>
          </select>

          <!-- Combo box với các giá trị CNTT, ATTT, DTVT -->
          <select class="form-select w-100px mx-1 selectop" id="MaPhongBan">
            <option value="">Chọn khoa</option>
          </select>

          <button class="btn mx-1" id="render" style="margin-bottom: 0px; height: 45px;">Hiển thị</button>

          <button class="btn mx-1" id="export" onclick="exportDoAnChinhThuc()"
            style="margin-bottom: 0px; height: 45px; display: none;">Xuất file</button>

        </div>
        <div class="overflow-auto">
          <table class="table table-bordered">
            <thead>
              <tr id="table-header"></tr>
            </thead>
            <tbody id="data-table-body"></tbody>
          </table>
        </div>
      </div>
    </div>
    </div>
    <script src="https://ajax.googleapis.com/ajax/libs/jquery/3.7.1/jquery.min.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/js/bootstrap.bundle.min.js"></script>

    <!-- Link script Sweet alert 2 -->
    <!-- SweetAlert2 CSS -->
    <link href="https://cdn.jsdelivr.net/npm/sweetalert2@11.6.16/dist/sweetalert2.min.css" rel="stylesheet">

    <!-- SweetAlert2 JavaScript -->
    <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11.6.16/dist/sweetalert2.all.min.js"></script>
    <!-- ẩn hiện các chức năng -->
    <script>
      document.addEventListener("DOMContentLoaded", function () {
        const isKhoa = localStorage.getItem("isKhoa");
        const role = localStorage.getItem("userRole");
        const MaPhongBan = localStorage.getItem("MaPhongBan");

        // hideButton2 ẩn các chức năng thêm sửa xóa
        unhideButton2(role, MaPhongBan);
      });

      function unhideButton2(role, MaPhongBan) {
        if (role == "Duyệt" && MaPhongBan == "DAOTAO"
          || role == "Lãnh đạo khoa" || role == "GV_CNBM"
        ) {
          const exportBtn = document.getElementById("export");

          exportBtn.style.display = "block";
        }
      }
    </script>
    <script>
      async function exportDoAnChinhThuc() {
        const tableBody = document.getElementById("data-table-body");
        let NamValue = document.getElementById('NamHoc').value;
        let KhoaValue = document.getElementById('MaPhongBan').value;



        // Khởi tạo mảng chứa dữ liệu
        const tableData = [];

        // Lặp qua từng hàng trong tbody
        Array.from(tableBody.querySelectorAll("tr")).forEach(row => {
          const cells = row.querySelectorAll("td");

          // Đưa dữ liệu từng ô vào một đối tượng
          const rowData = {
            SinhVien: cells[0]?.innerText.trim(),
            MaSV: cells[1]?.innerText.trim(),
            Khoa: cells[2]?.innerText.trim(),
            TenDeTai: cells[3]?.innerText.trim(),
            GiangVienHuongDan: cells[4]?.innerText.trim(),
            NamHoc: NamValue,
          };

          tableData.push(rowData);
        });

        console.log(tableData)
        try {
          const response = await fetch('/doan-export-word', {
            method: 'POST',
            headers: {
              'Content-Type': 'application/json',
            },
            body: JSON.stringify(tableData)
          });

          if (!response.ok) {
            const errorData = await response.json();
            throw new Error(errorData.message || 'Lỗi khi xuất file Word');
          }

          // Tạo blob từ phản hồi
          const blob = await response.blob();

          // Tạo URL cho blob
          const url = window.URL.createObjectURL(blob);

          // Tạo phần tử tải xuống
          const a = document.createElement('a');
          a.href = url;
          a.download = `do_an_chinh_thuc_khoa_${KhoaValue}_nam_${NamValue}.docx`;
          document.body.appendChild(a);

          // Kích hoạt tải xuống
          a.click();

          // Dọn dẹp
          window.URL.revokeObjectURL(url);
          document.body.removeChild(a);
        } catch (error) {
          console.error('Lỗi:', error);
          alert('Đã xảy ra lỗi khi xuất file Word: ' + error.message);
        }
      };
    </script>

    <script>
      // Lắng nghe sự kiện click vào button
      document.getElementById('render').addEventListener('click', function () {
        loadData(); // Gọi hàm loadData khi button được click
      });


      async function loadData() {
        try {
          // Biến để lưu trữ giá trị mặc định
          let dotValue = document.getElementById('combobox-dot').value;
          let kiValue = document.getElementById('combobox-ki').value;
          let namValue = document.getElementById('NamHoc').value;
          let khoaValue = document.getElementById('MaPhongBan').value;

          // Hàm cập nhật giá trị từ comboboxes
          const updateValues = () => {
            dotValue = document.getElementById('combobox-dot').value;
            kiValue = document.getElementById('combobox-ki').value;
            namValue = document.getElementById('NamHoc').value;
            khoaValue = document.getElementById('MaPhongBan').value;

            console.log({ dotValue, namValue, kiValue, khoaValue }); // In ra giá trị hiện tại
          };

          // Hàm xử lý sự thay đổi ở bất kỳ combobox nào
          const handleComboboxChange = async () => {
            updateValues(); // Cập nhật giá trị khi có sự thay đổi

            // Tạo đối tượng dữ liệu để gửi
            const requestData = {
              Khoa: khoaValue,
              Dot: dotValue,
              Ki: kiValue,
              Nam: namValue,
            };

            // Fetch thông tin giảng dạy
            const teachingResponse = await fetch('/getDataDoAnChinhThuc', {
              method: 'POST',
              headers: {
                'Content-Type': 'application/json',
              },
              body: JSON.stringify(requestData),
            });
            if (!teachingResponse.ok) {
              // Lấy thông tin chi tiết lỗi từ server
              const errorData = await teachingResponse.json();
              // Hiển thị thông báo lỗi từ server
              Swal.fire({
                title: 'Thông báo',
                html: errorData.message || "Đã có lỗi xảy ra!",
                icon: 'error',
                confirmButtonText: 'OK',
                width: 'auto', // Tự động điều chỉnh chiều rộng
                padding: '20px', // Giữ khoảng cách cho nội dung
              });
              return;
            }



            // Xử lý dữ liệu giảng dạy
            const globalData = await teachingResponse.json();
            console.log('Tổng hợp bảng dữ liệu:', globalData.results);

            // Sau khi có dữ liệu thành công, thực hiện render bảng
            renderTable(globalData.results); // Gọi hàm renderTable sau khi đã có đủ dữ liệu
          };

          // Thêm trình lắng nghe sự kiện cho từng combobox
          document.getElementById('combobox-dot').addEventListener('change', handleComboboxChange);
          document.getElementById('combobox-ki').addEventListener('change', handleComboboxChange);
          document.getElementById('NamHoc').addEventListener('change', handleComboboxChange);
          document.getElementById('MaPhongBan').addEventListener('change', handleComboboxChange);

          // Gọi updateValues để lấy giá trị mặc định ngay khi tải trang
          updateValues();

          // Tạo đối tượng dữ liệu để gửi ngay khi tải trang
          const requestData = {
            Khoa: khoaValue,
            Dot: dotValue,
            Ki: kiValue,
            Nam: namValue,
          };

          console.log(requestData);
          // Fetch thông tin giảng dạy ngay khi tải trang
          const teachingResponse = await fetch('/getDataDoAnChinhThuc', {
            method: 'POST',
            headers: {
              'Content-Type': 'application/json',
            },
            body: JSON.stringify(requestData),
          });

          if (!teachingResponse.ok) {
            // Lấy thông tin chi tiết lỗi từ server
            const errorData = await teachingResponse.json();
            // Hiển thị thông báo lỗi từ server
            Swal.fire({
              title: 'Thông báo',
              html: errorData.message || "Đã có lỗi xảy ra!",
              icon: 'error',
              confirmButtonText: 'OK',
              width: 'auto', // Tự động điều chỉnh chiều rộng
              padding: '20px', // Giữ khoảng cách cho nội dung
            });
            return;
          }


          // Xử lý dữ liệu giảng dạy ngay khi tải trang
          const globalData = await teachingResponse.json();

          // Sau khi có dữ liệu thành công, thực hiện render bảng
          renderTable(globalData); // Gọi hàm renderTable sau khi đã có đủ dữ liệu

        } catch (error) {
          console.error('Đã có lỗi xảy ra:', error);
        }
      }

      // Hàm renderTable sẽ được sử dụng để render bảng
      function renderTable(data) {
        console.log(data);
        const columnsToDisplay = ['SinhVien', 'MaSV', 'MaPhongBan', 'TenDeTai', 'GiangVienDefault', 'GiangVien1', 'GiangVien2', 'NgayBatDau', 'NgayKetThuc'];

        const headersMap = {
          'SinhVien': 'Sinh Viên',
          'MaSV': 'Mã sinh viên',
          'MaPhongBan': 'Khoa',
          'TenDeTai': 'Tên đề tài',
          'GiangVienDefault': 'Giảng viên hướng dẫn',
          'GiangVien1': 'Giảng viên hướng dẫn 1',
          'GiangVien2': 'Giảng viên hướng dẫn 2',
          'NgayBatDau': 'Ngày bắt đầu',
          'NgayKetThuc': 'Ngày kết thúc',
        };

        const tableHeader = document.getElementById('table-header');
        tableHeader.innerHTML = columnsToDisplay.map(header => {
          const newHeaderName = headersMap[header] || header;
          let widthStyle = '';

          if (header === 'TenDeTai') widthStyle = 'width: 20%';
          if (header === 'GiangVienDefault') widthStyle = 'width: 15%';
          if (header === 'GiangVien1') widthStyle = 'width: 15%';

          return `<th style="${widthStyle}">${newHeaderName}</th>`;
        }).join('');



        const tableBody = document.getElementById('data-table-body');
        tableBody.innerHTML = data.map(item => {
          const rowHtml = columnsToDisplay.map(key => {
            let cellValue = item[key] !== null ? item[key] : '';
            if (key === 'GiangVienDefault') {
              cellValue = (cellValue || '').replace(/\n/g, '<br>');
            }
            if (['NgayBatDau', 'NgayKetThuc'].includes(key) && cellValue) {
              const date = new Date(cellValue);
              cellValue = date.toLocaleDateString('vi-VN');
            }
            return `<td>${cellValue}</td>`;
          }).join('');
          return `<tr>${rowHtml}</tr>`;
        }).join('');

        const loadingSpinner = document.getElementById('loading-spinner');
        if (loadingSpinner) {
          loadingSpinner.remove();
        }
      }

    </script>

    <script>
      document.getElementById("changePasswordLink").addEventListener("click", function (event) {
        event.preventDefault(); // Ngăn chặn hành vi mặc định của thẻ a
        const tenDangNhap = localStorage.getItem("TenDangNhap"); // Lấy TenDangNhap từ localStorage

        if (tenDangNhap) {
          // Chuyển hướng đến trang changePassword và truyền TenDangNhap trong URL
          window.location.href = `/changePassword?tenDangNhap=${encodeURIComponent(tenDangNhap)}`;
        } else {
          alert("Không tìm thấy TenDangNhap trong localStorage.");
        }
      });
    </script>
    <script>
      $(document).ready(function () {
        $('#NamHoc option[value=""]').remove();
        $('#combobox-dot option[value=""]').remove();
        $('#combobox-ki option[value=""]').remove();


        $.ajax({
          url: '/getNamHoc',
          method: 'GET',
          success: function (response) {
            if (response.success) {

              response.NamHoc.forEach(function (item) {
                console.log(item.NamHoc);
                $('#NamHoc').append(
                  `<option value="${item.NamHoc}">${item.NamHoc}</option>`
                );
              });

              response.Dot.forEach(function (item) {
                console.log(item.Dot);
                $('#combobox-dot').append(
                  `<option value="${item.value}">${item.Dot}</option>`
                );
              });

              response.Ki.forEach(function (item) {
                console.log(item.Dot);
                $('#combobox-ki').append(
                  `<option value="${item.value}">${item.Ki}</option>`
                );
              });
            } else {
              console.error("Không lấy được dữ liệu năm học:", response.message);
            }
          },
          error: function (error) {
            console.error("Lỗi khi lấy dữ liệu năm học:", error);
          }
        });
      });
    </script>
    <script>
      $(document).ready(function () {
        $('#MaPhongBan option[value=""]').remove();
        // Gọi AJAX để lấy dữ liệu JSON từ API
        $.ajax({
          url: '/getPhongBan', // Đường dẫn tới API getPhongBan
          method: 'GET',
          success: function (response) {
            // Kiểm tra nếu response thành công
            const MaPhongBan = response.MaPhongBan;
            if (response.success) {
              $('#MaPhongBan').prepend('<option value="ALL">ALL</option>');
              // Lặp qua từng mục trong mảng MaPhongBan
              response.MaPhongBan.forEach(function (item) {
                // Nếu item.MaPhongBan bằng boMon.MaPhongBan, hiển thị trước
                console.log(item);
                $('#MaPhongBan').append(
                  `<option value="${item.MaPhongBan}">${item.MaPhongBan}</option>`
                );
              }
              );

              // Nếu không có phòng ban nào tương ứng, bạn có thể thêm tùy chọn mặc định ở đây
              if (!$('#MaPhongBan option:selected').length) {
                $('#MaPhongBan').prepend('<option value="">Chọn Phòng Ban</option>');
              }
            } else {
              console.error("Không lấy được dữ liệu phongBan:", response.message);
            }
          },
          error: function (error) {
            console.error("Lỗi khi lấy dữ liệu phongBan:", error);
          }
        });
      });
    </script>
    <script>
      document.getElementById("infome").addEventListener("click", function (event) {
        event.preventDefault(); // Ngăn chặn hành vi mặc định của thẻ a
        const id_User = localStorage.getItem("id_User"); // Lấy id_User từ localStorage\
        if (id_User) {
          // Chuyển hướng đến trang infome và truyền id_User trong URL
          window.location.href = `/infome/${id_User}`;
        } else {
          alert("Không tìm thấy id_User trong localStorage.");
        }
      });
    </script>

    <script>
      document.addEventListener("DOMContentLoaded", () => {
        const role = localStorage.getItem("userRole");
        const isKhoa = localStorage.getItem("isKhoa");

        // Ẩn button import đồ án
        const importDoAn = document.getElementById('importDoAn');
        const suaHD = document.getElementById('suaHD');

        if (isKhoa == 0 && role == 'Duyệt') {
          importDoAn.style.display = 'block';
          suaHD.style.display = 'block';
        }

        // Ẩn button ngay khi trang được tải
        const actionButton = document.getElementById('changeMessage');
        //Ẩn site thêm thông báo
        if (role === "Duyệt") {
          actionButton.style.display = '';
        } else {
          actionButton.style.display = 'none';
        }
      });
    </script>
    <script>
      document.getElementById("changeMessage").addEventListener("click", function (event) {
        event.preventDefault(); // Ngăn chặn hành vi mặc định của thẻ a
        const MaPhongBan = localStorage.getItem("MaPhongBan"); // Lấy MaPhongBan từ localStorage

        if (MaPhongBan) {
          // Chuyển hướng đến trang changeMessage và truyền MaPhongBan trong URL
          window.location.href = `/changeMessage/${MaPhongBan}`;
        } else {
          alert("Không tìm thấy MaPhongBan trong localStorage.");
        }
      });
    </script>
</body>

</html>