<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>Thống kê chi tiết mời giảng</title>
    <link
      rel="stylesheet"
      href="https://cdn.jsdelivr.net/npm/bootstrap@5.2.3/dist/css/bootstrap.min.css"
    />
    <link
      rel="stylesheet"
      href="https://cdn.jsdelivr.net/npm/bootstrap-icons@1.11.3/font/bootstrap-icons.css"
    />
    <link rel="stylesheet" href="/css/styles.css" />
    <link
      rel="stylesheet"
      href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.6.0/css/all.min.css"
    />
    <link
      href="https://cdn.jsdelivr.net/npm/sweetalert2@11.6.16/dist/sweetalert2.min.css"
      rel="stylesheet"
    />
    <style>
      .table {
        width: 100%;
        margin-top: 20px;
        font-size: 0.9em;
      }
      .summary-box {
        background-color: #f8f9fa;
        padding: 15px;
        border-radius: 8px;
        margin: 20px 0;
        box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);
      }
      .filter-section {
        background-color: #fff;
        padding: 20px;
        border-radius: 8px;
        margin-bottom: 20px;
        box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);
      }
      /* Style cho dropdown gợi ý */
      .suggestion-item {
        padding: 8px 12px;
        border-bottom: 1px solid #eee;
        display: flex;
        align-items: center;
        gap: 8px;
      }

      .suggestion-item:last-child {
        border-bottom: none;
      }

      .suggestion-item:hover {
        background-color: #f8f9fa;
      }

      .suggestions {
        border-radius: 0 0 4px 4px;
        box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);
        margin-top: -1px;
      }

      /* Position relative cho container của input */
      .position-relative {
        position: relative;
      }

      /* Style cho input khi focus */
      #giangVien:focus {
        border-bottom-left-radius: 0;
        border-bottom-right-radius: 0;
        border-color: #86b7fe;
        box-shadow: 0 0 0 0.25rem rgba(13, 110, 253, 0.25);
      }

      .table-container {
        display: none; /* Ẩn bảng ban đầu */
      }

      /* Style cho bảng gộp cột */
      .table td[rowspan] {
        vertical-align: middle;
        background-color: #f8f9fa;
        font-weight: 500;
      }

      .table tbody tr:hover {
        background-color: rgba(0, 0, 0, 0.075);
      }

      .table td {
        vertical-align: middle;
      }
    </style>
  </head>
  <body>
    <%- include('header') %>

    <div class="container mt-4">
      <div class="filter-section">
        <div class="row">
          <div class="col-md-4">
            <label for="namHoc">Năm học:</label>
            <select class="form-select" id="namHoc">
              <option value="ALL">Tất cả năm học</option>
            </select>
          </div>
          <div class="col-md-4">
            <label for="khoa">Khoa:</label>
            <select class="form-select" id="khoa">
              <option value="ALL">Tất cả khoa</option>
            </select>
          </div>
          <div class="col-md-4">
            <label for="giangVien">Giảng viên:</label>
            <div class="position-relative">
              <input
                type="text"
                class="form-control"
                id="giangVien"
                placeholder="Nhập tên giảng viên"
              />
              <div
                class="suggestions"
                id="giangVienSuggestions"
                style="
                  display: none;
                  width: 100%;
                  position: absolute;
                  z-index: 1000;
                  background-color: #fff;
                  border: 1px solid #ddd;
                  max-height: 200px;
                  overflow-y: auto;
                "
              ></div>
            </div>
          </div>
        </div>
      </div>

      <!-- Bảng giảng dạy -->
      <div class="table-container" id="giangDayContainer">
        <h4 class="mt-4">Thông tin giảng dạy</h4>
        <div class="table-responsive">
          <table class="table table-striped table-bordered">
            <thead class="table-primary">
              <tr>
                <th>STT</th>
                <th>Họ tên</th>
                <th>Khoa</th>
                <th>Năm học</th>
                <th>Kỳ học</th>
                <th>Lớp</th>
                <th>Tên học phần</th>
                <th>Số tín chỉ</th>
                <th>Số tiết</th>
                <th>Hệ đào tạo</th>
              </tr>
            </thead>
            <tbody id="dataGiangDayTable"></tbody>
            <tfoot>
              <tr class="table-secondary">
                <td colspan="8" class="text-end"><strong>Tổng số tiết:</strong></td>
                <td id="totalSoTiet" class="text-end">0</td>
                <td></td>
              </tr>
            </tfoot>
          </table>
        </div>
      </div>

      <!-- Bảng đồ án -->
      <div class="table-container" id="doAnContainer">
        <h4 class="mt-4">Thông tin đồ án</h4>
        <div class="table-responsive">
          <table class="table table-striped table-bordered">
            <thead class="table-success">
              <tr>
                <th>STT</th>
                <th>Họ tên</th>
                <th>Khoa</th>
                <th>Năm học</th>
                <th>Đợt</th>
                <th>Đề tài</th>
                <th>Số tiết</th>
              </tr>
            </thead>
            <tbody id="dataDoAnTable"></tbody>
          </table>
        </div>
      </div>
    </div>

    <script src="https://ajax.googleapis.com/ajax/libs/jquery/3.7.1/jquery.min.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/js/bootstrap.bundle.min.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11.6.16/dist/sweetalert2.all.min.js"></script>

    <script>
      $(document).ready(function () {
        // Danh sách giảng viên sẽ được lưu trữ ở đây
        let giangVienList = [];

        // Load initial filter options
        loadFilterOptions();

        // Event listeners for filter changes
        $("#namHoc, #khoa").change(function () {
          loadGiangVien();
          loadData();
        });

        // Sửa lại event handler cho input giảng viên
        $("#giangVien").on("focus", function () {
          // Hiển thị tất cả gợi ý khi focus vào input
          displaySuggestions(giangVienList);
        });

        $("#giangVien").on("input", function () {
          const input = $(this).val().toLowerCase();
          // Lọc danh sách gợi ý nếu có nhập text
          const suggestions = giangVienList.filter((gv) =>
            gv.toLowerCase().includes(input)
          );
          displaySuggestions(suggestions);
        });

        // Xử lý click bên ngoài để ẩn suggestion box
        $(document).on("click", function (e) {
          if (
            !$(e.target).closest("#giangVien, #giangVienSuggestions").length
          ) {
            $("#giangVienSuggestions").hide();
          }
        });

        function displaySuggestions(suggestions) {
          const suggestionsDiv = $("#giangVienSuggestions");
          suggestionsDiv.empty();

          // Luôn hiển thị suggestions nếu có dữ liệu
          if (suggestions && suggestions.length > 0) {
            suggestions.forEach((suggestion) => {
              const item = $(`
                        <div class="suggestion-item p-2">
                            <i class="fas fa-user me-2"></i>${suggestion}
                        </div>
                    `);
              item.on("click", function () {
                $("#giangVien").val(suggestion);
                suggestionsDiv.hide();
                loadData();
              });
              suggestionsDiv.append(item);
            });

            // Hiển thị suggestion box
            suggestionsDiv.show();
          } else {
            // Nếu không có dữ liệu thì hiển thị thông báo
            suggestionsDiv.append(`
                    <div class="suggestion-item p-2 text-muted">
                        <i class="fas fa-info-circle me-2"></i>Không có dữ liệu giảng viên
                    </div>
                `);
            suggestionsDiv.show();
          }
        }

        function loadFilterOptions() {
          $.ajax({
            url: "/api/thongkeChiTietMG/filter-options",
            type: "GET",
            dataType: "json",
            success: function (response) {
              if (response.success) {
                // Populate năm học
                $("#namHoc").empty();
                response.namHoc.forEach(function (item) {
                  $("#namHoc").append(
                    `<option value="${item.namhoc}">${
                      item.namhoc === "ALL" ? "Tất cả năm học" : item.namhoc
                    }</option>`
                  );
                });

                // Populate khoa
                $("#khoa").empty();
                response.khoa.forEach(function (item) {
                  $("#khoa").append(
                    `<option value="${item.MaPhongBan}">${
                      item.MaPhongBan === "ALL"
                        ? "Tất cả khoa"
                        : item.MaPhongBan
                    }</option>`
                  );
                });

                // Set initial values based on user role
                const isKhoa = localStorage.getItem("isKhoa");
                const MaPhongBan = localStorage.getItem("MaPhongBan");

                if (isKhoa == 1) {
                  $("#khoa").val(MaPhongBan);
                  $("#khoa").prop("disabled", true);
                }

                loadGiangVien();
                loadData();
              } else {
                showError("Không thể tải dữ liệu cho bộ lọc");
              }
            },
            error: function (xhr, status, error) {
              console.error("Error:", xhr, status, error);
              showError(
                "Lỗi khi tải dữ liệu bộ lọc: " +
                  (xhr.responseJSON?.message || error)
              );
            },
          });
        }

        function loadGiangVien() {
          const namhoc = $("#namHoc").val();
          const khoa = $("#khoa").val();

          $.ajax({
            url: "/api/thongkeChiTietMG/giang-vien",
            type: "GET",
            data: { namhoc, khoa },
            dataType: "json",
            success: function (response) {
              if (response.success) {
                // Lưu danh sách giảng viên (không bao gồm 'ALL')
                giangVienList = response.giangVien
                  .filter((item) => item.hoten !== "ALL")
                  .map((item) => item.hoten);

                // Nếu input đang focus thì hiển thị gợi ý
                if ($("#giangVien").is(":focus")) {
                  displaySuggestions(giangVienList);
                }
              } else {
                showError("Không thể tải danh sách giảng viên");
              }
            },
            error: function (xhr, status, error) {
              console.error("Error:", xhr, status, error);
              showError(
                "Lỗi khi tải danh sách giảng viên: " +
                  (xhr.responseJSON?.message || error)
              );
            },
          });
        }

        function loadData() {
          const namhoc = $("#namHoc").val();
          const khoa = $("#khoa").val();
          const giangvien = $("#giangVien").val().trim();

          // Chỉ kiểm tra điều kiện giảng viên
          if (!giangvien) {
            $("#giangDayContainer").hide();
            $("#doAnContainer").hide();
            return;
          }

          // Hiển thị loading
          $("#giangDayContainer").show();
          $("#doAnContainer").show();
          $("#dataGiangDayTable").html(
            '<tr><td colspan="9" class="text-center"><i class="fas fa-spinner fa-spin"></i> Đang tải dữ liệu giảng dạy...</td></tr>'
          );
          $("#dataDoAnTable").html(
            '<tr><td colspan="7" class="text-center"><i class="fas fa-spinner fa-spin"></i> Đang tải dữ liệu đồ án...</td></tr>'
          );

          $.ajax({
            url: "/api/thongkeChiTietMG/data",
            type: "GET",
            data: { namhoc, khoa, giangvien },
            dataType: "json",
            success: function (response) {
              if (response.success) {
                updateGiangDayTable(response.dataGiangDay);
                updateDoAnTable(response.dataDoAn);
              } else {
                showError(response.message || "Không thể tải dữ liệu");
                $("#dataGiangDayTable").html(
                  '<tr><td colspan="9" class="text-center text-danger">Không thể tải dữ liệu giảng dạy</td></tr>'
                );
                $("#dataDoAnTable").html(
                  '<tr><td colspan="7" class="text-center text-danger">Không thể tải dữ liệu đồ án</td></tr>'
                );
              }
            },
            error: function (xhr, status, error) {
              console.error("Error:", xhr, status, error);
              showError(
                "Lỗi khi tải dữ liệu: " + (xhr.responseJSON?.message || error)
              );
              $("#dataGiangDayTable").html(
                '<tr><td colspan="9" class="text-center text-danger">Lỗi khi tải dữ liệu giảng dạy</td></tr>'
              );
              $("#dataDoAnTable").html(
                '<tr><td colspan="7" class="text-center text-danger">Lỗi khi tải dữ liệu đồ án</td></tr>'
              );
            },
          });
        }

        function updateGiangDayTable(data) {
          const tbody = $("#dataGiangDayTable");
          tbody.empty();

          if (data.length === 0) {
            tbody.append(`
              <tr><td colspan="10" class="text-center">Không có dữ liệu giảng dạy phù hợp</td></tr>
            `);
            $("#totalSoTiet").text("0");
            return;
          }

          let stt = 1;
          let totalSoTiet = 0;

          data.forEach((item) => {
            const soTiet = parseFloat(item.sotiet || 0);
            totalSoTiet += soTiet;

            const tr = `
              <tr>
                <td>${stt++}</td>
                <td>${item.hoten || "Không xác định"}</td>
                <td>${item.MaPhongBan || "Không xác định"}</td>
                <td>${item.namhoc || "Không xác định"}</td>
                <td>${item.kihoc || "Không xác định"}</td>
                <td>${item.lop || "Không xác định"}</td>
                <td>${item.tenhocphan || "Không xác định"}</td>
                <td>${item.sotinchi || "0"}</td>
                <td>${soTiet.toFixed(2)}</td>
                <td>${item.hedaotao || "Không xác định"}</td>
              </tr>
            `;
            tbody.append(tr);
          });

          // Cập nhật tổng số tiết
          $("#totalSoTiet").text(totalSoTiet.toFixed(2));
        }

        function updateDoAnTable(data) {
          const tbody = $("#dataDoAnTable");
          tbody.empty();

          if (data.length === 0) {
            tbody.append(`
              <tr><td colspan="7" class="text-center">Không có dữ liệu đồ án phù hợp</td></tr>
            `);
            return;
          }

          // Nhóm dữ liệu theo giảng viên, khoa, năm học và đợt
          const groupedData = {};
          data.forEach((item) => {
            const key = `${item.hoten}_${item.MaPhongBan}_${item.namhoc}_${item.kihoc}`;
            if (!groupedData[key]) {
              groupedData[key] = {
                info: {
                  hoten: item.hoten,
                  MaPhongBan: item.MaPhongBan,
                  namhoc: item.namhoc,
                  kihoc: item.kihoc,
                },
                rows: [],
              };
            }
            groupedData[key].rows.push(item);
          });

          let stt = 1;
          Object.values(groupedData).forEach((group, groupIndex) => {
            const rowCount = group.rows.length;

            group.rows.forEach((item, index) => {
              const tr = $("<tr></tr>");

              // Chỉ thêm các cột gộp ở dòng đầu tiên của mỗi nhóm
              if (index === 0) {
                tr.append(`
                  <td rowspan="${rowCount}">${stt}</td>
                  <td rowspan="${rowCount}">${item.hoten}</td>
                  <td rowspan="${rowCount}">${item.MaPhongBan}</td>
                  <td rowspan="${rowCount}">${item.namhoc}</td>
                  <td rowspan="${rowCount}">${item.kihoc}</td>
                `);
              }

              // Thêm các cột còn lại
              tr.append(`
                <td>${item.detai}</td>
                <td>${item.sotiet}</td>
              `);

              tbody.append(tr);
            });

            if (group.rows.length > 0) stt++;
          });
        }

        function showError(message) {
          Swal.fire({
            title: "Thông báo",
            html: message,
            icon: "error",
            width: "auto",
            padding: "20px",
            timer: 3000,
            timerProgressBar: true,
            showConfirmButton: false,
          });
        }
      });
    </script>
  </body>
</html>
