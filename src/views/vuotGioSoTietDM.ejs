<!DOCTYPE html>
<html lang="en">

<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>Học Viện Kỹ Thuật Mật Mã</title>
  <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap@5.2.3/dist/css/bootstrap.min.css">
  <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap-icons@1.11.3/font/bootstrap-icons.css">
  <link rel="stylesheet" href="/css/styles.css">
  <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.6.0/css/all.min.css">
  <style>
    .table>:not(caption)>*>* {
      border-bottom-width: 2px;
    }

    /* CSS để căn chỉnh label tổng số tiết */
    .table {
      border-color: #ffffff;
      z-index: 1;
    }

    /* CSS để căn chỉnh label tổng số tiết */
    .total-label {
      position: relative;
      /* Change this if necessary */
      z-index: 1;
      /* Ensure this is lower than .suggestions */
      margin-top: 10px;
      /* Adjust spacing if needed */
      text-align: right;
    }

    .suggestions {
      position: absolute;
      /* Đảm bảo gợi ý nằm bên trên các thành phần khác */
      top: calc(100% + 5px);
      /* Đặt gợi ý phía trên input với một khoảng cách */
      left: 0;
      font-size: 12px;
      background-color: #f0f0f0;
      color: #000;
      border: 1px solid #ccc;
      box-shadow: 0px 4px 8px rgba(0, 0, 0, 0.1);
      z-index: 1000;
      /* Đảm bảo gợi ý nằm trên các thành phần khác */
      border-radius: 4px;
      max-height: 300px;
      overflow-y: auto;
    }

    /* Hiệu ứng lung linh khi hover */
    .suggestions:hover {
      background-color: #e0e0e0;
      /* Thay đổi màu nền khi hover */
      box-shadow: 0px 8px 16px rgba(0, 0, 0, 0.2);
      /* Tăng độ bóng khi hover */
    }


    /* CSS cho từng mục gợi ý */
    .suggestion-item {
      padding: 8px 12px;
      /* Khoảng cách bên trong từng mục */
      cursor: pointer;
      /* Con trỏ chuột thay đổi khi hover */
      transition: background-color 0.2s ease;
      /* Tạo hiệu ứng chuyển đổi mượt mà khi hover */
    }

    /* Hiệu ứng khi người dùng di chuột vào mục gợi ý */
    .suggestion-item:hover {
      background-color: #f0f0f0;
      /* Màu nền khi hover */
    }

    /* Đặt lại một số thuộc tính khi input mất focus */
    input:focus+.suggestions {
      display: block;
      /* Đảm bảo khung hiển thị khi input được focus */
    }

    /* Đảm bảo container gợi ý không bị tràn ra ngoài khung nếu có */
    .suggestions {
      overflow: hidden;
    }

    /* Đặt chiều rộng cố định cho cả input[type="date"] và input[type="text"] */
    input[type="date"],
    input[type="text"] {
      width: 120px;
      /* Điều chỉnh giá trị này theo mong muốn */
      box-sizing: border-box;
      padding: 5px;
      /* Giữ padding như cũ */
    }

    /* phần css cho label tổng số tiết  ki*/
    .total-label {
      margin-left: auto;
      /* Căn phải cho thẻ total-label */
      margin-right: 0;
      font-family: Arial, sans-serif;
      font-size: 16px;
      background-color: #f4f4f4;
      padding: 10px;
      border-radius: 8px;
      width: fit-content;
      box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);
      display: block;
      /* Đảm bảo thẻ div là khối để căn phải hoạt động */
    }

    .total-label label {
      font-weight: bold;
      /* Giữ chữ in đậm */
      color: #000;
      /* Màu chữ đen */
      margin-right: 8px;
      /* Thêm khoảng cách bên phải */
      cursor: pointer;
      /* Tạo hiệu ứng chuyển màu nền và màu chữ mềm mại */
      padding: 5px 10px;
      /* Thêm padding cho label để tạo không gian */
      border: 1px solid #ccc;
      /* Khung cho label */
      border-radius: 4px;
      /* Bo góc cho khung */
    }

    .total-label label,
    .total-label label span {
      background-color: #007BFF;
      /* Màu nền khi hover */
      color: #fff;
      /* Màu chữ trắng khi hover */
    }

    .total-label span {
      font-weight: bold;
      /* Giữ chữ trong span cũng in đậm */
      color: #333;
      /* Màu chữ đậm cho giá trị */
    }

    .btn {
      margin-bottom: 0px;
      height: 45px;
    }

    /* Thêm CSS để làm đẹp input trong bảng */
    .table input[type="number"] {
      width: 100px;
      text-align: center;
      border: 1px solid #ddd;
      padding: 4px;
    }

    .table input[type="number"]:focus {
      border-color: #80bdff;
      outline: 0;
      box-shadow: 0 0 0 0.2rem rgba(0,123,255,.25);
    }

    .table td {
      vertical-align: middle;
    }

    /* CSS để làm đẹp form */
    .form-control-sm {
      width: 120px; /* Điều chỉnh chiều rộng của input */
    }

    .form-label {
      font-size: 0.875rem;
      margin-bottom: 0.25rem;
    }

    .btn-sm {
      margin-bottom: 0px;
      height: 31px;
    }
    .form-control-sm {
      width: 120px;
    }
    .form-label {
      font-size: 0.875rem;
      margin-bottom: 0.25rem;
    }
  </style>
</head>

<body>
  <!-- Phần header -->
  <%- include('adminHeader') %>

  <!-- Phần nội dung -->

  <div class="container mt-4">
    <div class="row mb-4">
      <div class="col-md-6 offset-md-3">
        <div class="card">
          <div class="card-header">
            <h4 class="text-center">Cập nhật số tiết định mức</h4>
          </div>
          <div class="card-body">
            <form id="soTietForm">
              <div class="mb-3">
                <label for="gioGiangDay" class="form-label">Số tiết giảng dạy</label>
                <input type="number" class="form-control" id="gioGiangDay" name="gioGiangDay" 
                    value="<%= currentData.GiangDay %>" required>
              </div>
              <div class="mb-3">
                <label for="gioVuotGio" class="form-label">Số tiết vượt giờ</label>
                <input type="number" class="form-control" id="gioVuotGio" name="gioVuotGio" 
                    value="<%= currentData.VuotGio %>" required>
              </div>
              <div class="mb-3">
                <label for="gioNCKH" class="form-label">Số tiết NCKH</label>
                <input type="number" class="form-control" id="gioNCKH" name="gioNCKH" 
                    value="<%= currentData.NCKH %>" required>
              </div>
              <div class="text-center">
                <button type="submit" class="btn btn-primary">Cập nhật</button>
              </div>
            </form>
        </div>
        </div>
      </div>
    </div>
  </div>

</body>

</html>


<script src="https://ajax.googleapis.com/ajax/libs/jquery/3.7.1/jquery.min.js"></script>
<script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/js/bootstrap.bundle.min.js"></script>



<!-- Phần phân quyền -->
<script>
  document.addEventListener('DOMContentLoaded', () => {

    // Thêm sự kiện click cho phần tử có id="ThongTinGD"
    const ThongTinGD = document.getElementById("ThongTinGD");

    ThongTinGD.addEventListener("click", function (event) {
      event.preventDefault(); // Ngăn chặn hành vi mặc định của liên kết

      const isKhoa = localStorage.getItem("isKhoa"); // Lấy role từ localStorage

      if (isKhoa == 0) { // Nếu là đào tạo hoặc tài chính
        window.location.href = "/info2";
      } else {
        window.location.href = "/info";
      }
    });

    // Thêm sự kiện click cho phần tử có id="Home"

    const Home = document.getElementById("Home");

    Home.addEventListener("click", function (event) {
      event.preventDefault(); // Ngăn chặn hành vi mặc định của liên kết

      const isKhoa = localStorage.getItem("isKhoa")

      if (isKhoa == 0) { // Nếu là đào tạo hoặc tài chính
        window.location.href = "/maindt";
      } else {
        window.location.href = "/mainkhoa";
      }
    });
  });

</script>

<script>
  document.getElementById("changePasswordLink").addEventListener("click", function (event) {
    event.preventDefault(); // Ngăn chặn hành vi mặc định của thẻ a
    const tenDangNhap = localStorage.getItem("TenDangNhap"); // Lấy TenDangNhap từ localStorage

    if (tenDangNhap) {
      // Chuyển hướng đến trang changePassword và truyền TenDangNhap trong URL
      window.location.href = `/changePassword?tenDangNhap=${encodeURIComponent(tenDangNhap)}`;
    } else {
      alert("Không tìm thấy TenDangNhap trong localStorage.");
    }
  });
</script>

<script>
  document.getElementById('infoGvm').addEventListener('click', loadLopMoiData);

  async function loadLopMoiData() {
    const MaPhongBan = localStorage.getItem('MaPhongBan'); // Lấy mã phòng ban từ localStorage
    const Ki = document.getElementById('comboboxki').value;
    const Nam = document.getElementById('NamHoc').value;
    const typeclass = document.getElementById('typeclass').value;
    console.log(typeclass);
    if (!MaPhongBan) {
      alert("Mã phòng ban không tồn tại!");
      return;
    }

    try {
      if (typeclass === "Lớp mời coi giữa kỳ") {
        const response = await fetch(`/getLopGK/${MaPhongBan}/${Ki}/${Nam}`, {
          method: 'GET', // Gửi yêu cầu GET
        });

        if (!response.ok) {
          throw new Error(`Error: ${response.status} - ${response.statusText}`);
        }

        const data = await response.json(); // Lấy dữ liệu từ server
        if (data.success) {
          if (data.maBoMon && data.maBoMon.length > 0) {
            console.log('Dữ liệu bộ môn:', data);
            renderTable(data);
          } else {
            alert("Dữ liệu trống!");
          }
        } else {
          alert("Không tìm thấy dữ liệu!");
        }
      } else {

        const response = await fetch(`/getLopNgoaiQuyChuan/${MaPhongBan}/${Ki}/${Nam}`, {
          method: 'GET', // Gửi yêu cầu GET
        });

        if (!response.ok) {
          throw new Error(`Error: ${response.status} - ${response.statusText}`);
        }

        const data = await response.json(); // Lấy dữ liệu từ server
        console.log(data);
        if (data.success) {
          if (data.maBoMon && data.maBoMon.length > 0) {
            console.log('Dữ liệu bộ môn:', data);
            renderTable(data);
          } else {
            alert("Dữ liệu trống!");
          }
        } else {
          alert("Không tìm thấy dữ liệu!");
        }
      }


    } catch (error) {
      console.error('Có lỗi xảy ra khi lấy dữ liệu:', error);
    }
  }

</script>

<script>
  document.getElementById("infome").addEventListener("click", function (event) {
    event.preventDefault(); // Ngăn chặn hành vi mặc định của thẻ a
    const id_User = localStorage.getItem("id_User"); // Lấy id_User từ localStorage\
    if (id_User) {
      // Chuyển hướng đến trang infome và truyền id_User trong URL
      window.location.href = `/infome/${id_User}`;
    } else {
      alert("Không tìm thấy id_User trong localStorage.");
    }
  });
</script>

<script>
document.getElementById('soTietForm').addEventListener('submit', async function(e) {
    e.preventDefault();
    
    const submitButton = this.querySelector('button[type="submit"]');
    submitButton.disabled = true;
    
    const formData = {
        soTietDaoTao: document.getElementById('gioGiangDay').value,
        soTietVuotGio: document.getElementById('gioVuotGio').value,
        soTietNCKH: document.getElementById('gioNCKH').value
    };

    try {
        const response = await fetch('/api/update-dinh-muc', {
            method: 'PUT',
            headers: {
                'Content-Type': 'application/json'
            },
            body: JSON.stringify(formData)
        });

        const data = await response.json();
        
        if (data.success) {
            alert('Cập nhật số tiết định mức thành công!');
        } else {
            alert(data.message || 'Có lỗi xảy ra khi cập nhật');
        }
    } catch (error) {
        console.error('Lỗi:', error);
        alert('Có lỗi xảy ra khi cập nhật số tiết định mức');
    } finally {
        submitButton.disabled = false;
    }
});
</script>

<script>
      document.addEventListener("DOMContentLoaded", () => {
        const Quyen = localStorage.getItem("userRole");

        // Ẩn button ngay khi trang được tải
        const actionButton = document.getElementById('changeMessage');
        //Ẩn site thêm thông báo
        if (Quyen === "Lãnh đạo khoa" || Quyen === "Duyệt") {
          actionButton.style.display = '';
        } else {
          actionButton.style.display = 'none';
        }
      });
    </script>
  <script>
      document.getElementById("changeMessage").addEventListener("click", function(event) {
        event.preventDefault(); // Ngăn chặn hành vi mặc định của thẻ a
        const MaPhongBan = localStorage.getItem("MaPhongBan"); // Lấy MaPhongBan từ localStorage

        if (MaPhongBan) {
            // Chuyển hướng đến trang changeMessage và truyền MaPhongBan trong URL
            window.location.href = `/changeMessage/${MaPhongBan}`;
        } else {
            alert("Không tìm thấy MaPhongBan trong localStorage.");
        }
      });
    </script>
  </body>

</html>