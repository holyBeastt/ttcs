<!DOCTYPE html>
<html lang="en">

<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>Học Viện Kỹ Thuật Mật Mã</title>
  <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap@5.2.3/dist/css/bootstrap.min.css">
  <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap-icons@1.11.3/font/bootstrap-icons.css">
  <link rel="stylesheet" href="/css/styles.css">
  <link rel="stylesheet" href="/css/gvmList.css">
  <link rel="stylesheet" href="/css/table.css">
  <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.6.0/css/all.min.css">
  <style>
    .teacher-group {
      border: 2px solid black;
      /* Viền đen xung quanh nhóm giảng viên */
      border-collapse: separate;
      margin-bottom: 10px;
    }

    .teacher-group td,
    .teacher-group th {
      padding: 8px;
      text-align: left;
      border: 2px solid black;
      /* Viền đen xung quanh nhóm giảng viên */

    }

    .btn {
      height: 45px !important;
    }

    .total-label label,
    .total-label label span {
      background-color: #007BFF;
      color: #fff;
    }

    .total-label label {
      font-weight: bold;
      color: #000;
      margin-right: 8px;
      cursor: pointer;
      padding: 5px 10px;
      border: 1px solid #ccc;
      border-radius: 4px;
    }

    .total-label {
      margin-left: auto;
      margin-right: 0;
      font-family: Arial, sans-serif;
      font-size: 16px;
      background-color: #f4f4f4;
      padding: 10px;
      border-radius: 8px;
      width: fit-content;
      box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);
      display: block;
    }
  </style>
</head>

<body>
  <!-- Phần header -->
  <%- include('header') %>

  <!-- Phần nội dung -->

  <div class="container-fluid box m-4">
    <div class="d-flex justify-content-center">
      <!-- Main content -->
      <div class="gvmList">
        <div class="m-3">
          <h1>THÔNG TIN HỢP ĐỒNG GIẢNG VIÊN MỜI</h1>

          <div class="controls-container">
            <select class="form-select w-100px mx-2 selectop" id="combobox-dot">
              <option value="">Đợt</option>
            </select>

            <select class="form-select w-100px mx-2 selectop" id="comboboxki">
              <option value="">Kỳ</option>
            </select>

            <select class="form-select mx-2 selectop" style="width: max-content;" id="NamHoc">
              <option value="">Năm học</option>
            </select>
            <select class="form-select mx-1 selectop" style="width: max-content;" id="MaPhongBan">
              <option value="">Chọn khoa</option>
            </select>

            <select id="loaiHopDong" name="loaiHopDong" class="form-select w-200px mx-2 selectop">
              <option value="Đại học (Mật mã)">Đại học(Mật mã)</option>
              <option value="Đại học (Đóng học phí)">Đại học(Đóng học phí)</option>
              <option value="Cao học (Đóng học phí)">Cao học(Đóng học phí)</option>
              <option value="Nghiên cứu sinh (Đóng học phí)">Nghiên cứu sinh(Đóng học phí)</option>
            </select>

            <button id="viewDataBtn" class="btn view">Xem dữ liệu</button>
            <button id="exportButton" class="btn export" onclick="exportData()">
              <i class="fas fa-file-export me-2"></i>Xuất dữ liệu
            </button>
          </div>
          <div id="tableContainer" style="display: none;">
            <div class="table-responsive">
              <table class="table table-bordered" id="dataTable" class="table table-striped table-hover table-bordered">
                <thead class="table-dark">
                  <tr>
                    <th>Ngày bắt đầu</th>
                    <th>Ngày kết thúc</th>
                    <th>Danh xưng</th>
                    <th>Họ tên</th>
                    <th>Ngày sinh</th>
                    <th>CCCD</th>
                    <th>Học vị</th>
                    <th>Chức vụ</th>
                    <th>Điện thoại</th>
                    <th>Email</th>
                    <th>Số tài khoản</th>
                    <th>Ngân hàng</th>
                    <th>Mã số thuế</th>
                    <th>Số tiết</th>
                  </tr>
                </thead>
                <tbody>
                  <!-- Dữ liệu sẽ được thêm vào đây bằng JavaScript -->
                </tbody>
              </table>

              <div class="total-label d-flex justify-content-end">
                <!-- <label>Tổng số tiết Lên Lớp: <span class="value" id="totalLL">0</span></label> -->
                <label><span class="value" id="totalQC"></span></label>
              </div>
            </div>
          </div>
        </div>
      </div>
      <script src="https://ajax.googleapis.com/ajax/libs/jquery/3.7.1/jquery.min.js"></script>
      <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/js/bootstrap.bundle.min.js"></script>

      <script>
        function exportData() {
          const dot = document.getElementById("combobox-dot").value;
          const ki = document.getElementById("comboboxki").value;
          const namHoc = document.getElementById("NamHoc").value;
          const khoa = document.getElementById("MaPhongBan").value;
          const loaiHopDong = document.getElementById("loaiHopDong").value;

          // Kiểm tra các trường bắt buộc
          if (!dot || !ki || !namHoc || !loaiHopDong) {
            alert("Vui lòng chọn đầy đủ thông tin đợt, kỳ, năm học và loại hợp đồng");
            return;
          }

          // Tạo URL với các tham số
          let url = `/hdgvm/export-excel?dot=${encodeURIComponent(dot)}&ki=${encodeURIComponent(ki)}&namHoc=${encodeURIComponent(namHoc)}&loaiHopDong=${encodeURIComponent(loaiHopDong)}`;

          if (khoa && khoa !== "ALL") {
            url += `&khoa=${encodeURIComponent(khoa)}`;
          }

          // Log URL để debug
          console.log("Exporting data with URL:", url);

          // Thực hiện tải xuống
          window.location.href = url;
        }
      </script>

      <!-- phần dữ liệu để hiển thị trên bảng -->
      <script>
        document.addEventListener('DOMContentLoaded', function () {
          const viewDataBtn = document.getElementById('viewDataBtn');
          const tableContainer = document.getElementById('tableContainer');
          const dataTable = document.getElementById('dataTable');

          viewDataBtn.addEventListener('click', async function () {
            try {
              const namHoc = document.getElementById('NamHoc').value;
              const dot = document.getElementById('combobox-dot').value;
              const ki = document.getElementById('comboboxki').value;
              const khoa = document.getElementById('MaPhongBan').value;
              const loaiHopDong = document.getElementById('loaiHopDong').value;

              if (!namHoc || !dot || !ki || !loaiHopDong) {
                alert('Vui lòng chọn đầy đủ Năm học, Đợt, Kỳ và hệ đào tạo');
                return;
              }

              let url = `/api/hdgvm?namHoc=${encodeURIComponent(namHoc)}&dot=${encodeURIComponent(dot)}&ki=${encodeURIComponent(ki)}&loaiHopDong=${encodeURIComponent(loaiHopDong)}`;
              if (khoa && khoa !== 'ALL') {
                url += `&khoa=${encodeURIComponent(khoa)}`;
              }

              const response = await fetch(url);
              if (!response.ok) {
                throw new Error('Network response was not ok');
              }
              const data = await response.json();

              // Xóa dữ liệu cũ trong bảng
              const tbody = dataTable.querySelector('tbody');
              tbody.innerHTML = '';

              // Thêm dữ liệu mới vào bảng
              data.forEach(item => {
                const row = tbody.insertRow();
                row.insertCell(0).textContent = new Date(item.NgayBatDau).toLocaleDateString('vi-VN');
                row.insertCell(1).textContent = new Date(item.NgayKetThuc).toLocaleDateString('vi-VN');
                row.insertCell(2).textContent = item.DanhXung;
                row.insertCell(3).textContent = item.HoTen;
                row.insertCell(4).textContent = new Date(item.NgaySinh).toLocaleDateString('vi-VN');
                row.insertCell(5).textContent = item.CCCD;
                row.insertCell(6).textContent = item.HocVi;
                row.insertCell(7).textContent = item.ChucVu;
                row.insertCell(8).textContent = item.DienThoai;
                row.insertCell(9).textContent = item.Email;
                row.insertCell(10).textContent = item.STK;
                row.insertCell(11).textContent = item.NganHang;
                row.insertCell(12).textContent = item.MaSoThue;
                row.insertCell(13).textContent = parseFloat(item.SoTiet).toFixed(2);
              });

              // Hiển thị bảng
              tableContainer.style.display = 'block';

              calculateTotals();

            } catch (error) {
              console.error('Error:', error);
              alert('Đã xảy ra lỗi khi tải dữ liệu');
            }
          });
        });
      </script>


      <script src="/bootstrap/dist/js/bootstrap.bundle.min.js"></script>

      <script>
        // Tìm kiếm giảng viên mời theo tên
        function searchClass() {
          let input = document.getElementById("searchInput").value.toLowerCase();
          let table = document.getElementById("classTable");
          let tr = table.getElementsByTagName("tr");

          for (let i = 1; i < tr.length; i++) {
            let td = tr[i].getElementsByTagName("td")[1];
            if (td) {
              let textValue = td.textContent || td.innerText;
              if (textValue.toLowerCase().indexOf(input) > -1) {
                tr[i].style.display = "";
              } else {
                tr[i].style.display = "none";
              }
            }
          }
        }



        async function fetchGVMLists() {
          try {
            const response = await fetch('/api/classInfoGvm');
            if (!response.ok) {
              throw new Error('Network response was not ok');
            }
            const gvmLists = await response.json();
            return gvmLists;
          } catch (error) {
            console.error('Error fetching data:', error);
          }
        }


        async function viewClass(index) {

          gvmLists = await fetchGVMLists();

          index = parseInt(index);

          var gvm = gvmLists[index];


          // Hiển thị thông tin vào modal
          document.getElementById('modal-ma-gv').innerText = gvm.MaGvm;
          document.getElementById('modal-ho-ten').innerText = gvm.HoTen;
          document.getElementById('modal-ngay-sinh').innerText = new Date(gvm.NgaySinh).toLocaleDateString('vi-VN');
          document.getElementById('modal-cccd').innerText = gvm.CCCD;
          document.getElementById('modal-ngay-cap').innerText = new Date(gvm.NgayCapCCCD).toLocaleDateString('vi-VN');
          document.getElementById('modal-noi-cap').innerText = gvm.NoiCapCCCD;
          document.getElementById('modal-dia-chi-cccd').innerText = gvm.DiaChi;
          document.getElementById('modal-so-tk').innerText = gvm.STK;
          document.getElementById('modal-ngan-hang').innerText = gvm.NganHang;
          document.getElementById('modal-email').innerText = gvm.Email;
          document.getElementById('modal-heso-luong').innerText = gvm.HSL;//
          document.getElementById('modal-noi-cong-tac').innerText = gvm.NoiCongTac;
          document.getElementById('modal-chuc-vu').innerText = gvm.ChucVu;
          document.getElementById('modal-ma-so-thue').innerText = gvm.MaSoThue;
          document.getElementById('modal-tot-nghiep-loai').innerText = gvm.TotNghiepLoai;

          // Hiển thị modal
          document.getElementById('modal').style.display = 'flex';
        }



        // Đóng modal
        function closeModal() {
          document.getElementById("modal").style.display = "none";
        }

        // Thêm sự kiện khi nhấn ra ngoài modal để đóng modal
        window.onclick = function (event) {
          let modal = document.getElementById("modal");
          if (event.target == modal) {
            modal.style.display = "none";
          }
        };

        function calculateTotals() {
          const table = document.getElementById('dataTable'); // Lấy bảng
          const tbody = table.querySelector('tbody'); // Lấy phần thân bảng (tbody)

          let total = 0; // Biến lưu trữ tổng số tiết

          // Duyệt qua tất cả các hàng trong bảng
          for (let row of tbody.rows) {

            // Kiểm tra xem hàng có bị ẩn hay không
            if (row.style.display === 'none') {
              continue; // Bỏ qua hàng này nếu bị ẩn
            }

            const cell = row.cells[13]; // Cột số tiết là cột thứ 14 (chỉ số bắt đầu từ 0)
            const soTiet = parseFloat(cell.textContent, 10); // Chuyển giá trị trong ô thành số nguyên
            if (!isNaN(soTiet)) { // Kiểm tra nếu giá trị hợp lệ
              total += soTiet; // Cộng dồn vào tổng
            }
          }

          // Hiển thị tổng số tiết
          const totalElement = document.getElementById('totalQC'); // Giả sử có một phần tử để hiển thị tổng số tiết
          totalElement.textContent = `Tổng số tiết Quy Chuẩn: ${total.toFixed(2)}`; // Hiển thị tổng
        }

      </script>

      <script>
        // Lấy query string từ URL
        const urlParams = new URLSearchParams(window.location.search);
        const message = urlParams.get('message');

        // Lấy phần tử div để hiển thị thông báo
        const messageDiv = document.getElementById('message');

        // console.log(message)
        // Hiển thị thông báo dựa trên giá trị của message
        if (message === 'insertSuccess') {
          alert("Update Success")
        } else if (message === 'insertFalse') {
          alert("Update False")
        }

        // Sau khi hiển thị thông báo, xóa query string để tránh hiển thị lại khi refresh
        if (message) {
          // Sử dụng window.history để xóa query string mà không refresh lại trang
          const newUrl = window.location.origin + window.location.pathname;
          window.history.replaceState({}, document.title, newUrl);
        }

      </script>


      <!-- Phần phân quyền -->
      <script>
        document.addEventListener('DOMContentLoaded', () => {

          // Thêm sự kiện click cho phần tử có id="ThongTinGD"
          const ThongTinGD = document.getElementById("ThongTinGD");

          ThongTinGD.addEventListener("click", function (event) {
            event.preventDefault(); // Ngăn chặn hành vi mặc định của liên kết

            const isKhoa = localStorage.getItem("isKhoa"); // Lấy role từ localStorage

            if (isKhoa == 0) { // Nếu là đào tạo hoặc tài chính
              window.location.href = "/info2";
            } else {
              window.location.href = "/info";
            }
          });

          // Thêm sự kiện click cho phần tử có id="Home"

          const Home = document.getElementById("Home");

          Home.addEventListener("click", function (event) {
            event.preventDefault(); // Ngăn chặn hành vi mặc định của liên kết

            const isKhoa = localStorage.getItem("isKhoa")

            if (isKhoa == 0) { // Nếu là đào tạo hoặc tài chính
              window.location.href = "/maindt";
            } else {
              window.location.href = "/mainkhoa";
            }
          });
        });

      </script>

      <script>
        document.getElementById("changePasswordLink").addEventListener("click", function (event) {
          event.preventDefault(); // Ngăn chặn hành vi mặc định của thẻ a
          const tenDangNhap = localStorage.getItem("TenDangNhap"); // Lấy TenDangNhap từ localStorage

          if (tenDangNhap) {
            // Chuyển hướng đến trang changePassword và truyền TenDangNhap trong URL
            window.location.href = `/changePassword?tenDangNhap=${encodeURIComponent(tenDangNhap)}`;
          } else {
            alert("Không tìm thấy TenDangNhap trong localStorage.");
          }
        });
      </script>
      <script>
        $(document).ready(function () {
          $('#NamHoc option[value=""]').remove();
          $('#comboboxki option[value=""]').remove();
          $('#combobox-dot option[value=""]').remove();

          $.ajax({
            url: '/getNamHoc',
            method: 'GET',
            success: function (response) {
              if (response.success) {

                response.NamHoc.forEach(function (item) {
                  console.log(item.NamHoc);
                  $('#NamHoc').append(
                    `<option value="${item.NamHoc}">${item.NamHoc}</option>`
                  );
                });

                response.Ki.forEach(function (item) {
                  console.log(item.Ki);
                  $('#comboboxki').append(
                    `<option value="${item.value}">${item.Ki}</option>`
                  );
                });
                response.Dot.forEach(function (item) {
                  console.log(item.Dot);
                  $('#combobox-dot').append(
                    `<option value="${item.value}">${item.Dot}</option>`
                  );
                });
              } else {
                console.error("Không lấy được dữ liệu năm học:", response.message);
              }
            },
            error: function (error) {
              console.error("Lỗi khi lấy dữ liệu năm học:", error);
            }
          });
        });
      </script>
      <script>
        $(document).ready(function () {
          $('#MaPhongBan option[value=""]').remove();
          // Gọi AJAX để lấy dữ liệu JSON từ API
          $.ajax({
            url: '/getPhongBan', // Đường dẫn tới API getPhongBan
            method: 'GET',
            success: function (response) {
              // Kiểm tra nếu response thành công
              const MaPhongBan = response.MaPhongBan;
              if (response.success) {
                $('#MaPhongBan').prepend('<option value="ALL">Tất cả khoa</option>');
                // Lặp qua từng mục trong mảng MaPhongBan
                response.MaPhongBan.forEach(function (item) {
                  // Nếu item.MaPhongBan bằng boMon.MaPhongBan, hiển thị trước
                  console.log(item);
                  $('#MaPhongBan').append(
                    `<option value="${item.MaPhongBan}">${item.MaPhongBan}</option>`
                  );
                }
                );

                // Nếu không có phòng ban nào tương ứng, bạn có thể thêm tùy chọn mặc định ở đây
                if (!$('#MaPhongBan option:selected').length) {
                  $('#MaPhongBan').prepend('<option value="">Chọn Phòng Ban</option>');
                }
              } else {
                console.error("Không lấy được dữ liệu phongBan:", response.message);
              }
            },
            error: function (error) {
              console.error("Lỗi khi lấy dữ liệu phongBan:", error);
            }
          });
        });
      </script>
      <script>
        document.getElementById("infome").addEventListener("click", function (event) {
          event.preventDefault(); // Ngăn chặn hành vi mặc định của thẻ a
          const id_User = localStorage.getItem("id_User"); // Lấy id_User từ localStorage\
          if (id_User) {
            // Chuyển hướng đến trang infome và truyền id_User trong URL
            window.location.href = `/infome/${id_User}`;
          } else {
            alert("Không tìm thấy id_User trong localStorage.");
          }
        });
      </script>
      <script>
        document.addEventListener("DOMContentLoaded", () => {
          const role = localStorage.getItem("userRole");

          // Ẩn button ngay khi trang được tải
          const actionButton = document.getElementById('changeMessage');
          //Ẩn site thêm thông báo
          if (role === "Duyệt") {
            actionButton.style.display = '';
          } else {
            actionButton.style.display = 'none';
          }
        });
      </script>
      <script>
        document.getElementById("changeMessage").addEventListener("click", function (event) {
          event.preventDefault(); // Ngăn chặn hành vi mặc định của thẻ a
          const MaPhongBan = localStorage.getItem("MaPhongBan"); // Lấy MaPhongBan từ localStorage

          if (MaPhongBan) {
            // Chuyển hướng đến trang changeMessage và truyền MaPhongBan trong URL
            window.location.href = `/changeMessage/${MaPhongBan}`;
          } else {
            alert("Không tìm thấy MaPhongBan trong localStorage.");
          }
        });
      </script>
</body>

</html>