<!DOCTYPE html>
<html lang="en">

<head>
  <meta charset="UTF-8" />
  <meta name="viewport" content="width=device-width, initial-scale=1.0" />
  <title>Học Viện Kỹ Thuật Mật Mã</title>
  <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap@5.2.3/dist/css/bootstrap.min.css" />
  <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap-icons@1.11.3/font/bootstrap-icons.css" />
  <link rel="stylesheet" href="/css/styles.css" />
  <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.6.0/css/all.min.css" />
  <style>
    /* phần css cho label tổng số tiết ki*/
    .total-label {
      margin-left: auto;
      /* Căn phải cho thẻ total-label */
      margin-right: 0;
      font-family: Arial, sans-serif;
      font-size: 16px;
      background-color: #f4f4f4;
      padding: 10px;
      border-radius: 8px;
      width: fit-content;
      box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);
      display: block;
      /* Đảm bảo thẻ div là khối để căn phải hoạt động */
    }

    .total-label label {
      font-weight: bold;
      /* Giữ chữ in đậm */
      color: #000;
      /* Màu chữ đen */
      margin-right: 8px;
      /* Thêm khoảng cách bên phải */
      cursor: pointer;
      /* Tạo hiệu ứng chuyển màu nền và màu chữ mềm mại */
      padding: 5px 10px;
      /* Thêm padding cho label để tạo không gian */
      border: 1px solid #ccc;
      /* Khung cho label */
      border-radius: 4px;
      /* Bo góc cho khung */
    }

    .total-label label,
    .total-label label span {
      background-color: #007BFF;
      /* Màu nền khi hover */
      color: #fff;
      /* Màu chữ trắng khi hover */
    }

    .total-label span {
      font-weight: bold;
      /* Giữ chữ trong span cũng in đậm */
      color: #333;
      /* Màu chữ đậm cho giá trị */
    }

    /* CSS cho bảng */
    .table {
      width: 100%;
      border-collapse: collapse;
      margin-top: 20px;
    }

    .table th,
    .table td {
      padding: 10px;
      text-align: left;
      border: 1px solid #dee2e6;
    }

    .table th {
      background-color: #007bff;
      color: white;
      font-weight: bold;
    }

    .table tbody tr:nth-child(even) {
      background-color: #f8f9fa;
    }

    .table tbody tr:hover {
      background-color: #e2e6ea;
    }

    .table td {
      vertical-align: middle;
    }

    .bg-custom {
      background-color: #f8f9fa;
      padding: 20px;
      border-radius: 8px;
      box-shadow: 0 0 10px rgba(0, 0, 0, 0.1);
    }

    .spinner-border {
      position: fixed;
      left: 50%;
      top: 50%;
      transform: translate(-50%, -50%);
      z-index: 1000;
    }

    .header-actions {
      display: flex;
      /* Flexbox container */
      flex-wrap: wrap;
      /* Wrap items if they don't fit in one line */
      align-items: center;
      /* Vertically center items */
      gap: 10px;
      /* Space between the elements */
      justify-content: space-between;
    }

    .right {
      margin-top: 20px;
    }

    .btn {
      height: 45px;
      margin-left: 5px;
    }
  </style>

  <script src="https://ajax.googleapis.com/ajax/libs/jquery/3.7.1/jquery.min.js"></script>
  <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/js/bootstrap.bundle.min.js"></script>
</head>

<body>
  <nav class="navbar-top">
    <div class="container-fluid">
      <a class="navbar-brand" href="#">
        <img src="/Logo-Hoc-Vien-Ky-Thuat-Mat-Ma-ACTVN.webp" alt="Logo" />
        <div class="navbar-title">
          <img src="/dongchu_banner.png" alt="banner" />
        </div>
      </a>
    </div>
  </nav>

  <!-- Phần dưới của navbar chứa các mục nằm ngang -->
  <nav class="navbar navbar-expand-lg navbar-bottom sticky-top">
    <div class="" style="width: 100%">
      <button class="navbar-toggler" type="button" data-bs-toggle="collapse" data-bs-target="#navbarNav"
        aria-controls="navbarNav" aria-expanded="false" aria-label="Toggle navigation">
        <span class="navbar-toggler-icon"></span>
      </button>
      <div class="collapse navbar-collapse" style="width: 100%" id="navbarNav">
        <ul class="navbar-nav">
          <li class="nav-item">
            <a class="nav-link" id="Home" href=""><i class="fa-solid fa-house"></i></a>
          </li>
          <div class="navbar-nav">
            <div class="nav-item dropdown">
              <a class="nav-link dropdown-toggle" href="/login" id="navbarDropdownUser" data-bs-toggle="dropdown"
                aria-expanded="false">
                Giảng Viên Mời
              </a>
              <div class="dropdown-menu" aria-labelledby="dropdownMenuButton">
                <a class="nav-link" href="/gvmList">Danh sách giảng viên mời</a>
                <a class="nav-link" id="actionButton1" href="/importGvmList">Thêm giảng viên mời bằng file</a>
              </div>
            </div>
          </div>
          <div class="navbar-nav">
            <div class="nav-item dropdown">
              <a class="nav-link dropdown-toggle" href="/login" id="navbarDropdownUser" data-bs-toggle="dropdown"
                aria-expanded="false">
                Bảng Quy Chuẩn
              </a>
              <div class="dropdown-menu" aria-labelledby="dropdownMenuButton">
                <a class="nav-link" href="/import" id="actionButton2" style="width: 100%;">Thêm file quy chuẩn</a>
                <a class="nav-link" href="/tableTam">Bảng quy chuẩn dự kiến</a>
                <a class="nav-link" href="/tableQC">Bảng quy chuẩn chính thức</a>
                <a class="nav-link" id="ThongTinGD" href="">Thông tin giảng viên theo lớp</a>
              </div>
            </div>
          </div>
          <div class="navbar-nav">
            <div class="nav-item dropdown">
              <a class="nav-link dropdown-toggle" href="/login" id="navbarDropdownUser" data-bs-toggle="dropdown"
                aria-expanded="false">
                Mời Giảng
              </a>
              <div class="dropdown-menu" aria-labelledby="dropdownMenuButton">
                <a class="nav-link" href="/xemCacLopGvm">Xem các lớp mời</a>

                <a class="nav-link" href="/classInfoGvm">Thông tin lớp giảng viên mời</a>
                <a class="nav-link" href="/hopDongDuKien" role="button">Hợp đồng dự kiến</a>
                <a class="nav-link" href="/infoHDGvm" role="button">Thông tin hợp đồng</a>
                <li class="nav-item"></li>
                <a class="nav-link " href="/phuLucHD">Phụ lục hợp đồng</a>
                </li>
                <a class="nav-link " href="/exportHD">Hợp Đồng</a>

              </div>
            </div>
          </div>
          <div class="navbar-nav">
            <div class="nav-item dropdown">
              <a class="nav-link dropdown-toggle" href="/login" id="navbarDropdownUser" data-bs-toggle="dropdown"
                aria-expanded="false">
                Vượt Giờ
              </a>
              <div class="dropdown-menu" aria-labelledby="dropdownMenuButton">
                <a class="nav-link" id="" href="/infoclassvuotgio">Thông tin lớp vượt giờ của tôi</a>
                <a class="nav-link" id="" href="/addclass">Thêm lớp giảng dạy</a>
                <a class="nav-link" id="" href="/addclassgiuaky">Thêm lớp kiểm tra giữa kỳ</a>
                <a class="nav-link" id="actionButton3" href="/duyetgk">Duyệt các lớp giữa kì</a>
                <a class="nav-link" id="" href="/vuotGioExport">Xuất thông tin vượt giờ</a>              

              </div>
            </div>
          </div>
          <div class="navbar-nav">
            <div class="nav-item dropdown">
              <a class="nav-link dropdown-toggle" href="/login" id="navbarDropdownUser" data-bs-toggle="dropdown"
                aria-expanded="false">
                Nghiên Cứu Khoa Học
              </a>
              <div class="dropdown-menu" aria-labelledby="dropdownMenuButton">
                <a class="nav-link" id="" href="#">COMING SOON</a>
              </div>
            </div>
          </div>
          <div class="navbar-nav">
            <div class="nav-item dropdown">
              <a class="nav-link dropdown-toggle active" href="/login" id="navbarDropdownUser" data-bs-toggle="dropdown"
                aria-expanded="false">
                Đồ Án
              </a>
              <div class="dropdown-menu" aria-labelledby="dropdownMenuButton">
                <a class="nav-link" id="importDoAn" style="display: none;" href="/importDoAn">Import đồ án</a>
                <a class="nav-link" id="" href="/getVuotGioDoAnDuKienSite">Đồ án dự kiến</a>
                <a class="nav-link" id="" href="/doAnChinhThuc">Đồ án tốt nghiệp</a>
                <a class="nav-link" id="" href="/doAnHopDongDuKienSite">Hợp đồng dự kiến</a>
                <a class="nav-link" id="" href="/exportPhuLucDA">Phụ lục đồ án</a>
                <a class="nav-link " id="" href="/hopDongDA">Hợp đồng đồ án</a>
                <a class="nav-link" id="suaHD" style="display: none;" href="/suaHD">Sửa Thông Tin Hợp Đồng</a>
              </div>
            </div>
          </div>
          <div class="navbar-nav">
            <div class="nav-item dropdown">
              <a class="nav-link dropdown-toggle" href="/login" id="navbarDropdownUser" data-bs-toggle="dropdown"
                aria-expanded="false">
                Thống Kê
              </a>
              <div class="dropdown-menu" aria-labelledby="dropdownMenuButton">
                <a class="nav-link" id="" href="/thongkemg">Mời Giảng</a>
                <a class="nav-link" id="" href="/thongkevuotgio">Vượt giờ</a>
                <a class="nav-link" id="" href="#">Đồ Án</a>
                <a class="nav-link" id="" href="#">Nghiên cứu khoa học</a>
              </div>
            </div>
          </div>
          <div class="navbar-nav">
            <div class="nav-item dropdown">
              <a class="nav-link dropdown-toggle" href="#" id="navbarDropdownUser" data-bs-toggle="dropdown"
                aria-expanded="false">
                Hệ Thống
              </a>
              <div class="dropdown-menu" aria-labelledby="dropdownMenuButton">
                <a class="nav-link" id="" href="log">Xem File Log</a>
              </div>
            </div>
          </div>
        </ul>
        <div class="navbar-nav">
          <div class="nav-item dropdown">
            <a class="nav-link dropdown-toggle fullname" href="/login" id="navbarDropdownUser" data-bs-toggle="dropdown"
              aria-expanded="false">
              Hi, Lê Đức Thuận
            </a>
            <div class="dropdown-menu" aria-labelledby="dropdownMenuButton">
              <a class="dropdown-item" id="infome">Thông tin cá nhân</a>
              <a class="dropdown-item" id="changePasswordLink">Đổi mật khẩu</a>
                <a class="dropdown-item" id="changeMessage">Thêm thông báo</a>
              <a class="dropdown-item" href="/">Đăng xuất</a>
            </div>
          </div>
        </div>
      </div>
    </div>
  </nav>

  <div class="container-fluid my-4">
    <div class="mx-5 flex-grow-1">
      <div class="header-actions">
        <div class="right" style="margin-top: 0px;">
          <div class="loc d-flex align-items-center">
            <select class="selectop " id="combobox-dot">
              <option value="">Đợt</option>
            </select>

            <!-- Combo box Năm -->
            <select class="selectop " id="NamHoc">
              <option value="">Chọn năm học</option>
            </select>
            <select class="selectop" id="departmentFilter">
              <option value="">Chọn khoa</option>
            </select>
            <!-- <button class="export" onclick="exportSelectedData()">Xuất dữ liệu</button> -->

            <button class="btn text-nowrap" id="render" style="margin-top: 17px;">
              Hiển thị
            </button>
          </div>
        </div>
      </div>

      <div>
        <table class="table table-bordered">
          <!-- <thead>
            <tr id="table-header"></tr>
          </thead> -->
          <thead>
            <tr>
              <th>STT</th>
              <th>Giảng viên hướng </th>
              <th>Tên đề tài</th>
              <th>Sinh viên</th>
              <th>Mã sinh viên</th>
              <th>Đợt</th>
              <th>Năm học</th>
              <th>Ngày bắt đầu</th>
              <th>Ngày kết thúc</th>
              <th>Số tiết</th>
              <th>Tổng số tiết</th>
              <th>Khoa</th>
              <!-- Cột Khoa -->
              <th>Chi tiết giảng viên mời</th>
            </tr>
          </thead>
          <tbody class="teacher-group" id="data-table-body"></tbody>
        </table>

        <div class="total-label">
          <!-- <label>Tổng số tiết Lên Lớp: <span class="value" id="totalLL">0</span></label> -->
          <label>Tổng số tiết: <span class="value" id="totalQC">0</span></label>
        </div>
      </div>
      <div id="no-data-message" class="text-center my-3" style="display: none">
        Không có dữ liệu để hiển thị.
      </div>
    </div>
  </div>
  <script src="https://ajax.googleapis.com/ajax/libs/jquery/3.7.1/jquery.min.js"></script>
  <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/js/bootstrap.bundle.min.js"></script>

  <script>
    $(document).ready(function () {
      const isKhoa = localStorage.getItem("isKhoa");
      console.log('Giá trị isKhoa từ localStorage: ', isKhoa);
      hideButton();
    });

    function hideButton() {
      const isKhoa = localStorage.getItem("isKhoa");
      const role = localStorage.getItem("userRole");

      // Ẩn button import đồ án
      const importDoAn = document.getElementById('importDoAn');
      const suaHD = document.getElementById('suaHD');

      if (isKhoa == 0 && role == 'Duyệt'){
        importDoAn.style.display = 'block';
        suaHD.style.display = 'block';
      }
    
      if (isKhoa === null) {
        console.log('Không tìm thấy giá trị isKhoa trong localStorage');
      } else {
        console.log('Giá trị isKhoa: ', isKhoa);

        const actionButton = document.getElementById('actionButton');
        const actionButton1 = document.getElementById('actionButton1');
        const actionButton2 = document.getElementById('actionButton2');
        const actionButton3 = document.getElementById('actionButton3');

        if (actionButton1 && actionButton2) {
          if (isKhoa === "0") {
            actionButton1.style.display = 'none'; // Ẩn actionButton1 nếu isKhoa = 0
            actionButton2.style.display = 'inline-block'; // Hiện actionButton2
          } else {
            actionButton1.style.display = 'inline-block'; // Hiện actionButton1 nếu isKhoa khác 0
            actionButton2.style.display = 'none'; // Ẩn actionButton2
            if (role.toLowerCase() == 'gv') {
              actionButton1.style.display = 'none'; // Hiện actionButton1 nếu isKhoa khác 0
            }
          }
        } else {
          console.log('Không tìm thấy các nút actionButton1 hoặc actionButton2');
        }
        //Ẩn site duyệt lớp gk
        if (role === "Lãnh đạo khoa" || role === "Duyệt") {
          actionButton3.style.display = '';
        } else {
          actionButton3.style.display = 'none';
        }
      }
    }
  </script>

  <!-- render ra bảng k cần ấn gì cả -->
  <script>
    document.getElementById("render").addEventListener("click", function () {
      let Dot = document.getElementById("combobox-dot").value;
      let Nam = document.getElementById("NamHoc").value;
      let Khoa = document.getElementById("departmentFilter").value;

      const body = {
        Khoa: Khoa,
        Dot: Dot,
        Nam: Nam,
      };

      fetch("/getInfoDoAnHopDongDuKien", {
        method: "POST", // Phương thức HTTP
        headers: {
          "Content-Type": "application/json", // Định dạng dữ liệu
        },
        body: JSON.stringify(body), // Gửi Khoa trong body
      })
        .then((response) => {
          if (!response.ok) {
            throw new Error("Network response was not ok: " + response.statusText);
          }
          return response.json();
        })
        .then((data) => {
          // Xóa dữ liệu cũ khỏi bảng trước khi thêm dữ liệu mới
          document.getElementById("data-table-body").innerHTML = "";

          if (data.length === 0) {
            document.getElementById("no-data-message").style.display = "block"; // Hiển thị thông báo nếu không có dữ liệu
          } else {
            document.getElementById("no-data-message").style.display = "none"; // Ẩn thông báo nếu có dữ liệu

            console.log(data)
            renderTable(data);
          }
        })
        .catch((error) => {
          console.error("Error fetching data:", error);
          alert("Có lỗi xảy ra khi gọi API: " + error.message);
        });
    });

    function renderTable(data) {
      const tableBody = document.getElementById('data-table-body');
      tableBody.innerHTML = ''; // Clear previous data

      let index = 1;

      // Duyệt qua tất cả các giảng viên trong groupedByTeacher
      Object.keys(data).forEach(teacher => {
        const courses = data[teacher];
        const totalSoTiet = courses.reduce((total, course) => total + (parseFloat(course.SoTiet) || 0), 0);
      
        // Duyệt qua từng khóa học của giảng viên
        courses.forEach((course, courseIndex) => {
          const tr = document.createElement('tr');
          tr.setAttribute('data-department', course.MaPhongBan);
          tr.setAttribute('data-dot', course.Dot);
          //tr.setAttribute('data-ki', course.KiHoc);
          tr.setAttribute('data-nam', course.NamHoc);
      
          // Nếu là môn học đầu tiên của giảng viên, thì cần rowspan
          if (courseIndex === 0) {
            tr.innerHTML = `
              <td rowspan="${courses.length}">${index}</td>
              <td rowspan="${courses.length}">${course.HoTen.split(' - ')[0]}</td>
            `;
            index++; // Tăng index cho giảng viên tiếp theo
          }
      
          // Thêm các ô dữ liệu cho từng môn học
          tr.innerHTML += `
            <td>${course.TenDeTai}</td>
            <td>${course.SinhVien}</td>
            <td>${course.MaSV}</td>
            <td>${course.Dot}</td>
            <td>${course.NamHoc}</td>
            <td>${formatDate(course.NgayBatDau)}</td>
            <td>${formatDate(course.NgayKetThuc)}</td>
            <td>${course.SoTiet}</td>
          `;
      
          // Nếu là môn học đầu tiên của giảng viên, thêm tổng số tiết và phòng ban
          if (courseIndex === 0) {
            tr.innerHTML += `
              <td rowspan="${courses.length}">${totalSoTiet.toFixed(2)}</td>
              <td rowspan="${courses.length}">${course.MaPhongBan}</td>
              <td rowspan="${courses.length}">
                <button class="action-button view" onclick="viewClass(this, '${parseInt(course.id_Gvm) - 1}')">👁️</button>
              </td>
            `;
          }
      
          // Thêm tr vào tbody
          tableBody.appendChild(tr);
        });
      });
      
      calculateTotals()
    }

        // tổng quy chuẩn
        function calculateTotals() {
          let totalQC = 0;
    
          // Chọn tất cả các hàng chứa dữ liệu
          const rows = document.querySelectorAll('tbody.teacher-group tr[data-department]');
          rows.forEach(row => {
            // Kiểm tra xem hàng có hiển thị hay không
            const isVisible = row.style.display != 'none';
    
            if (isVisible) {
              // Lấy ô QuyChuan theo thứ tự cột (giả định cột QuyChuan là cột thứ 10)
              const qcCell = row.querySelector('td:nth-child(11)');
              if (qcCell) {
                const qcValue = parseFloat(qcCell.textContent.trim());
                if (!isNaN(qcValue)) {
                  //console.log(totalQC)
                  totalQC += qcValue;
                  console.log("qc = ", totalQC)
                }
              }
            }
          });
    
          // Hiển thị tổng số tiết QuyChuẩn vào element có id `totalQC`
          document.getElementById('totalQC').textContent = totalQC.toFixed(2);
        }
    

    // Hàm format ngày tháng
    function formatDate(dateStr) {
      if (!dateStr) return 'N/A';
      const date = new Date(dateStr);
      if (isNaN(date.getTime())) return 'N/A';
      const day = String(date.getDate()).padStart(2, '0');
      const month = String(date.getMonth() + 1).padStart(2, '0');
      const year = date.getFullYear();
      return `${day}/${month}/${year}`;
    }

    function viewClass(button, index) {
      var hre = "/viewGvm/" + index;
      window.location.href = hre;
    }
  </script>

  <!-- Phần phân quyền -->
  <script>
    document.addEventListener("DOMContentLoaded", () => {
      const importQuyChuan = document.getElementById("doAnDuKien");
      const MaPhongBan = localStorage.getItem("MaPhongBan");
      const role = localStorage.getItem("userRole");

      // Thêm sự kiện click cho phần tử có id="ThongTinGD"
      const ThongTinGD = document.getElementById("ThongTinGD");

      ThongTinGD.addEventListener("click", function (event) {
        event.preventDefault(); // Ngăn chặn hành vi mặc định của liên kết

        const isKhoa = localStorage.getItem("isKhoa"); // Lấy role từ localStorage

        if (isKhoa == 0) {
          // Nếu là đào tạo hoặc tài chính
          window.location.href = "/info2";
        } else {
          window.location.href = "/info";
        }
      });

      // Thêm sự kiện click cho phần tử có id="Home"

      const Home = document.getElementById("Home");

      Home.addEventListener("click", function (event) {
        event.preventDefault(); // Ngăn chặn hành vi mặc định của liên kết

        const isKhoa = localStorage.getItem("isKhoa");


        if (isKhoa == 0) {
          // Nếu là đào tạo hoặc tài chính
          window.location.href = "/maindt";
        } else {
          window.location.href = "/mainkhoa";
        }
      });
    });
  </script>

  <script>
    window.onload = function () {
      const TenNhanVien = localStorage.getItem("TenNhanVien"); // Lấy tên người dùng từ localStorage
      let Role = localStorage.getItem("userRole");
      if (Role.toUpperCase() == 'LÃNH ĐẠO KHOA') {
        Role = 'LĐK';
      }
      if (TenNhanVien) {
        // Hiển thị tên người dùng trên phần tử HTML
        document.querySelector(
          ".fullname"
        ).innerText = `${TenNhanVien} - ${Role}`;
      } else {
        document.querySelector(".fullname").innerText = "Hi, Guest"; // Hiển thị nếu không có tên người dùng
      }

      //document.querySelector(".role").innerText = `${Role}`;
    };
  </script>
  <script>
    function filterTable() {
      // Lấy giá trị đã chọn từ các combobox
      let dot = document.getElementById("combobox-dot").value;
      let ki = document.getElementById("comboboxki").value;
      let nam = document.getElementById("NamHoc").value;
      let department = document
        .getElementById("departmentFilter")
        .value.trim();

      let tbody = document.getElementById("data-table-body");
      let rows = tbody.getElementsByTagName("tr");

      for (let i = 0; i < rows.length; i++) {
        let row = rows[i];
        let cells = row.getElementsByTagName("td");

        // Giả sử thứ tự cột là: Khoa, Đợt, Kì, Năm
        let rowDepartment = cells[0].textContent.trim(); // Khoa
        let rowDot = cells[1].textContent.trim(); // Đợt
        let rowKi = cells[2].textContent.trim(); // Kì
        let rowNam = cells[3].textContent.trim(); // Năm

        // Logic lọc
        let matchesDepartment =
          department === "" || rowDepartment === department;
        let matchesDot = dot === "" || rowDot === dot;
        let matchesKi = ki === "" || rowKi === ki;
        let matchesNam = nam === "" || rowNam === nam; // Kiểm tra năm

        // Hiển thị hoặc ẩn hàng dựa trên kết quả lọc
        if (matchesDepartment && matchesDot && matchesKi && matchesNam) {
          row.style.display = ""; // Hiển thị hàng
        } else {
          row.style.display = "none"; // Ẩn hàng
        }
      }
    }
  </script>
  <script>
    document.getElementById("changePasswordLink").addEventListener("click", function (event) {
      event.preventDefault(); // Ngăn chặn hành vi mặc định của thẻ a
      const tenDangNhap = localStorage.getItem("TenDangNhap"); // Lấy TenDangNhap từ localStorage

      if (tenDangNhap) {
        // Chuyển hướng đến trang changePassword và truyền TenDangNhap trong URL
        window.location.href = `/changePassword?tenDangNhap=${encodeURIComponent(tenDangNhap)}`;
      } else {
        alert("Không tìm thấy TenDangNhap trong localStorage.");
      }
    });
  </script>

  <script>
    $(document).ready(function () {
      $('#NamHoc option[value=""]').remove();
      $('#comboboxki option[value=""]').remove();
      $('#combobox-dot option[value=""]').remove();

      $.ajax({
        url: '/getNamHoc',
        method: 'GET',
        success: function (response) {
          if (response.success) {

            response.NamHoc.forEach(function (item) {
              console.log(item.NamHoc);
              $('#NamHoc').append(
                `<option value="${item.NamHoc}">${item.NamHoc}</option>`
              );
            });

            response.Ki.forEach(function (item) {
              console.log(item.Ki);
              $('#comboboxki').append(
                `<option value="${item.value}">${item.Ki}</option>`
              );
            });
            response.Dot.forEach(function (item) {
              console.log(item.Dot);
              $('#combobox-dot').append(
                `<option value="${item.value}">${item.Dot}</option>`
              );
            });
          } else {
            console.error("Không lấy được dữ liệu năm học:", response.message);
          }
        },
        error: function (error) {
          console.error("Lỗi khi lấy dữ liệu năm học:", error);
        }
      });
    });
  </script>
  <script>
    $(document).ready(function () {
      $('#departmentFilter option[value=""]').remove();
      // Gọi AJAX để lấy dữ liệu JSON từ API
      $.ajax({
        url: '/getPhongBan', // Đường dẫn tới API getPhongBan
        method: 'GET',
        success: function (response) {
          // Kiểm tra nếu response thành công
          const MaPhongBan = response.MaPhongBan;
          if (response.success) {
            $('#departmentFilter').prepend('<option value="ALL">Tất cả khoa</option>');
            // Lặp qua từng mục trong mảng MaPhongBan
            response.MaPhongBan.forEach(function (item) {
              // Nếu item.MaPhongBan bằng boMon.MaPhongBan, hiển thị trước
              console.log(item);
              $('#departmentFilter').append(
                `<option value="${item.MaPhongBan}">${item.MaPhongBan}</option>`
              );
            }
            );

            // Nếu không có phòng ban nào tương ứng, bạn có thể thêm tùy chọn mặc định ở đây
            if (!$('#departmentFilter option:selected').length) {
              $('#departmentFilter').prepend('<option value="">Chọn Phòng Ban</option>');
            }
          } else {
            console.error("Không lấy được dữ liệu phongBan:", response.message);
          }
        },
        error: function (error) {
          console.error("Lỗi khi lấy dữ liệu phongBan:", error);
        }
      });
    });
  </script>

  <script>
    document.getElementById("infome").addEventListener("click", function (event) {
      event.preventDefault(); // Ngăn chặn hành vi mặc định của thẻ a
      const id_User = localStorage.getItem("id_User"); // Lấy id_User từ localStorage\
      if (id_User) {
        // Chuyển hướng đến trang infome và truyền id_User trong URL
        window.location.href = `/infome/${id_User}`;
      } else {
        alert("Không tìm thấy id_User trong localStorage.");
      }
    });
  </script>

<script>
      document.addEventListener("DOMContentLoaded", () => {
        const role = localStorage.getItem("userRole");

        // Ẩn button ngay khi trang được tải
        const actionButton = document.getElementById('changeMessage');
        //Ẩn site thêm thông báo
        if (role === "Duyệt") {
          actionButton.style.display = '';
        } else {
          actionButton.style.display = 'none';
        }
      });
    </script>
  <script>
      document.getElementById("changeMessage").addEventListener("click", function(event) {
        event.preventDefault(); // Ngăn chặn hành vi mặc định của thẻ a
        const MaPhongBan = localStorage.getItem("MaPhongBan"); // Lấy MaPhongBan từ localStorage

        if (MaPhongBan) {
            // Chuyển hướng đến trang changeMessage và truyền MaPhongBan trong URL
            window.location.href = `/changeMessage/${MaPhongBan}`;
        } else {
            alert("Không tìm thấy MaPhongBan trong localStorage.");
        }
      });
    </script>
  </body>

</html>