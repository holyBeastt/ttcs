<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>Học Viện Kỹ Thuật Mật Mã</title>
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap@5.2.3/dist/css/bootstrap.min.css" />
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap-icons@1.11.3/font/bootstrap-icons.css" />
    <link rel="stylesheet" href="/css/styles.css" />
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.6.0/css/all.min.css" />
    <style>
        /* Định dạng cho bảng */
        .table {
            width: 70%;
            border-collapse: separate;
            border-spacing: 0;
            margin-top: 20px;
            font-size: 0.9em;
            box-shadow: 0 0 20px rgba(0, 0, 0, 0.15);
            border-radius: 8px;
            overflow: hidden;
            justify-self: center;
        }

        .table th,
        .table td {
            padding: 10px;
            text-align: left;
            border: 1px solid #dee2e6;
            border-right: 2px solid #dee2e6;
            border-left: 2px solid #dee2e6;
        }

        .table th {
            background-color: blue;
            color: white;
            font-weight: bold;
            border-right: 2px solid #fff;
        }

        .table th:last-child {
            border-right: 2px solid #dee2e6;
        }

        .table tbody tr {
            border-bottom: 1px solid #dddddd;
            transition: all 0.3s ease;
        }

        .table tbody tr:nth-child(even) {
            background-color: #f3f3f3;
        }

        .table tbody tr:last-of-type {
            border-bottom: 2px solid #009879;
        }

        .table tbody tr:hover {
            background-color: #f5f5f5;
            transform: scale(1.01);
        }

        /* Định dạng cho biểu đồ */
        #thongkemgCanvas {
            width: 80%;
            max-width: 1200px;
            height: 400px;
            margin: 30px auto;
            padding: 20px;
            background: white;
            border-radius: 12px;
            box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
        }

        /* Định dạng cho tiêu đề */
        h3 {
            color: #009879;
            text-align: center;
            margin: 30px 0;
            font-weight: 600;
            position: relative;
            padding-bottom: 10px;
        }

        h3:after {
            content: '';
            position: absolute;
            bottom: 0;
            left: 50%;
            transform: translateX(-50%);
            width: 100px;
            height: 3px;
            background: #009879;
        }

        /* Định dạng cho combobox */
        .form-select {
            padding: 8px 12px;
            border-radius: 6px;
            border: 1px solid #ddd;
            background-color: white;
            transition: all 0.3s ease;
            margin: 5px;
            min-width: 150px;
        }

        .form-select:focus {
            border-color: #009879;
            box-shadow: 0 0 0 0.2rem rgba(0, 152, 121, 0.25);
        }

        /* Định dạng cho tổng số tiết */
        .total-label {
            background: #f8f9fa;
            padding: 15px 20px;
            border-radius: 8px;
            margin: 20px auto;
            width: fit-content;
            box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);
            font-weight: bold;
            color: #009879;
        }

        .value {
            color: #dc3545;
            font-size: 1.1em;
            margin-left: 5px;
        }

        /* Container cho các controls */
        .controls-container {
            display: flex;
            justify-content: start;
            align-items: center;
            gap: 10px;
            margin: 20px;
            flex-wrap: wrap;
        }

        /* Responsive design */
        @media (max-width: 768px) {
            #thongkemgCanvas {
                width: 95%;
                height: 300px;
            }

            .table {
                font-size: 0.8em;
            }

            .form-select {
                width: 100%;
                margin: 5px 0;
            }
        }

        /* Thêm container cho 2 biểu đồ tất cả khoa */
        .charts-container {
            display: flex;
            justify-content: space-between;
            gap: 20px;
            margin: 20px 0;
        }

        .chart-wrapper {
            width: 48%;
            background: white;
            border-radius: 12px;
            box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
            padding: 15px;
        }

        /* Định dạng cho biểu đồ khoa riêng lẻ */
        #khoa-chart-container {
            width: 100%;
            margin: 30px auto;
            padding: 20px;
            background: white;
            border-radius: 12px;
            box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
        }
        .btn.active {
        background: #1976d2;
        color: #fff;
        }
    </style>
</head>

<body>
  <!-- Phần header -->
  <%- include('header') %>

  <!-- Phần nội dung -->

    <div class="container-fluid box m-4">
    <div class="mx-5 flex-grow-1">
        <!-- Nút chuyển đổi -->
        <div class="d-flex justify-content-start align-items-center mb-3">
            <div class="btn-group me-3" role="group" aria-label="Toggle statistics">
                <button id="toggleKhoa" class="btn btn-primary active">
                    <i class="bi bi-building"></i> Thống kê theo Khoa
                </button>
                <button id="toggleHeDaoTao" class="btn btn-outline-primary">
                    <i class="bi bi-mortarboard"></i> Thống kê theo Hệ đào tạo
                </button>
            </div>
        </div>
        <!-- Bộ lọc -->
        <div class="d-flex justify-content-start align-items-end mb-3">
            <!-- Combo box kì -->
            <select class="form-select w-100px mx-1 selectop" id="comboboxki"></select>
            <!-- Combo box Năm -->
            <select class="form-select mx-1 selectop" id="NamHoc" style="width: 160px;"></select>
            <!-- Combo box Khoa -->
            <select class="form-select mx-1 selectop" id="Khoa" style="width: 170px;"></select>
            <!-- Combo box Hệ đào tạo (ẩn mặc định) -->
            <select class="form-select mx-1 selectop" id="HeDaoTao" style="width: fit-content; display: none;"></select>
        </div>
            <div class="overflow-auto">
                <table class="table table-bordered">
                    <thead>
                        <tr id="table-header"></tr>
                    </thead>
                    <tbody id="data-table-body"></tbody>
                </table>
            </div>
        </div>
    </div>
    </div>
    <script src="https://ajax.googleapis.com/ajax/libs/jquery/3.7.1/jquery.min.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/js/bootstrap.bundle.min.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
    <div id="chart-section">
        <div id="khoa-chart-container" style="display: none;">
            <canvas id="khoaChart"></canvas>
        </div>
        <div class="charts-container" id="all-khoa-charts" style="display: none;">
            <div class="chart-wrapper">
                <canvas id="pieChart"></canvas>
            </div>
            <div class="chart-wrapper">
                <canvas id="barChart"></canvas>
            </div>
        </div>
    </div>

    <!-- Bảng chi tiết số tiết của giảng viên -->
    <h3>Bảng chi tiết số tiết mời giảng</h3>
    <div class="total-label">
        <label><i class="fas fa-clock me-1"></i>: <span class="value" id="total">0</span></label>
        <label style="margin-left: 10px;"><i class="fas fa-money-bill-wave me-1"></i>: <span class="value" id="totalMoney">0</span></label>
    </div>
    <table class="table table-bordered my-2" border="1" id="thongkemgTable">
        <thead>
            <tr>
                <th>STT</th>
                <th>Họ tên</th>
                <th>Hệ đào tạo</th>
                <th>Học vị</th>
                <th>Tổng số tiết</th>
                <th>Tổng tiền mời giảng</th>
            </tr>
        </thead>
        <tbody id="tableBody">
            <!-- Dữ liệu bảng sẽ được chèn vào đây -->
        </tbody>
    </table>
    <script>
        $(document).ready(function () {
            // Biến để theo dõi số lượng combobox đã được khởi tạo
            let initializedComboboxes = 0;
            const totalComboboxes = 3; // Tổng số combobox cần khởi tạo

            function checkAndFetchData() {
                initializedComboboxes++;
                if (initializedComboboxes === totalComboboxes) {
                    fetchThongkemgData(); // Gọi hàm lấy dữ liệu sau khi tất cả combobox đã được khởi tạo
                }
            }

            // Xóa các option mặc định
            $('#NamHoc option').remove();
            $('#comboboxki option').remove();
            $('#Khoa option').remove();

            // Khởi tạo combobox Khoa
            $.ajax({
                url: '/getPhongBanmg',
                method: 'GET',
                success: function (response) {
                    if (response.success) {
                        // Thêm option "Tất cả khoa"
                        $('#Khoa').append('<option value="ALL">Tất cả khoa</option>');

                        // Thêm các option khoa không trùng lặp
                        response.MaPhongBan.forEach(function (item) {
                            $('#Khoa').append(
                                `<option value="${item.MaPhongBan}">${item.MaPhongBan}</option>`
                            );
                        });

                        // Kiểm tra nếu người dùng có MaPhongBan cụ thể
                        const MaPhongBan = localStorage.getItem("MaPhongBan");
                        const isKhoa = localStorage.getItem("isKhoa");

                        if (isKhoa == 0) {
                            $('#Khoa').val('ALL'); // Đặt giá trị Khoa thành "ALL" nếu isKhoa == 0
                        } else if (isKhoa == 1) {
                            $('#Khoa').val(MaPhongBan); // Đặt giá trị Khoa thành MaPhongBan nếu isKhoa == 1
                            $('#Khoa').prop('disabled', true); // Vô hiệu hóa combobox Khoa
                        }

                        checkAndFetchData();
                    }
                },
                error: function (error) {
                    console.error("Lỗi khi lấy dữ liệu phòng ban:", error);
                    checkAndFetchData();
                }
            });

            // Khởi tạo combobox Năm và Kỳ
            $.ajax({
                url: '/getNamHocmg',
                method: 'GET',
                success: function (response) {
                    if (response.success) {
                        // Populate combobox NamHoc
                        $('#NamHoc').empty();
                        response.NamHoc.forEach(function (item) {
                            $('#NamHoc').append(
                                `<option value="${item.NamHoc}">${
                                    item.NamHoc === "ALL" ? "Tất cả năm" : item.NamHoc
                                }</option>`
                            );
                        });

                        // Đặt giá trị mặc định là năm lớn nhất
                        if (response.MaxNamHoc) {
                            $('#NamHoc').val(response.MaxNamHoc).trigger('change');
                        }

                        // Populate combobox Ki
                        $('#comboboxki').empty();
                        response.Ki.forEach(function (item) {
                            $('#comboboxki').append(
                                `<option value="${item.Ki}">${
                                    item.Ki === "ALL" ? "Cả năm" : item.Ki
                                }</option>`
                            );
                        });
                        checkAndFetchData();
                        checkAndFetchData();
                    }
                },
                error: function (error) {
                    console.error("Lỗi khi lấy dữ liệu năm học:", error);
                }
            });
        });

        let myChart = null;

        let currentType = "khoa"; // "khoa" hoặc "hedaotao"

        // Hàm lấy danh sách hệ đào tạo
        function loadHeDaoTaoCombobox(selectedValue = "ALL", callback) {
            $('#HeDaoTao').empty();
            $.ajax({
                url: '/getHeDaoTaoMG',
                method: 'GET',
                success: function (response) {
                    if (response.success) {
                        $('#HeDaoTao').append('<option value="ALL">Tất cả hệ</option>');
                        response.HeDaoTao.forEach(function (item) {
                            $('#HeDaoTao').append(
                                `<option value="${item.HeDaoTao}">${item.HeDaoTao}</option>`
                            );
                        });
                        $('#HeDaoTao').val(selectedValue); // Luôn set về ALL nếu truyền vào
                        if (typeof callback === 'function') callback();
                    }
                }
            });
        }

        // Sửa lại sự kiện chuyển đổi
        document.getElementById("toggleKhoa").onclick = function () {
            currentType = "khoa";
            this.classList.add("active");
            document.getElementById("toggleHeDaoTao").classList.remove("active");
            $('#Khoa').show();
            $('#HeDaoTao').hide();
            document.getElementById('totalMoney').parentElement.style.display = 'none'; // Ẩn label tổng tiền khi về chế độ khoa
            fetchThongkemgData();
        };
        document.getElementById("toggleHeDaoTao").onclick = function () {
            currentType = "hedaotao";
            this.classList.add("active");
            document.getElementById("toggleKhoa").classList.remove("active");
            $('#Khoa').hide();
            $('#HeDaoTao').show();
            loadHeDaoTaoCombobox('ALL', function() {
                document.getElementById('HeDaoTao').value = 'ALL';
                fetchThongkemgData();
            });
        };

        // Sửa fetchThongkemgData để lấy đúng giá trị lọc
        async function fetchThongkemgData() {
            try {
                const ki = document.getElementById('comboboxki').value;
                const nam = document.getElementById('NamHoc').value;
                let khoa = "";
                let hedaotao = "";

                if (currentType === "khoa") {
                    khoa = document.getElementById('Khoa').value;
                } else {
                    hedaotao = document.getElementById('HeDaoTao').value;
                }

                let url = '/api/thongkemg-data';
                const params = new URLSearchParams();

                if (ki) params.append('kihoc', ki);
                if (nam) params.append('namhoc', nam);
                if (currentType === "khoa" && khoa) params.append('khoa', khoa);
                if (currentType === "hedaotao" && hedaotao) params.append('hedaotao', hedaotao);
                params.append('type', currentType);

                if (params.toString()) {
                    url += '?' + params.toString();
                }

                console.log('Requesting URL:', url);

                const response = await fetch(url);
                const data = await response.json();

                console.log('Received data:', data);

                // Cập nhật bảng
                const tableBody = document.getElementById('tableBody');
                if (!tableBody) {
                    console.error('Không tìm thấy element tableBody');
                    return;
                }

                // Xóa dữ liệu cũ
                tableBody.innerHTML = '';

                if (!data || data.length === 0) {
                    console.log('Không có dữ liệu');
                    const row = tableBody.insertRow();
                    const cell = row.insertCell(0);
                    cell.style.textAlign = 'center';
                    cell.textContent = 'Không có dữ liệu cho khoảng thời gian này';

                    // Ẩn biểu đồ và cập nhật tổng số tiết
                    document.getElementById('total').textContent = '0';
                    document.getElementById('khoa-chart-container').style.display = 'none';
                    document.getElementById('all-khoa-charts').style.display = 'none';
                    return;
                }

                // Cập nhật header của bảng dựa vào chế độ thống kê
                const tableHeader = document.querySelector('#thongkemgTable thead tr');
                if (tableHeader) {
                    if (currentType === "khoa") {
                        tableHeader.innerHTML = `
                            <th>STT</th>
                            <th>${khoa === 'ALL' ? 'Khoa' : 'Họ tên'}</th>
                            <th>${khoa === 'ALL' ? 'Tổng số tiết' : 'Hệ đào tạo'}</th>
                            <th>${khoa === 'ALL' ? 'Số lượng giảng viên' : 'Tổng số tiết'}</th>
                        `;
                    } else if (currentType === "hedaotao") {
                        if (hedaotao === 'ALL') {
                            tableHeader.innerHTML = `
                                <th>STT</th>
                                <th>Hệ đào tạo</th>
                                <th>Tổng số tiết</th>
                                <th>Tổng tiền mời giảng</th>
                                <th>Số lượng giảng viên</th>
                            `;
                        } else {
                            tableHeader.innerHTML = `
                                <th>STT</th>
                                <th>Họ tên</th>
                                <th>Hệ đào tạo</th>
                                <th>Học vị</th>
                                <th>Tổng số tiết</th>
                                <th>Tổng tiền mời giảng</th>
                            `;
                        }
                    }
                }

                // Thêm dữ liệu mới
                data.forEach((item, index) => {
                    const row = tableBody.insertRow();
                    let cellIdx = 0;
                    // Chế độ theo khoa
                    if (currentType === "khoa") {
                        row.insertCell(cellIdx++).textContent = index + 1;
                        row.insertCell(cellIdx++).textContent = (khoa === 'ALL') ? (item.khoa || "") : (item.hoten || "");
                        row.insertCell(cellIdx++).textContent = (khoa === 'ALL') ? (item.tongsotiet || "") : (item.hedaotao || "");
                        row.insertCell(cellIdx++).textContent = (khoa === 'ALL') ? (item.sogiangvien || "") : (item.tongsotiet || "");
                    } else if (currentType === "hedaotao") {
                        if (hedaotao === 'ALL') {
                            row.insertCell(cellIdx++).textContent = index + 1;
                            row.insertCell(cellIdx++).textContent = item.hedaotao || "";
                            row.insertCell(cellIdx++).textContent = item.tongsotiet || "";
                            const tongtienCell = row.insertCell(cellIdx++);
                            tongtienCell.textContent = item.tongtien ? new Intl.NumberFormat('vi-VN', { style: 'currency', currency: 'VND' }).format(item.tongtien) : '';
                            row.insertCell(cellIdx++).textContent = item.sogiangvien || "";
                        } else {
                            row.insertCell(cellIdx++).textContent = index + 1;
                            row.insertCell(cellIdx++).textContent = item.hoten || "";
                            row.insertCell(cellIdx++).textContent = item.hedaotao || "";
                            row.insertCell(cellIdx++).textContent = item.hocvi || "";
                            row.insertCell(cellIdx++).textContent = item.tongsotiet || "";
                            const tongtienCell = row.insertCell(cellIdx++);
                            tongtienCell.textContent = item.tongtien ? new Intl.NumberFormat('vi-VN', { style: 'currency', currency: 'VND' }).format(item.tongtien) : '';
                        }
                    }
                });

                // Cập nhật tổng số tiết
                const total = data.reduce((sum, item) => sum + parseFloat(item.tongsotiet || 0), 0);
                const totalElement = document.getElementById('total');
                if (totalElement) {
                    totalElement.textContent = total.toFixed(2);
                }

                // Thêm tính tổng tiền
                const totalMoney = data.reduce((sum, item) => sum + parseFloat(item.tongtien || 0), 0);
                const totalMoneyElement = document.getElementById('totalMoney');
                if (totalMoneyElement) {
                    if (currentType === 'hedaotao') {
                        totalMoneyElement.parentElement.style.display = '';
                        totalMoneyElement.textContent = new Intl.NumberFormat('vi-VN', { style: 'currency', currency: 'VND' }).format(totalMoney);
                    } else {
                        totalMoneyElement.parentElement.style.display = 'none';
                    }
                }

                // Sau khi cập nhật bảng, gọi hàm vẽ biểu đồ
                updateCharts(data, khoa, currentType);

            } catch (error) {
                console.error('Error in fetchThongkemgData:', error);
                const tableBody = document.getElementById('tableBody');
                if (tableBody) {
                    tableBody.innerHTML = `
                        <tr>
                            <td colspan="3" style="text-align: center; color: red;">
                                Đã xảy ra lỗi khi tải dữ liệu: ${error.message}
                            </td>
                        </tr>
                    `;
                }
            }
        }

        // Tách riêng hàm vẽ biểu đồ
        function updateCharts(data, khoa, type) {
            try {
                // Lấy giá trị hedaotao hiện tại nếu có
                const hedaotao = document.getElementById('HeDaoTao') ? document.getElementById('HeDaoTao').value : "";

                // Sửa điều kiện để hiển thị 2 biểu đồ khi khoa==ALL hoặc (type==hedaotao && hedaotao==ALL)
                if (khoa === 'ALL' || (type === "hedaotao" && hedaotao === "ALL")) {
                    document.getElementById('khoa-chart-container').style.display = 'none';
                    document.getElementById('all-khoa-charts').style.display = 'flex';

                    // Vẽ biểu đồ tròn
                    const ctxPie = document.getElementById('pieChart');
                    if (!ctxPie) {
                        console.error('Không tìm thấy element pieChart');
                        return;
                    }
                    if (window.pieChart instanceof Chart) {
                        window.pieChart.destroy();
                    }

                    // Tính tổng số tiết
                    const totalHours = data.reduce((sum, item) => sum + parseFloat(item.tongsotiet || 0), 0);

                    window.pieChart = new Chart(ctxPie, {
                        type: 'pie',
                        data: {
                            labels: data.map(item => type === "hedaotao" ? item.hedaotao : item.khoa),
                            datasets: [{
                                data: data.map(item => item.tongsotiet),
                                backgroundColor: [
                                    '#FF6384', '#36A2EB', '#FFCE56',
                                    '#4BC0C0', '#9966FF', '#FF9F40'
                                ]
                            }]
                        },
                        options: {
                            responsive: true,
                            maintainAspectRatio: true,
                            aspectRatio: 1.5,
                            plugins: {
                                legend: {
                                    position: 'right',
                                    labels: {
                                        // Tùy chỉnh nhãn để hiển thị phần trăm
                                        generateLabels: function (chart) {
                                            const data = chart.data;
                                            if (data.labels.length && data.datasets.length) {
                                                return data.labels.map((label, i) => {
                                                    const value = data.datasets[0].data[i];
                                                    const percentage = ((value / totalHours) * 100).toFixed(1);
                                                    return {
                                                        text: `${label} (${percentage}%)`,
                                                        fillStyle: data.datasets[0].backgroundColor[i],
                                                        hidden: isNaN(value) || value === 0,
                                                        index: i
                                                    };
                                                });
                                            }
                                            return [];
                                        }
                                    }
                                },
                                tooltip: {
                                    callbacks: {
                                        label: function (context) {
                                            const value = context.raw;
                                            const percentage = ((value / totalHours) * 100).toFixed(1);
                                            return `${context.label}: ${value} tiết (${percentage}%)`;
                                        }
                                    }
                                },
                                title: {
                                    display: true,
                                    text: type === "hedaotao" ? 'Phân bố số tiết theo hệ đào tạo' : 'Phân bố số tiết theo khoa',
                                    font: { size: 20 }
                                }
                            }
                        }});

                        // Vẽ biểu đồ cột số giảng viên
                        const ctxBar = document.getElementById('barChart');
                        if (!ctxBar) {
                            console.error('Không tìm thấy element barChart');
                            return;
                        }
                        if (window.barChart instanceof Chart) {
                            window.barChart.destroy();
                        }
                        window.barChart = new Chart(ctxBar, {
                            type: 'bar',
                            data: {
                                labels: data.map(item => type === "hedaotao" ? item.hedaotao : item.khoa),
                                datasets: [{
                                    label: 'Số tiết mời giảng',
                                    data: data.map(item => item.tongsotiet),
                                    backgroundColor: 'rgba(54, 162, 235, 0.5)',
                                    borderColor: 'rgba(54, 162, 235, 1)',
                                    borderWidth: 1
                                }]
                            },
                            options: {
                                responsive: true,
                                maintainAspectRatio: true,
                                aspectRatio: 1.5,
                                plugins: {
                                    title: {
                                        display: true,
                                        text: type === "hedaotao" ? 'Số tiết mời giảng theo hệ đào tạo' : 'Số tiết mời giảng theo khoa',
                                        font: { size: 20 }
                                    }
                                },
                                scales: {
                                    y: {
                                        beginAtZero: true,
                                        ticks: {
                                            stepSize: 1
                                        }
                                    }
                                }
                            }});
                        } else {
                            // Hiển thị biểu đồ cho một khoa
                            document.getElementById('khoa-chart-container').style.display = 'block';
                            document.getElementById('all-khoa-charts').style.display = 'none';

                            // Vẽ biểu đồ cột cho khoa được chọn
                            const ctxKhoa = document.getElementById('khoaChart');
                            if (!ctxKhoa) {
                                console.error('Không tìm thấy element khoaChart');
                                return;
                            }
                            if (window.khoaChart instanceof Chart) {
                                window.khoaChart.destroy();
                            }
                            window.khoaChart = new Chart(ctxKhoa, {
                                type: 'bar',
                                data: {
                                    labels: data.map(item => item.hoten),
                                    datasets: [{
                                        label: 'Số tiết mời giảng',
                                        data: data.map(item => item.tongsotiet),
                                        backgroundColor: 'blue',
                                        borderColor: 'black',
                                        borderWidth: 1
                                    }]
                                },
                                options: {
                                    responsive: true,
                                    maintainAspectRatio: true,
                                    aspectRatio: 2,
                                    plugins: {
                                        title: {
                                            display: true,
                                            text: 'Số tiết mời giảng theo giảng viên'
                                        }
                                    },
                                    scales: {
                                        y: {
                                            beginAtZero: true
                                        }
                                    }
                                }
                            });
                        }
                    } catch (error) {
                        console.error('Error in updateCharts:', error);
                    }
                }

                // Load dữ liệu ban đầu khi trang được tải
                window.onload = async () => {
                    await fetchThongkemgData();
                };

                // Thêm event listeners
                document.getElementById('comboboxki').addEventListener('change', fetchThongkemgData);
                document.getElementById('NamHoc').addEventListener('change', fetchThongkemgData);
                document.getElementById('Khoa').addEventListener('change', fetchThongkemgData);
                document.getElementById('HeDaoTao').addEventListener('change', fetchThongkemgData);
            </script>

            <script>
                function calculateTotals() {
                    let total = 0;
                    const rows = document.querySelectorAll('#tableBody tr');

                    rows.forEach((row) => {
                        // Lấy ô chứa số tiết (cột thứ 3)
                        const sotietCell = row.querySelector('td:nth-child(3)');
                        // Chuyển đổi giá trị thành số và cộng dồn
                        const sotiet = parseFloat(sotietCell.textContent) || 0;
                        total += sotiet;
                    });

                    // Cập nhật tổng số tiết
                    document.getElementById('total').textContent = total.toFixed(2);
                }
            </script>
            <script>
                document.addEventListener("DOMContentLoaded", () => {
                    const role = localStorage.getItem("userRole");
                    const isKhoa = localStorage.getItem("isKhoa");
                    const MaPhongBan = localStorage.getItem("MaPhongBan"); // Lấy MaPhongBan từ localStorage

                    // Ẩn button ngay khi trang được tải
                    const actionButton = document.getElementById('changeMessage');
                    //Ẩn site thêm thông báo
                    if (role === APP_ROLES.troLy_phong || role === APP_ROLES.lanhDao_phong) {
                        actionButton.style.display = '';
                    } else {
                        actionButton.style.display = 'none';
                    }
                });


            </script>

            <script>
                document.getElementById("changeMessage").addEventListener("click", function (event) {
                    event.preventDefault(); // Ngăn chặn hành vi mặc định của thẻ a
                    const MaPhongBan = localStorage.getItem("MaPhongBan"); // Lấy MaPhongBan từ localStorage

                    if (MaPhongBan) {
                        // Chuyển hướng đến trang changeMessage và truyền MaPhongBan trong URL
                        window.location.href = `/changeMessage/${MaPhongBan}`;
                    } else {
                        alert("Không tìm thấy MaPhongBan trong localStorage.");
                    }
                });
            </script>

            <script>
                document.getElementById("changePasswordLink").addEventListener("click", function (event) {
                    event.preventDefault(); // Ngăn chặn hành vi mặc định của thẻ a
                    const tenDangNhap = localStorage.getItem("TenDangNhap"); // Lấy TenDangNhap từ localStorage

                    if (tenDangNhap) {
                        // Chuyển hướng đến trang changePassword và truyền TenDangNhap trong URL
                        window.location.href = `/changePassword?tenDangNhap=${encodeURIComponent(tenDangNhap)}`;
                    } else {
                        alert("Không tìm thấy TenDangNhap trong localStorage.");
                    }
                });
            </script>

            <script>
                document.getElementById("infome").addEventListener("click", function (event) {
                    event.preventDefault(); // Ngăn chặn hành vi mặc định của thẻ a
                    const id_User = localStorage.getItem("id_User"); // Lấy id_User từ localStorage
                    if (id_User) {
                        // Chuyển hướng đến trang infome và truyền id_User trong URL
                        window.location.href = `/infome/${id_User}`;
                    } else {
                        alert("Không tìm thấy id_User trong localStorage.");
                    }
                });
                // Thêm sự kiện click cho phần tử có id="Home"

                const Home = document.getElementById("Home");

                Home.addEventListener("click", function (event) {
                    event.preventDefault(); // Ngăn chặn hành vi mặc định của liên kết

                    const isKhoa = localStorage.getItem("isKhoa");

                    if (isKhoa == 0) {
                        // Nếu là đào tạo hoặc tài chính
                        window.location.href = "/maindt";
                    } else {
                        window.location.href = "/mainkhoa";
                    }
                });
            </script>
</body>

</html>
