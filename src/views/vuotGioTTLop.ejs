<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Học Viện Kỹ Thuật Mật Mã</title>
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap@5.2.3/dist/css/bootstrap.min.css">
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap-icons@1.11.3/font/bootstrap-icons.css">
    <link rel="stylesheet" href="/css/forminput.css">
    <link rel="stylesheet" href="/css/styles.css">
    <link rel="stylesheet" href="/css/table.css">
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.6.0/css/all.min.css">
    <!-- <link rel="stylesheet" href="public/css/styles.css"> -->
    <style>
      input, select{
        color: #2c9caf !important;
      }

      .formcreate {
        display: flex;
        overflow-y: auto;
        flex-direction: column;
        gap: 10px;
        max-width: 350px;
        background-color: #fff;
        padding: 20px;
        border-radius: 20px;
        position: relative;
      }

      .title {
        font-size: 28px;
        color: royalblue;
        font-weight: 600;
        letter-spacing: -1px;
        position: relative;
        display: flex;
        align-items: center;
        padding-left: 30px;
      }

      .title::before,.title::after {
        position: absolute;
        content: "";
        height: 16px;
        width: 16px;
        border-radius: 50%;
        left: 0px;
        background-color: royalblue;
      }

      .title::before {
        width: 18px;
        height: 18px;
        background-color: royalblue;
      }

      .title::after {
        width: 18px;
        height: 18px;
        animation: pulse 1s linear infinite;
      }

      .message, .signin {
        color: rgba(88, 87, 87, 0.822);
        font-size: 14px;
      }

      .signin {
        text-align: center;
      }

      .signin a {
        color: royalblue;
      }

      .signin a:hover {
        text-decoration: underline royalblue;
      }

      .flex {
        display: flex;
        width: 100%;
        gap: 6px;
      }

      .formcreate label {
        position: relative;
      }

      .formcreate label .input {
        width: 100%;
        padding: 10px 10px 20px 10px;
        outline: 0;
        border: 1px solid rgba(105, 105, 105, 0.397);
        border-radius: 10px;
      }

      .formcreate label .input + span {
        position: absolute;
        left: 10px;
        top: 15px;
        color: grey;
        font-size: 0.9em;
        cursor: text;
        transition: 0.3s ease;
      }

      .formcreate label .input:placeholder-shown + span {
        top: 15px;
        font-size: 0.9em;
      }

      .formcreate label .input:focus + span,.formcreate label .input:valid + span {
        top: 30px;
        font-size: 0.7em;
        font-weight: 600;
      }

      .formcreate label .input:valid + span {
        color: green;
      }

      .submit {
        border: none;
        outline: none;
        background-color: royalblue;
        padding: 10px;
        border-radius: 10px;
        color: #fff;
        font-size: 16px;
        transform: .3s ease;
      }

      .submit:hover {
        background-color: rgb(56, 90, 194);
      }

      @keyframes pulse {
        from {
          transform: scale(0.9);
          opacity: 1;
        }

        to {
          transform: scale(1.8);
          opacity: 0;
        }
      }
      #formcreate {
        display: none;
        /* Ẩn form ban đầu */
        position: fixed;
        top: 50%;
        left: 50%;
        transform: translate(-50%, -50%);
        border-radius: 10px;
        /* Góc tròn */
        padding: 20px;
        background-color: white;
        z-index: 2000;
        width: max-content;
        box-shadow: 0px 6px 16px rgba(0, 0, 0, 0.2);
        /* Tăng bóng đổ */
        font-family: Arial, sans-serif;
      }
      /* phần css cho label tổng số tiết ki*/
      .total-label {
        margin-left: auto;
        margin-right: 0;
        font-family: Arial, sans-serif;
        font-size: 16px;
        background-color: #f4f4f4;
        padding: 10px;
        border-radius: 8px;
        width: fit-content;
        box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);
        display: block;
      }

      .total-label label {
        font-weight: bold;
        color: #000;
        margin-right: 8px;
        cursor: pointer;
        padding: 5px 10px;
        border: 1px solid #ccc;
        border-radius: 4px;
      }

      .total-label label,
      .total-label label span {
        background-color: #007BFF;
        color: #fff;
      }

      .total-label span {
        font-weight: bold;
        color: #333;
      }
      #suggestionBox {
        position: absolute; /* Định vị tuyệt đối để căn theo input */
        background-color: white; /* Màu nền trắng để dễ nhìn */
        border: 1px solid #ccc; /* Viền để phân biệt */
        z-index: 1000; /* Đảm bảo nằm trên các phần tử khác */
        width: calc(100% - 20px); /* Độ rộng phù hợp với input */
        max-height: 200px; /* Giới hạn chiều cao */
        overflow-y: auto; /* Cuộn dọc nếu nội dung quá nhiều */
        box-shadow: 0px 4px 6px rgba(0, 0, 0, 0.1); /* Đổ bóng đẹp mắt */
      }
    </style>
</head>
<body>
   
    <nav class="navbar-top ">
        <div class="container-fluid">
          <a class="navbar-brand" href="#">
            <img src="/Logo-Hoc-Vien-Ky-Thuat-Mat-Ma-ACTVN.webp" alt="Logo">
            <div class="navbar-title">
              <img src="/dongchu_banner.png" alt="banner">
            </div>
          </a>
        </div>
      </nav>
    
      <!-- Phần dưới của navbar chứa các mục nằm ngang -->
      <nav class="navbar navbar-expand-lg navbar-bottom sticky-top">
        <div class="" style="width: 100%;">
          <button class="navbar-toggler" type="button" data-bs-toggle="collapse" data-bs-target="#navbarNav" aria-controls="navbarNav" aria-expanded="false" aria-label="Toggle navigation">
            <span class="navbar-toggler-icon"></span>
          </button>
          <div class="collapse navbar-collapse" style="width: 100%;" id="navbarNav">
            <ul class="navbar-nav">
              <li class="nav-item">
                <a class="nav-link" id="Home" href=""><i class="fa-solid fa-house"></i></a>
              </li>
              <div class="navbar-nav">
                <div class="nav-item dropdown">
                  <a class="nav-link dropdown-toggle" href="/login" id="navbarDropdownUser" data-bs-toggle="dropdown"
                    aria-expanded="false">
                    Giảng Viên Mời
                  </a>
                  <div class="dropdown-menu" aria-labelledby="dropdownMenuButton">
                    <a class="nav-link" href="/gvmList">Danh sách giảng viên mời</a>
                    <a class="nav-link" id="actionButton1" href="/importGvmList" style="width: 100%;">Thêm giảng viên mời bằng file</a>
                  </div>
                </div>
              </div>
              <div class="navbar-nav">
                <div class="nav-item dropdown">
                  <a class="nav-link dropdown-toggle" href="/login" id="navbarDropdownUser" data-bs-toggle="dropdown"
                    aria-expanded="false">
                    Bảng Quy Chuẩn
                  </a>
                  <div class="dropdown-menu" aria-labelledby="dropdownMenuButton">
                    <a class="nav-link" href="/import" id="actionButton2" style="width: 100%;">Thêm file quy chuẩn</a>
                <a class="nav-link" href="/tableTam">Bảng quy chuẩn dự kiến</a>
                    <a class="nav-link" href="/tableQC">Bảng quy chuẩn chính thức</a>
                    <a class="nav-link" id="ThongTinGD" href="">Thông tin giảng viên theo lớp</a>
                  </div>
                </div>
              </div>
              <div class="navbar-nav">
                <div class="nav-item dropdown">
                  <a class="nav-link dropdown-toggle" href="/login" id="navbarDropdownUser" data-bs-toggle="dropdown"
                    aria-expanded="false">
                    Mời Giảng
                  </a>
                  <div class="dropdown-menu" aria-labelledby="dropdownMenuButton">
                    <a class="nav-link" href="/xemCacLopGvm">Xem các lớp mời</a>
                    <a class="nav-link" href="/classInfoGvm">Thông tin lớp giảng viên mời</a>
                    <a class="nav-link" href="/hopDongDuKien" role="button">Hợp đồng dự kiến</a>

                    <a  class="nav-link " href="/infoHDGvm" role="button">Thông tin hợp đồng</a>   
                    <li class="nav-item"></li>
                      <a class="nav-link " href="/phuLucHD" >Phụ lục hợp đồng</a>
                    </li>
                    <a class="nav-link " href="/exportHD">Hợp Đồng</a>

                  </div>
                </div>
              </div>
              <div class="navbar-nav">
                <div class="nav-item dropdown">
                  <a class="nav-link dropdown-toggle active" href="/login" id="navbarDropdownUser" data-bs-toggle="dropdown"
                    aria-expanded="false">
                    Vượt Giờ
                  </a>
                  <div class="dropdown-menu" aria-labelledby="dropdownMenuButton">
                    <a class="nav-link active" id="" href="/infoclassvuotgio">Thông tin lớp vượt giờ của tôi</a>
                    <a class="nav-link" id="" href="/addclass">Thêm lớp giảng dạy</a>              
                    <a class="nav-link" id="" href="/addclassgiuaky">Thêm lớp kiểm tra giữa kỳ</a>
                    <a class="nav-link" id="actionButton3" href="/duyetgk">Duyệt các lớp giữa kì</a>
                    <a class="nav-link" id="" href="/vuotGioExport">Xuất thông tin vượt giờ</a>              

                  </div>
                </div>
              </div>
              <div class="navbar-nav">
                <div class="nav-item dropdown">
                  <a class="nav-link dropdown-toggle" href="/login" id="navbarDropdownUser" data-bs-toggle="dropdown"
                    aria-expanded="false">
                    Nghiên Cứu Khoa Học
                  </a>
                  <div class="dropdown-menu" aria-labelledby="dropdownMenuButton">
                    <!-- <a class="nav-link" id="" href="#">COMING SOON</a>               -->
                    <a class="nav-link" href="/detaiduan">Đề tài và dự án</a>
                    <a class="nav-link" href="/baibaokhoahoc">Bài báo khoa học</a>
                    <a class="nav-link" id="" href="/bangsangchevagiaithuong">Bằng sáng chế và giải thưởng trong năm</a>
                    <a class="nav-link" id="" href="/sachvagiaotrinh">Sách và giáo trình xuất bản trong nước</a>
                    <a class="nav-link" id="" href="/nckhvahuanluyendoituyen">NCKH và Huấn luyện đội tuyển</a>
                    <a class="nav-link" id="" href="/xaydungctdt">Xây dựng chương trình đào tạo</a>
                    <a class="nav-link" id="" href="/biensoangiaotrinhbaigiang">Biên soạn giáo trình, bài giảng</a>
                    <!-- <a class="nav-link" id="" href="/nhiemvukhoahocvacongnghe">Nhiệm vụ khoa học và công nghệ</a> -->
                  </div>
                </div>
              </div>
              <div class="navbar-nav">
                <div class="nav-item dropdown">
                  <a class="nav-link dropdown-toggle" href="/login" id="navbarDropdownUser" data-bs-toggle="dropdown"
                    aria-expanded="false">
                    Đồ Án
                  </a>
                  <div class="dropdown-menu" aria-labelledby="dropdownMenuButton">
                    <a class="nav-link" id="importDoAn" style="display: none;" href="/importDoAn">Import đồ án</a>
                    <a class="nav-link" id="" href="/getVuotGioDoAnDuKienSite">Đồ án dự kiến</a>
                    <a class="nav-link" id="" href="/doAnChinhThuc">Đồ án tốt nghiệp</a>
                    <a class="nav-link" id="" href="/doAnHopDongDuKienSite">Hợp đồng dự kiến</a>
                    <a class="nav-link" id="" href="/exportPhuLucDA">Phụ lục đồ án</a>
                    <a class="nav-link" id="" href="/hopDongDA">Hợp đồng đồ án</a>
                  </div>
              </div>
              <div class="navbar-nav">
                <div class="nav-item dropdown">
                  <a class="nav-link dropdown-toggle" href="/login" id="navbarDropdownUser" data-bs-toggle="dropdown"
                    aria-expanded="false">
                    Thống Kê
                  </a>
                  <div class="dropdown-menu" aria-labelledby="dropdownMenuButton">
                    <a class="nav-link" id="" href="/thongkemg">Mời Giảng</a>
                    <a class="nav-link" id="" href="#">Giảng viên cơ hữu</a>
                    <a class="nav-link" id="" href="#">Đồ Án</a>
                    <a class="nav-link" id="" href="#">Nghiên cứu khoa học</a>
                  </div>
                </div>
              </div>
              <div class="navbar-nav">
                <div class="nav-item dropdown">
                  <a class="nav-link dropdown-toggle" href="#" id="navbarDropdownUser" data-bs-toggle="dropdown"
                    aria-expanded="false">
                     Hệ Thống
                  </a>
                  <div class="dropdown-menu" aria-labelledby="dropdownMenuButton">
                    <a class="nav-link" id="" href="log">Xem File Log</a>
                  </div>
                </div>
              </div>
            </ul>
              <div class="navbar-nav">
                <div class="nav-item dropdown">
                  <a class="nav-link dropdown-toggle fullname" href="/login" id="navbarDropdownUser" data-bs-toggle="dropdown"
                    aria-expanded="false">
                    Hi, Lê Đức Thuận
                  </a>
                  <div class="dropdown-menu" aria-labelledby="dropdownMenuButton">
                    <a class="dropdown-item"id="infome">Thông tin cá nhân</a>
                    <a class="dropdown-item" id="changePasswordLink">Đổi mật khẩu</a>
                <a class="dropdown-item" id="changeMessage">Thêm thông báo</a>
                    <a class="dropdown-item" href="/">Đăng xuất</a>
                  </div>
                </div>
              </div>
          </div>
        </div>
      </nav>
      <div>
        
        <h1 class="d-flex justify-content-center my-3">Thông tin vượt giờ</h1>
        <div class="m-3 form">
          <div class="">
            <div class="d-flex justify-content-between">
              <div class="cbb d-flex" style="margin-top: 20px;">
        
                <!-- Combo box Năm -->
                <select class="selectop mx-1" id="NamHoc">
                  <option value="">Năm học</option>
                </select>
        
                <button id="info" class="btn text-nowrap mx-2" style="height: 45px;">Hiển thị</button>
              </div>
              <div class="d-flex align-items-center">
                <select name="MaPhongBan" id="MaPhongBan" class="form-control mx-2" style="border: 2px solid #2c9caf; height: 45px;">

                </select>
                <div class="" style="position: relative;">
                  <input
                    class="form-control" style="border: 2px solid #2c9caf; height: 45px;"
                    type="text"
                    id="TenNhanVien"
                    onkeyup="suggest()"
                    placeholder="Nhập tên nhân viên"
                  />
                  <div id="suggestionBox"></div>
                </div>
                <div>
                  <button id="xemlopgv" class="btn mx-2" style="margin: 0px;" onclick="loadInfoLopGV()">Xem</button>  
                </div>
              </div>
            </div> 
            <div id="renderInfo">
              <h4>A.1.Giảng dạy</h4>
              <h5>Học kỳ I - Đào tạo chuyên ngành Kỹ thuật mật mã</h5>
              <table class=" text-center" style="width: 100%;">
                <thead>
                  <tr>
                    <th style="width: 50px;">TT</th>
                    <th style="width: 200px;">Tên học phần</th>
                    <th style="width: 50px;">Số TC</th>
                    <th style="width: 200px;">Lớp học phần</th>
                    <th style="width: 50px;">Số tiết theo TKB</th>
                    <th style="width: 50px;">Số tiết QC</th>
                    <th style="width: 100px;">Lớp thuộc</th>
                  </tr>
                </thead>
                <tbody id="tableBodyA11" class="teacher-group">
                  <!-- Dữ liệu sẽ được chèn vào đây -->
                </tbody>
              </table>
              <div class="total-label">
                <label class="flex"><span class="align-content-around">Tổng (1): </span><span class="value" id="totalGiangDay1">0</span></label>
              </div>
              <h5>Học kỳ I - Đào tạo hệ đóng học phí</h5>
              <table class=" text-center" style="width: 100%;">
                <thead>
                  <tr>
                    <th style="width: 50px;">TT</th>
                    <th style="width: 200px;">Tên học phần</th>
                    <th style="width: 50px;">Số TC</th>
                    <th style="width: 200px;">Lớp học phần</th>
                    <th style="width: 50px;">Số tiết theo TKB</th>
                    <th style="width: 50px;">Số tiết QC</th>
                    <th style="width: 100px;">Lớp thuộc</th>
                  </tr>
                </thead>
                <tbody id="tableBodyA12" class="teacher-group">
                  <!-- Dữ liệu sẽ được chèn vào đây -->
                </tbody>
              </table>
              <div class="total-label">
                <label class="flex"><span class="align-content-around">Tổng (2): </span><span class="value" id="totalGiangDay2">0</span></label>
              </div>
              <h5>Học kỳ II - Đào tạo chuyên ngành Kỹ thuật mật mã</h5>
              <table class=" text-center" style="width: 100%;">
                <thead>
                  <tr>
                    <th style="width: 50px;">TT</th>
                    <th style="width: 200px;">Tên học phần</th>
                    <th style="width: 50px;">Số TC</th>
                    <th style="width: 200px;">Lớp học phần</th>
                    <th style="width: 50px;">Số tiết theo TKB</th>
                    <th style="width: 50px;">Số tiết QC</th>
                    <th style="width: 100px;">Lớp thuộc</th>
                  </tr>
                </thead>
                <tbody id="tableBodyA13" class="teacher-group">
                  <!-- Dữ liệu sẽ được chèn vào đây -->
                </tbody>
              </table>
              <div class="total-label">
                <label class="flex"><span class="align-content-around">Tổng (3): </span><span class="value" id="totalGiangDay3">0</span></label>
              </div>
              <h5>Học kỳ II - Đào tạo hệ đóng học phí</h5>
              <table class=" text-center" style="width: 100%;">
                <thead>
                  <tr>
                    <th style="width: 50px;">TT</th>
                    <th style="width: 200px;">Tên học phần</th>
                    <th style="width: 50px;">Số TC</th>
                    <th style="width: 200px;">Lớp học phần</th>
                    <th style="width: 50px;">Số tiết theo TKB</th>
                    <th style="width: 50px;">Số tiết QC</th>
                    <th style="width: 100px;">Lớp thuộc</th>
                  </tr>
                </thead>
                <tbody id="tableBodyA14" class="teacher-group">
                  <!-- Dữ liệu sẽ được chèn vào đây -->
                </tbody>
              </table>
              <div class="total-label">
                <label class="flex"><span class="align-content-around">Tổng (4): </span><span class="value" id="totalGiangDay4">0</span></label>
              </div>
              <div class="total-label">
                <label class="flex"><span class="align-content-around">Tổng (A.1): </span><span class="value" id="totalGiangDay">0</span></label>
              </div>
              <h4>A.2.Đánh giá giữa học phần</h4>
              <h5>Học kỳ I - Đào tạo chuyên ngành Kỹ thuật mật mã</h5>
              <table class=" text-center" style="width: 100%;">
                <thead>
                  <tr>
                    <th style="width: 50px;">TT</th>
                    <th style="width: 200px;">Tên học phần</th>
                    <th style="width: 200px;">Ra đề/ coi thi/ chấm thi giữa học phần</th>
                    <th style="width: 200px;">Lớp học phần</th>
                    <th style="width: 200px;">Số SV</th>
                    <th style="width: 50px;">Số đề</th>
                    <th style="width: 100px;">Số tiết ra đề/ coi thi/ chấm thi</th>
                  </tr>
                </thead>
                <tbody id="tableBodyA21" class="teacher-group">
                  <!-- Dữ liệu sẽ được chèn vào đây -->
                </tbody>
              </table>
              <div class="total-label">
                <!-- <label>Tổng số tiết Lên Lớp: <span class="value" id="totalLL">0</span></label> -->
                <label class="flex"><span class="align-content-around">Tổng (5): </span><span class="value" id="totalSoTietKT1">0</span></label>
              </div>
              <h5>Học kỳ I - Đào tạo hệ đóng học phí</h5>
              <table class=" text-center" style="width: 100%;">
                <thead>
                  <tr>
                    <th style="width: 50px;">TT</th>
                    <th style="width: 200px;">Tên học phần</th>
                    <th style="width: 200px;">Ra đề/ coi thi/ chấm thi giữa học phần</th>
                    <th style="width: 200px;">Lớp học phần</th>
                    <th style="width: 200px;">Số SV</th>
                    <th style="width: 50px;">Số đề</th>
                    <th style="width: 100px;">Số tiết ra đề/ coi thi/ chấm thi</th>
                  </tr>
                </thead>
                <tbody id="tableBodyA22" class="teacher-group">
                  <!-- Dữ liệu sẽ được chèn vào đây -->
                </tbody>
              </table>
              <div class="total-label">
                <!-- <label>Tổng số tiết Lên Lớp: <span class="value" id="totalLL">0</span></label> -->
                <label class="flex"><span class="align-content-around">Tổng (6): </span><span class="value" id="totalSoTietKT2">0</span></label>
              </div>
              <h5>Học kỳ II - Đào tạo chuyên ngành Kỹ thuật mật mã</h5>
              <table class=" text-center" style="width: 100%;">
                <thead>
                  <tr>
                    <th style="width: 50px;">TT</th>
                    <th style="width: 200px;">Tên học phần</th>
                    <th style="width: 200px;">Ra đề/ coi thi/ chấm thi giữa học phần</th>
                    <th style="width: 200px;">Lớp học phần</th>
                    <th style="width: 200px;">Số SV</th>
                    <th style="width: 50px;">Số đề</th>
                    <th style="width: 100px;">Số tiết ra đề/ coi thi/ chấm thi</th>
                  </tr>
                </thead>
                <tbody id="tableBodyA23" class="teacher-group">
                  <!-- Dữ liệu sẽ được chèn vào đây -->
                </tbody>
              </table>
              <div class="total-label">
                <!-- <label>Tổng số tiết Lên Lớp: <span class="value" id="totalLL">0</span></label> -->
                <label class="flex"><span class="align-content-around">Tổng (7): </span><span class="value" id="totalSoTietKT3">0</span></label>
              </div>
              <h5>Học kỳ II - Đào tạo hệ đóng học phí</h5>
              <table class=" text-center" style="width: 100%;">
                <thead>
                  <tr>
                    <th style="width: 50px;">TT</th>
                    <th style="width: 200px;">Tên học phần</th>
                    <th style="width: 200px;">Ra đề/ coi thi/ chấm thi giữa học phần</th>
                    <th style="width: 200px;">Lớp học phần</th>
                    <th style="width: 200px;">Số SV</th>
                    <th style="width: 50px;">Số đề</th>
                    <th style="width: 100px;">Số tiết ra đề/ coi thi/ chấm thi</th>
                  </tr>
                </thead>
                <tbody id="tableBodyA24" class="teacher-group">
                  <!-- Dữ liệu sẽ được chèn vào đây -->
                </tbody>
              </table>
              <div class="total-label">
                <!-- <label>Tổng số tiết Lên Lớp: <span class="value" id="totalLL">0</span></label> -->
                <label class="flex"><span class="align-content-around">Tổng (8): </span><span class="value" id="totalSoTietKT4">0</span></label>
              </div>
              <div class="total-label">
                <!-- <label>Tổng số tiết Lên Lớp: <span class="value" id="totalLL">0</span></label> -->
                <label class="flex"><span class="align-content-around">Tổng (A.2): </span><span class="value" id="totalSoTietKT">0</span></label>
              </div>
            </div>
            <!-- Label tổng số tiết tách riêng với bảng -->
          </div>
        </div>
        <!-- Modal form -->
        <div id="modalBackdrop" style="display: none;"></div> <!-- Nền tối -->
        <div id="noteForm" style="display: none;">
          <h3>Ghi chú</h3>
          <label for="noteInput">Nội dung:</label>
          <textarea id="noteInput"></textarea> <!-- Sử dụng textarea cho ghi chú dài -->
          <br />
          <div class="d-flex text-nowrap" style="text-align: right;">
            <button onclick="saveNote()">Lưu</button>
            <button onclick="doneNote()">Hoàn Thành</button>
            <button class="cancel" onclick="closeNoteForm()">Đóng</button>
          </div>
        </div>
      </div>
  <script src="https://ajax.googleapis.com/ajax/libs/jquery/3.7.1/jquery.min.js"></script>
  <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/js/bootstrap.bundle.min.js"></script>

  <script>
    document.addEventListener("DOMContentLoaded", () => {
      const isKhoa = localStorage.getItem("isKhoa");

      // Ẩn button ngay khi trang được tải
      const actionButton = document.getElementById('actionButton');
      const actionButton1 = document.getElementById('actionButton1');
      const actionButton2 = document.getElementById('actionButton2');
      const actionButton3 = document.getElementById('actionButton3');

      if (isKhoa == 0) {
        actionButton1.style.display = 'none'; // Ẩn actionButton1 nếu isKhoa = 0
        actionButton2.style.display = 'inline-block'; // Hiện actionButton2
            
      } else {
          actionButton1.style.display = 'inline-block'; // Hiện actionButton1 nếu isKhoa khác 0
          actionButton2.style.display = 'none'; // Ẩn actionButton2
      }
      const MaPhongBan = localStorage.getItem("MaPhongBan");
    

      //Ẩn site duyệt
      const Quyen = localStorage.getItem("userRole");

      const importDoAn = document.getElementById('importDoAn');
      if (isKhoa == 0 && Quyen == 'Duyệt'){
        importDoAn.style.display = 'block';
      }

      if (Quyen === "Lãnh đạo khoa" || Quyen === "Duyệt") {
        actionButton3.style.display = '';
      } else {
        actionButton3.style.display = 'none';
      }
      });
</script>
<script>
document.addEventListener('DOMContentLoaded', function () {
    const tabButtons = document.querySelectorAll('.tab-button');
    const tabContents = document.querySelectorAll('.tab-content');

    tabButtons.forEach(button => {
        button.addEventListener('click', function () {
            // Xóa trạng thái active khỏi tất cả các tab
            tabButtons.forEach(btn => btn.classList.remove('active'));
            tabContents.forEach(content => content.classList.remove('active-tab'));

            // Kích hoạt tab được chọn
            const tabId = this.dataset.tab;
            document.getElementById(tabId).classList.add('active-tab');  // Hiển thị nội dung tab
            this.classList.add('active');  // Thêm lớp active vào nút được chọn
        });
    });
});
</script>
<script>
    const Home = document.getElementById("Home");
    Home.addEventListener("click", function (event) {
        event.preventDefault(); // Ngăn chặn hành vi mặc định của liên kết

        const isKhoa = localStorage.getItem("isKhoa")

        if (isKhoa==0) { // Nếu là đào tạo hoặc tài chính
          window.location.href = "/maindt";
        } else {
          window.location.href = "/mainkhoa";
        }
    });
</script>
<script>
    window.onload = function () {
        const TenNhanVien = localStorage.getItem("TenNhanVien"); // Lấy tên người dùng từ localStorage
        let Role = localStorage.getItem("userRole");
        if (Role.toUpperCase() == 'LÃNH ĐẠO KHOA'){
          Role = 'LĐK';
        }      
        if (TenNhanVien) {
            // Hiển thị tên người dùng trên phần tử HTML
          document.querySelector(".fullname").innerText = `${TenNhanVien} - ${Role}`;
        } else {
            document.querySelector('.fullname').innerText = 'Hi, Guest'; // Hiển thị nếu không có tên người dùng
        }      
        //document.querySelector('.role').innerText = `${Role}`;      
        };
</script>
<script>
  document.getElementById("infome").addEventListener("click", function(event) {
    event.preventDefault(); // Ngăn chặn hành vi mặc định của thẻ a
    const id_User = localStorage.getItem("id_User"); // Lấy id_User từ localStorage\
    if (id_User) {
        // Chuyển hướng đến trang infome và truyền id_User trong URL
        window.location.href = `/infome/${id_User}`;
    } else {
        alert("Không tìm thấy id_User trong localStorage.");
    }
  });
</script>
<script>
  $(document).ready(function () {
    $('#NamHoc option[value=""]').remove();
    $('#comboboxki option[value=""]').remove();
    $('#combobox-dot option[value=""]').remove();

    $.ajax({
      url: '/getNamHoc',
      method: 'GET',
      success: function (response) {
        if (response.success) {

          response.NamHoc.forEach(function (item) {
            console.log(item.NamHoc);
            $('#NamHoc').append(
              `<option value="${item.NamHoc}">${item.NamHoc}</option>`
            );
          });

          response.Ki.forEach(function (item) {
            console.log(item.Ki);
            $('#comboboxki').append(
              `<option value="${item.value}">${item.Ki}</option>`
            );
          });
          loadLopMoiData();
        } else {
          console.error("Không lấy được dữ liệu năm học:", response.message);
        }
      },
      error: function (error) {
        console.error("Lỗi khi lấy dữ liệu năm học:", error);
      }
    });
  });
</script>
</script>
<script>
  document.getElementById('info').addEventListener('click', loadLopMoiData);

  async function loadLopMoiData() {
    const MaPhongBan = localStorage.getItem('MaPhongBan'); // Lấy mã phòng ban từ localStorage
    const TenNhanVien = localStorage.getItem("TenNhanVien");
    const Nam = document.getElementById('NamHoc').value;
    if (!MaPhongBan) {
      alert("Mã phòng ban không tồn tại!");
      return;
    }

    try {
      console.log("Gửi dữ liệu");
      const response = await fetch(`/xemlopgiangday/${MaPhongBan}/${Nam}`, {
        method: 'GET', // Gửi yêu cầu GET
      });
      if (!response.ok) {
        throw new Error(`Error: ${response.status} - ${response.statusText}`);
      }
      const data = await response.json(); // Lấy dữ liệu từ server
      if (data.success) {
        // Danh sách các bảng cần lọc
        const rowsKeys = ['rows11', 'rows12', 'rows13', 'rows14', 'rows21', 'rows22', 'rows23', 'rows24'];

        // Áp dụng filter cho tất cả các bảng
        rowsKeys.forEach(key => {
          if (data[key]) {
            data[key] = data[key].filter(row => row.GiangVien.trim() === TenNhanVien.trim());
          }
        });
        // Kiểm tra xem tất cả các bảng đều là mảng rỗng
        const allRowsEmpty = rowsKeys.every(key => !data[key] || data[key].length === 0);

        if (allRowsEmpty) {
          alert("Tất cả các bảng đều không có dữ liệu!");
        } else {
          console.log('Dữ liệu bộ môn:', data);
          renderTable(data); // Gọi hàm render bảng
        }
      } else {
        alert("Không tìm thấy dữ liệu!");
      }
    } catch (error) {
      console.error('Có lỗi xảy ra khi lấy dữ liệu:', error);
    }
  }

</script>
<script>
  function renderTable(data) {
    const role = localStorage.getItem("userRole");
    const MaPhongBan = localStorage.getItem("MaPhongBan");
    const isKhoa = localStorage.getItem("isKhoa");
    const TenNhanVien = localStorage.getItem("TenNhanVien");
    console.log( TenNhanVien);
    let tableRowData = [];

    const tableBodyA11 = document.getElementById('tableBodyA11');
    tableBodyA11.innerHTML = ''; // Xóa nội dung cũ
    const tableBodyA12 = document.getElementById('tableBodyA12');
    tableBodyA12.innerHTML = ''; // Xóa nội dung cũ
    const tableBodyA13 = document.getElementById('tableBodyA13');
    tableBodyA13.innerHTML = ''; // Xóa nội dung cũ
    const tableBodyA14 = document.getElementById('tableBodyA14');
    tableBodyA14.innerHTML = ''; // Xóa nội dung cũ
    const tableBodyA21 = document.getElementById('tableBodyA21');
    tableBodyA21.innerHTML = ''; // Xóa nội dung cũ
    const tableBodyA22 = document.getElementById('tableBodyA22');
    tableBodyA22.innerHTML = ''; // Xóa nội dung cũ
    const tableBodyA23 = document.getElementById('tableBodyA23');
    tableBodyA23.innerHTML = ''; // Xóa nội dung cũ
    const tableBodyA24 = document.getElementById('tableBodyA24');
    tableBodyA24.innerHTML = ''; // Xóa nội dung cũ
    //let index = -1;
    data.rows21.forEach((row, index) => {

      const tableRow = document.createElement('tr');

      // Thêm id vào dữ liệu row để lưu trữ
      let rowWithId = {
        id: index,
        ...row
      };
      tableRowData.push(rowWithId);

      tableRow.setAttribute("data-id", row.MaGiangDay);

      //
      const ttTd = document.createElement('td');
      ttTd.textContent = index +1;
      tableRow.appendChild(ttTd);
      //
      const tenHocPhanTd = document.createElement('td');
      tenHocPhanTd.textContent = row.TenHocPhan;
      tableRow.appendChild(tenHocPhanTd);
      //
      const hinhThucKTGiuaKyTd = document.createElement('td');
      hinhThucKTGiuaKyTd.textContent = row.HinhThucKTGiuaKy;
      tableRow.appendChild(hinhThucKTGiuaKyTd);
      //
      const lopTd = document.createElement('td');
      lopTd.textContent = row.Lop;
      tableRow.appendChild(lopTd);
      //
      const soSVTd = document.createElement('td');
      soSVTd.textContent = row.SoSV;
      tableRow.appendChild(soSVTd);
      //
      const soDeTd = document.createElement('td');
      soDeTd.textContent = row.SoDe;
      tableRow.appendChild(soDeTd);
      //
      const soTietKT = document.createElement('td');
      soTietKT.textContent = row.SoTietKT;
      tableRow.appendChild(soTietKT);

      tableBodyA21.appendChild(tableRow);
    });


    data.rows22.forEach((row, index) => {

      const tableRow = document.createElement('tr');

      // Thêm id vào dữ liệu row để lưu trữ
      let rowWithId = {
        id: index,
        ...row
      };
      tableRowData.push(rowWithId);

      tableRow.setAttribute("data-id", row.MaGiangDay);

      //
      const ttTd = document.createElement('td');
      ttTd.textContent = index +1;
      tableRow.appendChild(ttTd);
      //
      const tenHocPhanTd = document.createElement('td');
      tenHocPhanTd.textContent = row.TenHocPhan;
      tableRow.appendChild(tenHocPhanTd);
      //
      const hinhThucKTGiuaKyTd = document.createElement('td');
      hinhThucKTGiuaKyTd.textContent = row.HinhThucKTGiuaKy;
      tableRow.appendChild(hinhThucKTGiuaKyTd);
      //
      const lopTd = document.createElement('td');
      lopTd.textContent = row.Lop;
      tableRow.appendChild(lopTd);
      //
      const soSVTd = document.createElement('td');
      soSVTd.textContent = row.SoSV;
      tableRow.appendChild(soSVTd);
      //
      const soDeTd = document.createElement('td');
      soDeTd.textContent = row.SoDe;
      tableRow.appendChild(soDeTd);
      //
      const soTietKT = document.createElement('td');
      soTietKT.textContent = row.SoTietKT;
      tableRow.appendChild(soTietKT);

      tableBodyA22.appendChild(tableRow);
    });

    data.rows23.forEach((row, index) => {

      const tableRow = document.createElement('tr');

      // Thêm id vào dữ liệu row để lưu trữ
      let rowWithId = {
        id: index,
        ...row
      };
      tableRowData.push(rowWithId);

      tableRow.setAttribute("data-id", row.MaGiangDay);

      //
      const ttTd = document.createElement('td');
      ttTd.textContent = index +1;
      tableRow.appendChild(ttTd);
      //
      const tenHocPhanTd = document.createElement('td');
      tenHocPhanTd.textContent = row.TenHocPhan;
      tableRow.appendChild(tenHocPhanTd);
      //
      const hinhThucKTGiuaKyTd = document.createElement('td');
      hinhThucKTGiuaKyTd.textContent = row.HinhThucKTGiuaKy;
      tableRow.appendChild(hinhThucKTGiuaKyTd);
      //
      const lopTd = document.createElement('td');
      lopTd.textContent = row.Lop;
      tableRow.appendChild(lopTd);
      //
      const soSVTd = document.createElement('td');
      soSVTd.textContent = row.SoSV;
      tableRow.appendChild(soSVTd);
      //
      const soDeTd = document.createElement('td');
      soDeTd.textContent = row.SoDe;
      tableRow.appendChild(soDeTd);
      //
      const soTietKT = document.createElement('td');
      soTietKT.textContent = row.SoTietKT;
      tableRow.appendChild(soTietKT);

      tableBodyA23.appendChild(tableRow);
    });

    data.rows24.forEach((row, index) => {

      const tableRow = document.createElement('tr');

      // Thêm id vào dữ liệu row để lưu trữ
      let rowWithId = {
        id: index,
        ...row
      };
      tableRowData.push(rowWithId);

      tableRow.setAttribute("data-id", row.MaGiangDay);

      //
      const ttTd = document.createElement('td');
      ttTd.textContent = index +1;
      tableRow.appendChild(ttTd);
      //
      const tenHocPhanTd = document.createElement('td');
      tenHocPhanTd.textContent = row.TenHocPhan;
      tableRow.appendChild(tenHocPhanTd);
      //
      const hinhThucKTGiuaKyTd = document.createElement('td');
      hinhThucKTGiuaKyTd.textContent = row.HinhThucKTGiuaKy;
      tableRow.appendChild(hinhThucKTGiuaKyTd);
      //
      const lopTd = document.createElement('td');
      lopTd.textContent = row.Lop;
      tableRow.appendChild(lopTd);
      //
      const soSVTd = document.createElement('td');
      soSVTd.textContent = row.SoSV;
      tableRow.appendChild(soSVTd);
      //
      const soDeTd = document.createElement('td');
      soDeTd.textContent = row.SoDe;
      tableRow.appendChild(soDeTd);
      //
      const soTietKT = document.createElement('td');
      soTietKT.textContent = row.SoTietKT;
      tableRow.appendChild(soTietKT);

      tableBodyA24.appendChild(tableRow);
    });

    data.rows11.forEach((row, index) => {

      const tableRow = document.createElement('tr');

      // Thêm id vào dữ liệu row để lưu trữ
      let rowWithId = {
        id: index,
        ...row
      };
      tableRowData.push(rowWithId);

      tableRow.setAttribute("data-id", row.MaGiangDay);

      //
      const ttTd = document.createElement('td');
      ttTd.textContent = index +1;
      tableRow.appendChild(ttTd);
      //
      const tenHocPhanTd = document.createElement('td');
      tenHocPhanTd.textContent = row.TenHocPhan;
      tableRow.appendChild(tenHocPhanTd);
      //
      const soTCTd = document.createElement('td');
      soTCTd.textContent = row.SoTC;
      tableRow.appendChild(soTCTd);
      //
      const lopTd = document.createElement('td');
      lopTd.textContent = row.Lop;
      tableRow.appendChild(lopTd);
      //
      const lenLopTd = document.createElement('td');
      lenLopTd.textContent = row.LenLop;
      tableRow.appendChild(lenLopTd);
      //
      const quyChuanTd = document.createElement('td');
      quyChuanTd.textContent = row.QuyChuan;
      tableRow.appendChild(quyChuanTd);
      //
      const sourceTd = document.createElement('td');
      sourceTd.textContent = row.source;
      tableRow.appendChild(sourceTd);

      tableBodyA11.appendChild(tableRow);
    });

    data.rows12.forEach((row, index) => {

      const tableRow = document.createElement('tr');

      // Thêm id vào dữ liệu row để lưu trữ
      let rowWithId = {
        id: index,
        ...row
      };
      tableRowData.push(rowWithId);

      tableRow.setAttribute("data-id", row.MaGiangDay);

      //
      const ttTd = document.createElement('td');
      ttTd.textContent = index +1;
      tableRow.appendChild(ttTd);
      //
      const tenHocPhanTd = document.createElement('td');
      tenHocPhanTd.textContent = row.TenHocPhan;
      tableRow.appendChild(tenHocPhanTd);
      //
      const soTCTd = document.createElement('td');
      soTCTd.textContent = row.SoTC;
      tableRow.appendChild(soTCTd);
      //
      const lopTd = document.createElement('td');
      lopTd.textContent = row.Lop;
      tableRow.appendChild(lopTd);
      //
      const lenLopTd = document.createElement('td');
      lenLopTd.textContent = row.LenLop;
      tableRow.appendChild(lenLopTd);
      //
      const quyChuanTd = document.createElement('td');
      quyChuanTd.textContent = row.QuyChuan;
      tableRow.appendChild(quyChuanTd);
      //
      const sourceTd = document.createElement('td');
      sourceTd.textContent = row.source;
      tableRow.appendChild(sourceTd);

      tableBodyA12.appendChild(tableRow);
    });

    data.rows13.forEach((row, index) => {

      const tableRow = document.createElement('tr');

      // Thêm id vào dữ liệu row để lưu trữ
      let rowWithId = {
        id: index,
        ...row
      };
      tableRowData.push(rowWithId);

      tableRow.setAttribute("data-id", row.MaGiangDay);

      //
      const ttTd = document.createElement('td');
      ttTd.textContent = index +1;
      tableRow.appendChild(ttTd);
      //
      const tenHocPhanTd = document.createElement('td');
      tenHocPhanTd.textContent = row.TenHocPhan;
      tableRow.appendChild(tenHocPhanTd);
      //
      const soTCTd = document.createElement('td');
      soTCTd.textContent = row.SoTC;
      tableRow.appendChild(soTCTd);
      //
      const lopTd = document.createElement('td');
      lopTd.textContent = row.Lop;
      tableRow.appendChild(lopTd);
      //
      const lenLopTd = document.createElement('td');
      lenLopTd.textContent = row.LenLop;
      tableRow.appendChild(lenLopTd);
      //
      const quyChuanTd = document.createElement('td');
      quyChuanTd.textContent = row.QuyChuan;
      tableRow.appendChild(quyChuanTd);
      //
      const sourceTd = document.createElement('td');
      sourceTd.textContent = row.source;
      tableRow.appendChild(sourceTd);

      tableBodyA13.appendChild(tableRow);
    });

    data.rows14.forEach((row, index) => {

      const tableRow = document.createElement('tr');

      // Thêm id vào dữ liệu row để lưu trữ
      let rowWithId = {
        id: index,
        ...row
      };
      tableRowData.push(rowWithId);

      tableRow.setAttribute("data-id", row.MaGiangDay);

      //
      const ttTd = document.createElement('td');
      ttTd.textContent = index +1;
      tableRow.appendChild(ttTd);
      //
      const tenHocPhanTd = document.createElement('td');
      tenHocPhanTd.textContent = row.TenHocPhan;
      tableRow.appendChild(tenHocPhanTd);
      //
      const soTCTd = document.createElement('td');
      soTCTd.textContent = row.SoTC;
      tableRow.appendChild(soTCTd);
      //
      const lopTd = document.createElement('td');
      lopTd.textContent = row.Lop;
      tableRow.appendChild(lopTd);
      //
      const lenLopTd = document.createElement('td');
      lenLopTd.textContent = row.LenLop;
      tableRow.appendChild(lenLopTd);
      //
      const quyChuanTd = document.createElement('td');
      quyChuanTd.textContent = row.QuyChuan;
      tableRow.appendChild(quyChuanTd);
      //
      const sourceTd = document.createElement('td');
      sourceTd.textContent = row.source;
      tableRow.appendChild(sourceTd);

      tableBodyA14.appendChild(tableRow);
    });
    // Lưu dữ liệu với id vào localStorage
    localStorage.setItem('tableData', JSON.stringify(tableRowData));
    calculatetotalGiangDay();
  }

</script>
<script>
  // tổng quy chuẩn
  function calculatetotalGiangDay() {
  let totalGiangDay = 0;
  let totalSoTietKT = 0;
  let totalA11 = 0, totalA12 = 0, totalA13 = 0, totalA14 = 0, 
    totalA21 = 0, totalA22 = 0, totalA23 = 0, totalA24 = 0;


  // Lấy tất cả các hàng dữ liệu trong bảng
  const rows11 = document.querySelectorAll('#tableBodyA11 tr');
  const rows12 = document.querySelectorAll('#tableBodyA12 tr');
  const rows13 = document.querySelectorAll('#tableBodyA13 tr');
  const rows14 = document.querySelectorAll('#tableBodyA14 tr');
  const rows21 = document.querySelectorAll('#tableBodyA21 tr');
  const rows22 = document.querySelectorAll('#tableBodyA22 tr');
  const rows23 = document.querySelectorAll('#tableBodyA23 tr');
  const rows24 = document.querySelectorAll('#tableBodyA24 tr');

  rows11.forEach(row => {
    // Lấy ô cột số tiết kiểm tra (vị trí trước 2 ô cuối)
    const totalA11Td = row.querySelector('td:nth-last-child(2)');
    if (totalA11Td) {
      const totalA11Value = parseFloat(totalA11Td.textContent.trim());
      if (!isNaN(totalA11Value)) {
        totalA11 += totalA11Value;
      }
    }
  });
  rows12.forEach(row => {
    // Lấy ô cột số tiết kiểm tra (vị trí trước 2 ô cuối)
    const totalA12Td = row.querySelector('td:nth-last-child(2)');
    if (totalA12Td) {
      const totalA12Value = parseFloat(totalA12Td.textContent.trim());
      if (!isNaN(totalA12Value)) {
        totalA12 += totalA12Value;
      }
    }
  });
  rows13.forEach(row => {
    // Lấy ô cột số tiết kiểm tra (vị trí trước 2 ô cuối)
    const totalA13Td = row.querySelector('td:nth-last-child(2)');
    if (totalA13Td) {
      const totalA13Value = parseFloat(totalA13Td.textContent.trim());
      if (!isNaN(totalA13Value)) {
        totalA13 += totalA13Value;
      }
    }
  });
  rows14.forEach(row => {
    // Lấy ô cột số tiết kiểm tra (vị trí trước 2 ô cuối)
    const totalA14Td = row.querySelector('td:nth-last-child(2)');
    if (totalA14Td) {
      const totalA14Value = parseFloat(totalA14Td.textContent.trim());
      if (!isNaN(totalA14Value)) {
        totalA14 += totalA14Value;
      }
    }
  });

  // Hiển thị tổng số tiết kiểm tra trong một phần tử có id `totalGiangDay1`
  const totalA11Element = document.getElementById('totalGiangDay1');
  if (totalA11Element) {
    totalA11Element.textContent = totalA11.toFixed(2); // Định dạng 2 chữ số thập phân
  }
  const totalA12Element = document.getElementById('totalGiangDay2');
  if (totalA12Element) {
    totalA12Element.textContent = totalA12.toFixed(2); // Định dạng 2 chữ số thập phân
  }
  const totalA13Element = document.getElementById('totalGiangDay3');
  if (totalA13Element) {
    totalA13Element.textContent = totalA13.toFixed(2); // Định dạng 2 chữ số thập phân
  }
  const totalA14Element = document.getElementById('totalGiangDay4');
  if (totalA14Element) {
    totalA14Element.textContent = totalA14.toFixed(2); // Định dạng 2 chữ số thập phân
  }

  //Tính tổng số tiết kiểm tra giữa kì 
  rows21.forEach(row => {
    // Kiểm tra nếu dòng có chứa giá trị `totalGiangDay`
    const totalA21Td = row.querySelector('td:nth-last-child(1)'); // Lấy ô cột số tiết kiểm tra (vị trí trước 2 ô cuối)
    if (totalA21Td) {
      const totalA21Value = parseFloat(totalA21Td.textContent.trim());
      if (!isNaN(totalA21Value)) {
        totalA21 += totalA21Value;
      }
    }
  });

  // Hiển thị tổng số tiết kiểm tra trong một phần tử có id `totalA21Td`
  const totalA21Element = document.getElementById('totalSoTietKT1');
  if (totalA21Element) {
    totalA21Element.textContent = totalA21.toFixed(2); // Định dạng 2 chữ số thập phân
  }
  rows22.forEach(row => {
    // Kiểm tra nếu dòng có chứa giá trị `totalGiangDay`
    const totalA22Td = row.querySelector('td:nth-last-child(1)'); // Lấy ô cột số tiết kiểm tra (vị trí trước 2 ô cuối)
    if (totalA22Td) {
      const totalA22Value = parseFloat(totalA22Td.textContent.trim());
      if (!isNaN(totalA22Value)) {
        totalA22 += totalA22Value;
      }
    }
  });

  // Hiển thị tổng số tiết kiểm tra trong một phần tử có id `totalA22Td`
  const totalA22Element = document.getElementById('totalSoTietKT2');
  if (totalA22Element) {
    totalA22Element.textContent = totalA22.toFixed(2); // Định dạng 2 chữ số thập phân
  }

  rows23.forEach(row => {
    // Kiểm tra nếu dòng có chứa giá trị `totalGiangDay`
    const totalA23Td = row.querySelector('td:nth-last-child(1)'); // Lấy ô cột số tiết kiểm tra (vị trí trước 2 ô cuối)
    if (totalA23Td) {
      const totalA23Value = parseFloat(totalA23Td.textContent.trim());
      if (!isNaN(totalA23Value)) {
        totalA23 += totalA23Value;
      }
    }
  });

  // Hiển thị tổng số tiết kiểm tra trong một phần tử có id `totalA23Td`
  const totalA23Element = document.getElementById('totalSoTietKT3');
  if (totalA23Element) {
    totalA23Element.textContent = totalA23.toFixed(2); // Định dạng 2 chữ số thập phân
  }

  rows24.forEach(row => {
    // Kiểm tra nếu dòng có chứa giá trị `totalGiangDay`
    const totalA24Td = row.querySelector('td:nth-last-child(1)'); // Lấy ô cột số tiết kiểm tra (vị trí trước 2 ô cuối)
    if (totalA24Td) {
      const totalA24Value = parseFloat(totalA24Td.textContent.trim());
      if (!isNaN(totalA24Value)) {
        totalA24 += totalA24Value;
      }
    }
  });

  // Hiển thị tổng số tiết kiểm tra trong một phần tử có id `totalA24Td`
  const totalA24Element = document.getElementById('totalSoTietKT4');
  if (totalA24Element) {
    totalA24Element.textContent = totalA24.toFixed(2); // Định dạng 2 chữ số thập phân
  }
  totalGiangDay = totalA11 + totalA12 + totalA13 + totalA14;
  totalSoTietKT = totalA21 + totalA22 + totalA23 + totalA24;
  const totalGiangDayElement = document.getElementById('totalGiangDay');
  if (totalGiangDayElement) {
    totalGiangDayElement.textContent = totalGiangDay.toFixed(2); // Định dạng 2 chữ số thập phân
  }
  const totalSoTietKTElement = document.getElementById('totalSoTietKT');
  if (totalSoTietKTElement) {
    totalSoTietKTElement.textContent = totalSoTietKT.toFixed(2); // Định dạng 2 chữ số thập phân
  }
}
</script>
<script>
  function suggest() {
    const query = document.getElementById("TenNhanVien").value;
    const isKhoa = localStorage.getItem("isKhoa");
    if (query.length === 0) {
      document.getElementById("suggestionBox").innerHTML = "";
      return;
    }
    let MaPhongBan;
    if (isKhoa === "1") {
      MaPhongBan = localStorage.getItem("MaPhongBan");
    } else {
      MaPhongBan = document.getElementById("MaPhongBan").value.trim();
    }
    
    fetch(`/suggestPb/${MaPhongBan}/${query}`)
      .then((response) => response.json())
      .then((data) => {
        // Lấy mảng tên nhân viên từ phần tử đầu tiên
        let results = data[0]; // Lấy dữ liệu từ phần tử đầu tiên

        // Kiểm tra xem results có phải là mảng và có phần tử hay không
        if (Array.isArray(results) && results.length > 0) {
          let suggestions = results
            .map((item) => {
              return `<div onclick="selectSuggestion('${item.TenNhanVien.trim()}')">${item.TenNhanVien.trim()}</div>`;
            })
            .join(""); // Kết hợp tất cả các phần tử thành chuỗi HTML

          // Chèn danh sách vào suggestionBox
          document.getElementById("suggestionBox").innerHTML = suggestions;
        } else {
          // Nếu không có kết quả, hiển thị thông báo
          document.getElementById("suggestionBox").innerHTML =
            "<div>No results found</div>";
        }
      })
      .catch((error) => console.error("Lỗi khi lấy dữ liệu:", error));
  }
  // Hàm này sẽ được gọi khi người dùng click vào một gợi ý
  function selectSuggestion(value) {
    // Thêm giá trị vào ô input
    document.getElementById("TenNhanVien").value = value;

    // Xóa các gợi ý khi chọn một tên
    document.getElementById("suggestionBox").innerHTML = "";
  }
  async function loadInfoLopGV() {
    const Nam = document.getElementById('NamHoc').value;
    const isKhoa = localStorage.getItem("isKhoa");
    const TenNhanVien = document.getElementById("TenNhanVien").value;
    let MaPhongBan;
    if (isKhoa === "1") {
      MaPhongBan = localStorage.getItem("MaPhongBan");
    } else {
      MaPhongBan = document.getElementById("MaPhongBan").value.trim();
    }
    if (!MaPhongBan) {
      alert("Mã phòng ban không tồn tại!");
      return;
    }

    try {
      console.log("Gửi dữ liệu");
      const response = await fetch(`/xemlopgiangday/${MaPhongBan}/${Nam}`, {
        method: 'GET', // Gửi yêu cầu GET
      });
      if (!response.ok) {
        throw new Error(`Error: ${response.status} - ${response.statusText}`);
      }
      const data = await response.json(); // Lấy dữ liệu từ server
      if (data.success) {
        // Danh sách các bảng cần lọc
        const rowsKeys = ['rows11', 'rows12', 'rows13', 'rows14', 'rows21', 'rows22', 'rows23', 'rows24'];

        // Áp dụng filter cho tất cả các bảng
        rowsKeys.forEach(key => {
          if (data[key]) {
            data[key] = data[key].filter(row => row.GiangVien.trim() === TenNhanVien.trim());
          }
        });
        // Kiểm tra xem tất cả các bảng đều là mảng rỗng
        const allRowsEmpty = rowsKeys.every(key => !data[key] || data[key].length === 0);

        if (allRowsEmpty) {
          alert("Tất cả các bảng đều không có dữ liệu!");
        } else {
          console.log('Dữ liệu bộ môn:', data);
          renderTable(data); // Gọi hàm render bảng
        }
      } else {
        alert("Không tìm thấy dữ liệu!");
      }
    } catch (error) {
      console.error('Có lỗi xảy ra khi lấy dữ liệu:', error);
    }
  }
</script>
<script>
      document.addEventListener("DOMContentLoaded", () => {
        const Quyen = localStorage.getItem("userRole");
        const isKhoa = localStorage.getItem("isKhoa");
        const selectKhoa = document.getElementById("MaPhongBan");
        const find = document.getElementById("TenNhanVien");
        const button = document.getElementById("xemlopgv");

        // Ẩn button ngay khi trang được tải
        const actionButton = document.getElementById('changeMessage');
        //Ẩn site thêm thông báo
        if (Quyen === "Duyệt") {
          actionButton.style.display = '';
        } else {
          actionButton.style.display = 'none';
        }

        if (Quyen === "Lãnh đạo khoa") {
          selectKhoa.style.display = 'none';
          find.style.display = ''
          button.style.display = ''
        } else if (isKhoa === "0") {
          selectKhoa.style.display = '';
          find.style.display = ''
          button.style.display = ''
        } else {
          selectKhoa.style.display = 'none';
          find.style.display = 'none'
          button.style.display = 'none'
        }
      });
    </script>
  <script>
    document.getElementById("changeMessage").addEventListener("click", function(event) {
      event.preventDefault(); // Ngăn chặn hành vi mặc định của thẻ a
      const MaPhongBan = localStorage.getItem("MaPhongBan"); // Lấy MaPhongBan từ localStorage
      if (MaPhongBan) {
        // Chuyển hướng đến trang changeMessage và truyền MaPhongBan trong URL
        window.location.href = `/changeMessage/${MaPhongBan}`;
      } else {
        alert("Không tìm thấy MaPhongBan trong localStorage.");
      }
    });
  </script>
  <script>
    $(document).ready(function () {
      $('#MaPhongBan option[value=""]').remove();
      // Gọi AJAX để lấy dữ liệu JSON từ API
      $.ajax({
        url: '/getPhongBan', // Đường dẫn tới API getPhongBan
        method: 'GET',
        success: function (response) {
          // Kiểm tra nếu response thành công
          const MaPhongBan = response.MaPhongBan;
          if (response.success) {
            // $('#MaPhongBan').prepend('<option value="ALL">Tất cả khoa</option>');
            // Lặp qua từng mục trong mảng MaPhongBan
            response.MaPhongBan.forEach(function (item) {
              // Nếu item.MaPhongBan bằng boMon.MaPhongBan, hiển thị trước
              console.log(item);
              $('#MaPhongBan').append(
                `<option value="${item.MaPhongBan}">${item.MaPhongBan}</option>`
              );
              }
            );
  
            // Nếu không có phòng ban nào tương ứng, bạn có thể thêm tùy chọn mặc định ở đây
            if (!$('#MaPhongBan option:selected').length) {
              $('#MaPhongBan').prepend('<option value="">Chọn Phòng Ban</option>');
            }
          } else {
            console.error("Không lấy được dữ liệu phongBan:", response.message);
          }
        },
        error: function (error) {
          console.error("Lỗi khi lấy dữ liệu phongBan:", error);
        }
      });
    });
  </script>
  </body>
</html>

