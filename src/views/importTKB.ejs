<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>Học Viện Kỹ Thuật Mật Mã</title>
    <link rel="stylesheet" href="/css/table.css" />
    <link
      rel="stylesheet"
      href="https://cdn.jsdelivr.net/npm/bootstrap@5.2.3/dist/css/bootstrap.min.css"
    />
    <link
      rel="stylesheet"
      href="https://cdn.jsdelivr.net/npm/bootstrap-icons@1.11.3/font/bootstrap-icons.css"
    />
    <link rel="stylesheet" href="/css/styles.css" />
    <link rel="stylesheet" href="/css/import.css" />
    <link
      rel="stylesheet"
      href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.6.0/css/all.min.css"
    />
  </head>
  <style>
    .btn {
      height: 45px;
      margin-bottom: 0px;
      text-wrap: nowrap;
    }
  </style>

  <body>
    <!-- Phần header -->
    <%- include('header') %>

    <!-- Phần nội dung -->

    <div class="container-fluid m-4 box d-flex justify-content-start">
      <div class="mx-2">
        <div class="d-flex align-items-center mb-3">
          <button class="btn mx-2" id="chooseFile">Chọn file</button>
          <!-- Combo box Đợt -->
          <!-- Combo box Đợt -->
          <select class="selectop mx-1" id="combobox-dot">
            <option value="">Đợt</option>
          </select>

          <!-- Combo box kì -->
          <select class="selectop mx-1" id="comboboxki">
            <option value="">Kỳ</option>
          </select>

          <!-- Combo box Năm -->
          <select class="selectop mx-1" id="NamHoc">
            <option value="">Chọn năm học</option>
          </select>

          <!-- Combo box với các giá trị CNTT, ATTT, DTVT -->
          <!-- <select class="selectop" id="MaPhongBan">
            <option value="ALL">Tất cả khoa</option>
          </select> -->
          <!-- <button class="btn mx-2" id="import">Thêm</button> -->
          <button class="btn mx-2" id="viewTKB">Bảng thời khóa biểu</button>
        </div>

        <div id="action-modal" style="display: none">
          <div
            style="
              position: fixed;
              top: 0;
              left: 0;
              width: 100%;
              height: 100%;
              background: rgba(0, 0, 0, 0.6);
              display: flex;
              justify-content: center;
              align-items: center;
              z-index: 10000000000;
            "
          >
            <div
              style="
                background: #ffffff;
                padding: 25px;
                border-radius: 12px;
                max-width: 450px;
                width: 90%;
                text-align: center;
                box-shadow: 0px 4px 12px rgba(0, 0, 0, 0.2);
              "
            >
              <p
                id="modal-message"
                style="font-size: 16px; color: #333; margin-bottom: 20px"
              >
                Đây là nội dung của modal.
              </p>
              <button
                id="btn-delete"
                style="
                  background-color: #e74c3c;
                  color: white;
                  border: none;
                  padding: 10px 20px;
                  margin: 5px;
                  border-radius: 6px;
                  cursor: pointer;
                  font-size: 14px;
                  transition: background-color 0.3s;
                "
                onmouseover="this.style.backgroundColor='#c0392b'"
                onmouseout="this.style.backgroundColor='#e74c3c'"
              >
                Xóa
              </button>
              <button
                id="btn-append"
                style="
                  background-color: #3498db;
                  color: white;
                  border: none;
                  padding: 10px 20px;
                  margin: 5px;
                  border-radius: 6px;
                  cursor: pointer;
                  font-size: 14px;
                  transition: background-color 0.3s;
                "
                onmouseover="this.style.backgroundColor='#2980b9'"
                onmouseout="this.style.backgroundColor='#3498db'"
              >
                Chèn
              </button>
              <button
                id="btn-cancel"
                style="
                  background-color: #95a5a6;
                  color: white;
                  border: none;
                  padding: 10px 20px;
                  margin: 5px;
                  border-radius: 6px;
                  cursor: pointer;
                  font-size: 14px;
                  transition: background-color 0.3s;
                "
                onmouseover="this.style.backgroundColor='#7f8c8d'"
                onmouseout="this.style.backgroundColor='#95a5a6'"
              >
                Hủy
              </button>
            </div>
          </div>
        </div>

        <div id="dataTableContainer" class="h-75"></div>
      </div>
    </div>
    <script src="https://ajax.googleapis.com/ajax/libs/jquery/3.7.1/jquery.min.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/js/bootstrap.bundle.min.js"></script>

    <!-- Link script Sweet alert 2 -->
    <!-- SweetAlert2 CSS -->
    <link
      href="https://cdn.jsdelivr.net/npm/sweetalert2@11.6.16/dist/sweetalert2.min.css"
      rel="stylesheet"
    />

    <!-- SweetAlert2 JavaScript -->
    <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11.6.16/dist/sweetalert2.all.min.js"></script>

    <script>
      document.getElementById("viewTKB").onclick = function () {
        window.location.href = "/getTKBChinhThucSite"; // Thay URL bằng trang bạn muốn chuyển hướng đến
      };
    </script>
    <!-- phần chọn file -->
    <script>
      let dataTam = []; // Biến lưu dữ liệu tạm

      // Lắng nghe sự kiện click
      // Gắn sự kiện cho nút "import"
      document
        .getElementById("chooseFile")
        .addEventListener("click", async function () {
          const dotValue = document.getElementById("combobox-dot").value;
          const kiValue = document.getElementById("comboboxki").value;
          const namValue = document.getElementById("NamHoc").value;

          const semester = `${dotValue}, ${kiValue}, ${namValue}`;

          // Tạo input file
          const fileInput = document.createElement("input");
          fileInput.type = "file";
          fileInput.accept = ".xlsx, .xls"; // Loại file cho phép

          // Đợi file được chọn
          const selectedFile = await new Promise((resolve) => {
            fileInput.addEventListener("change", function () {
              resolve(fileInput.files[0]);
            });
            fileInput.click(); // Mở hộp thoại chọn file
          });

          if (!selectedFile) {
            console.error("Chưa chọn file.");
            return;
          }

          // Tạo FormData
          const formData = new FormData();
          formData.append("file", selectedFile); // Tên param "file"
          formData.append("semester", semester); // Thêm param "semester"

          await checkDataExistence(semester, formData);
        });

      async function checkDataExistence(semester, formData) {
        const body = {
          semester: semester,
        };
        fetch("/api/check-data-TKB-exist", {
          method: "POST",
          headers: {
            "Content-Type": "application/json",
          },
          body: JSON.stringify(body),
        })
          .then((response) => {
            if (!response.ok) {
              throw new Error("Kiểm tra dữ liệu thất bại");
            }
            return response.json();
          })
          .then((data) => {
            if (data.exists) {
              showModal(semester, formData);
            } else {
              importFileTKB(semester, formData);
            }
          })
          .catch((error) => {
            alert("Kiểm tra dữ liệu file quy chuẩn thất bại!");
            console.error("Error:", error);
          });
      }

      // Hàm hiển thị modal và xử lý sự kiện "Xóa" và "Chèn"
      function showModal(semester, formData) {
        const modal = document.getElementById("action-modal");
        const message = `Đã tồn tại dữ liệu Đợt ${semester}. Thực hiện XÓA file cũ hay CHÈN thêm file mới?
        Lưu ý : XÓA sẽ loại bỏ file cũ và chèn thêm, CHÈN sẽ không loại bỏ file cũ và chèn thêm`;
        document.getElementById("modal-message").innerText = message;
        modal.style.display = "block";

        // Xử lý sự kiện "Xóa"
        const deleteButton = document.getElementById("btn-delete");
        deleteButton.onclick = function handleDeleteClick() {
          modal.style.display = "none";
          deleteFile(semester, formData);
        };

        // Xử lý sự kiện "Chèn"
        const appendButton = document.getElementById("btn-append");
        appendButton.onclick = function handleAppendClick() {
          modal.style.display = "none";
          importFileTKB(semester, formData);
        };

        // Xử lý sự kiện "Hủy"
        document.getElementById("btn-cancel").onclick = function () {
          modal.style.display = "none";
        };
      }

      // Hàm gửi yêu cầu xóa dữ liệu
      function deleteFile(semester, formData) {
        const body = {
          major: "ALL",
          semester: semester,
        };

        fetch("/api/delete-data-TKB", {
          method: "POST",
          headers: {
            "Content-Type": "application/json",
          },
          body: JSON.stringify(body),
        })
          .then((response) => {
            if (!response.ok) {
              throw new Error("Xóa dữ liệu thất bại");
            }
            importFileTKB(semester, formData);
          })
          .catch((error) => {
            Swal.fire({
              title: "Thông báo",
              html: "Xóa dữ liệu thất bại",
              icon: "error",
              confirmButtonText: "OK",
              width: "auto", // Tự động điều chỉnh chiều rộng
              padding: "20px", // Giữ khoảng cách cho nội dung
            });
            console.error("Error:", error);
          });
      }

      async function importFileTKB(semester, formData) {
        // Gửi yêu cầu POST đến server
        // http://42.112.213.93:8080/api/v1/excel/upload
        // http://localhost:8080/api/v1/excel/upload
        fetch(`http://${window.location.hostname}:8080/api/v1/excel/upload`, {
          method: "POST",
          body: formData,
        })
          .then((response) => {
            const contentType = response.headers.get("content-type");
            if (contentType && contentType.includes("application/json")) {
              return response.json(); // Phản hồi dạng JSON
            } else {
              return response.text(); // Phản hồi dạng text
            }
          })
          .then((data) => {
            if (typeof data === "string") {
              if (data != "File processed successfully") return;
              insertDataAgain(semester);
              return;
            }

            // Kiểm tra dữ liệu JSON
            if (!data || data.length === 0) {
              throw new Error("Dữ liệu trả về trống");
            }
            console.log("Dữ liệu thô từ server:", data);
          })
          .catch((error) => {
            console.error(
              "Lỗi khi tải file hoặc xử lý dữ liệu:",
              error.message
            );
          });
      }

      async function insertDataAgain(semester) {
        fetch("/api/insert-data-TKB-again", {
          method: "POST",
          headers: {
            "Content-Type": "application/json",
          },
          body: JSON.stringify({ semester }), // Đảm bảo truyền đúng định dạng
        })
          .then((response) => {
            if (!response.ok) {
              throw new Error("Xóa dữ liệu thất bại");
            }
            return response.json(); // Chuyển đổi response thành JSON
          })
          .then((data) => {
            Swal.fire({
              title: "Thành công",
              html: "Dữ liệu đã được thêm!",
              icon: "success",
              confirmButtonText: "OK",
              width: "auto",
              padding: "20px",
            });
          })
          .catch((error) => {
            Swal.fire({
              title: "Thông báo",
              html: "Xóa dữ liệu thất bại",
              icon: "error",
              confirmButtonText: "OK",
              width: "auto",
              padding: "20px",
            });
            console.error("Error:", error);
          });
      }

      // Hàm tạo bảng từ dữ liệu JSON
      function createTable(data) {
        let tableHtml = '<table class="table table-bordered"><thead><tr>';

        // Lấy tiêu đề từ JSON (bỏ qua cột "Ghi chú")
        const headers = Object.keys(data[0]).filter((key) => key !== "Ghi chú");
        headers.forEach((header) => {
          tableHtml += `<th>${header}</th>`;
        });
        tableHtml += "</tr></thead><tbody>";

        // Duyệt qua từng mục trong dữ liệu
        data.forEach((item) => {
          tableHtml += "<tr>";
          headers.forEach((key) => {
            tableHtml += `<td>${item[key] !== null ? item[key] : ""}</td>`;
          });
          tableHtml += "</tr>";
        });
        tableHtml += "</tbody></table>";

        // Chèn bảng vào div với id="dataTableContainer"
        document.getElementById("dataTableContainer").innerHTML = tableHtml;
      }
    </script>

    <script>
      document
        .getElementById("changePasswordLink")
        .addEventListener("click", function (event) {
          event.preventDefault(); // Ngăn chặn hành vi mặc định của thẻ a
          const tenDangNhap = localStorage.getItem("TenDangNhap"); // Lấy TenDangNhap từ localStorage

          if (tenDangNhap) {
            // Chuyển hướng đến trang changePassword và truyền TenDangNhap trong URL
            window.location.href = `/changePassword?tenDangNhap=${encodeURIComponent(
              tenDangNhap
            )}`;
          } else {
            alert("Không tìm thấy TenDangNhap trong localStorage.");
          }
        });
    </script>
    <script>
      $(document).ready(function () {
        $('#NamHoc option[value=""]').remove();
        $('#comboboxki option[value=""]').remove();
        $('#combobox-dot option[value=""]').remove();

        $.ajax({
          url: "/getNamHoc",
          method: "GET",
          success: function (response) {
            if (response.success) {
              response.NamHoc.forEach(function (item) {
                console.log(item.NamHoc);
                $("#NamHoc").append(
                  `<option value="${item.NamHoc}">${item.NamHoc}</option>`
                );
              });

              response.Ki.forEach(function (item) {
                console.log(item.Ki);
                $("#comboboxki").append(
                  `<option value="${item.value}">${item.Ki}</option>`
                );
              });
              response.Dot.forEach(function (item) {
                console.log(item.Dot);
                $("#combobox-dot").append(
                  `<option value="${item.value}">${item.Dot}</option>`
                );
              });
            } else {
              console.error(
                "Không lấy được dữ liệu năm học:",
                response.message
              );
            }
          },
          error: function (error) {
            console.error("Lỗi khi lấy dữ liệu năm học:", error);
          },
        });
      });
    </script>
    <script>
      $(document).ready(function () {
        $('#MaPhongBan option[value=""]').remove();
        // Gọi AJAX để lấy dữ liệu JSON từ API
        $.ajax({
          url: "/getPhongBan", // Đường dẫn tới API getPhongBan
          method: "GET",
          success: function (response) {
            // Kiểm tra nếu response thành công
            const MaPhongBan = response.MaPhongBan;
            if (response.success) {
              // $('#MaPhongBan').prepend('<option value="ALL">Tất cả khoa</option>');
              // Lặp qua từng mục trong mảng MaPhongBan
              response.MaPhongBan.forEach(function (item) {
                // Nếu item.MaPhongBan bằng boMon.MaPhongBan, hiển thị trước
                console.log(item);
                $("#MaPhongBan").append(
                  `<option value="${item.MaPhongBan}">${item.MaPhongBan}</option>`
                );
              });

              // Nếu không có phòng ban nào tương ứng, bạn có thể thêm tùy chọn mặc định ở đây
              if (!$("#MaPhongBan option:selected").length) {
                $("#MaPhongBan").prepend(
                  '<option value="">Chọn Phòng Ban</option>'
                );
              }
            } else {
              console.error(
                "Không lấy được dữ liệu phongBan:",
                response.message
              );
            }
          },
          error: function (error) {
            console.error("Lỗi khi lấy dữ liệu phongBan:", error);
          },
        });
      });
    </script>
    <script>
      document
        .getElementById("infome")
        .addEventListener("click", function (event) {
          event.preventDefault(); // Ngăn chặn hành vi mặc định của thẻ a
          const id_User = localStorage.getItem("id_User"); // Lấy id_User từ localStorage\
          if (id_User) {
            // Chuyển hướng đến trang infome và truyền id_User trong URL
            window.location.href = `/infome/${id_User}`;
          } else {
            alert("Không tìm thấy id_User trong localStorage.");
          }
        });
    </script>
    <script>
      document
        .getElementById("changeMessage")
        .addEventListener("click", function (event) {
          event.preventDefault(); // Ngăn chặn hành vi mặc định của thẻ a
          const MaPhongBan = localStorage.getItem("MaPhongBan"); // Lấy MaPhongBan từ localStorage

          if (MaPhongBan) {
            // Chuyển hướng đến trang changeMessage và truyền MaPhongBan trong URL
            window.location.href = `/changeMessage/${MaPhongBan}`;
          } else {
            alert("Không tìm thấy MaPhongBan trong localStorage.");
          }
        });
    </script>
  </body>
</html>
