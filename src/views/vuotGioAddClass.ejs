<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Học Viện Kỹ Thuật Mật Mã</title>
  <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap@5.2.3/dist/css/bootstrap.min.css">
  <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap-icons@1.11.3/font/bootstrap-icons.css">
  <link rel="stylesheet" href="/css/forminput.css">
  <link rel="stylesheet" href="/css/styles.css">
  <link rel="stylesheet" href="/css/table.css">
  <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.6.0/css/all.min.css">
    <!-- <link rel="stylesheet" href="public/css/styles.css"> -->
  <style>
    .tab-content {
    display: none;
    }

    .tab-content.active-tab {
        display: block;
    }
  </style>
</head>
<body>
   
    <nav class="navbar-top ">
        <div class="container-fluid">
          <a class="navbar-brand" href="#">
            <img src="/Logo-Hoc-Vien-Ky-Thuat-Mat-Ma-ACTVN.webp" alt="Logo">
            <div class="navbar-title">
              <img src="/dongchu_banner.png" alt="banner">
            </div>
          </a>
        </div>
      </nav>
    
      <!-- Phần dưới của navbar chứa các mục nằm ngang -->
      <nav class="navbar navbar-expand-lg navbar-bottom sticky-top">
        <div class="" style="width: 100%;">
          <button class="navbar-toggler" type="button" data-bs-toggle="collapse" data-bs-target="#navbarNav" aria-controls="navbarNav" aria-expanded="false" aria-label="Toggle navigation">
            <span class="navbar-toggler-icon"></span>
          </button>
          <div class="collapse navbar-collapse" style="width: 100%;" id="navbarNav">
            <ul class="navbar-nav">
              <li class="nav-item">
                <a class="nav-link" id="Home" href=""><i class="fa-solid fa-house"></i></a>
              </li>
              <div class="navbar-nav">
                <div class="nav-item dropdown">
                  <a class="nav-link dropdown-toggle" href="/login" id="navbarDropdownUser" data-bs-toggle="dropdown"
                    aria-expanded="false">
                    Giảng Viên Mời
                  </a>
                  <div class="dropdown-menu" aria-labelledby="dropdownMenuButton">
                    <a class="nav-link" href="/gvmList">Danh sách giảng viên mời</a>
                    <a class="nav-link" id="actionButton1" href="/importGvmList" style="width: 100%;">Thêm giảng viên mời bằng file</a>
                  </div>
                </div>
              </div>
              <div class="navbar-nav">
                <div class="nav-item dropdown">
                  <a class="nav-link dropdown-toggle" href="/login" id="navbarDropdownUser" data-bs-toggle="dropdown"
                    aria-expanded="false">
                    Bảng Quy Chuẩn
                  </a>
                  <div class="dropdown-menu" aria-labelledby="dropdownMenuButton">
                    <a class="nav-link" href="/import" id="actionButton2" style="width: 100%;">Thêm file quy chuẩn</a>
                <a class="nav-link" href="/tableTam">Bảng quy chuẩn dự kiến</a>
                    <a class="nav-link" href="/tableQC">Bảng quy chuẩn chính thức</a>
                    <a class="nav-link" id="ThongTinGD" href="">Thông tin giảng viên theo lớp</a>
                  </div>
                </div>
              </div>
              <div class="navbar-nav">
                <div class="nav-item dropdown">
                  <a class="nav-link dropdown-toggle" href="/login" id="navbarDropdownUser" data-bs-toggle="dropdown"
                    aria-expanded="false">
                    Mời Giảng
                  </a>
                  <div class="dropdown-menu" aria-labelledby="dropdownMenuButton">
                    <a class="nav-link" href="/xemCacLopGvm">Xem các lớp mời</a>
                    <a class="nav-link" href="/classInfoGvm">Thông tin lớp giảng viên mời</a>
                    <a class="nav-link" href="/hopDongDuKien" role="button">Hợp đồng dự kiến</a>

                    <a  class="nav-link " href="/infoHDGvm" role="button">Thông tin hợp đồng</a>   
                    <li class="nav-item"></li>
                      <a class="nav-link " href="/phuLucHD" >Phụ lục hợp đồng</a>
                    </li>
                    <a class="nav-link " href="/exportHD">Hợp Đồng</a>

                  </div>
                </div>
              </div>
              <div class="navbar-nav">
                <div class="nav-item dropdown">
                  <a class="nav-link dropdown-toggle active" href="/login" id="navbarDropdownUser" data-bs-toggle="dropdown"
                    aria-expanded="false">
                    Vượt Giờ
                  </a>
                  <div class="dropdown-menu" aria-labelledby="dropdownMenuButton">
                    <a class="nav-link active" id="" href="/addclass">Thêm lớp giảng dạy</a>              
                    <a class="nav-link" id="" href="/addclassgiuaky">Thêm lớp kiểm tra giữa kỳ</a>
                    <a class="nav-link" id="actionButton3" href="/duyetgk">Duyệt lớp giữa kì</a>
                    <a class="nav-link" id="" href="/vuotGioExport">Xuất thông tin vượt giờ</a>              

                  </div>
                </div>
              </div>
              <div class="navbar-nav">
                <div class="nav-item dropdown">
                  <a class="nav-link dropdown-toggle" href="/login" id="navbarDropdownUser" data-bs-toggle="dropdown"
                    aria-expanded="false">
                    Nghiên Cứu Khoa Học
                  </a>
                  <div class="dropdown-menu" aria-labelledby="dropdownMenuButton">
                    <a class="nav-link" id="" href="#">COMING SOON</a>              </div>
                </div>
              </div>
              <div class="navbar-nav">
                <div class="nav-item dropdown">
                  <a class="nav-link dropdown-toggle" href="/login" id="navbarDropdownUser" data-bs-toggle="dropdown"
                    aria-expanded="false">
                    Đồ Án
                  </a>
                  <div class="dropdown-menu" aria-labelledby="dropdownMenuButton">
                    <a class="nav-link" id="" href="#">COMING SOON</a>              </div>
                </div>
              </div>
              <div class="navbar-nav">
                <div class="nav-item dropdown">
                  <a class="nav-link dropdown-toggle" href="/login" id="navbarDropdownUser" data-bs-toggle="dropdown"
                    aria-expanded="false">
                    Thống Kê
                  </a>
                  <div class="dropdown-menu" aria-labelledby="dropdownMenuButton">
                    <a class="nav-link" id="" href="#">COMING SOON</a>
                  </div>
                </div>
             
              </div>
              <div class="navbar-nav">
                <div class="nav-item dropdown">
                  <a class="nav-link dropdown-toggle" href="#" id="navbarDropdownUser" data-bs-toggle="dropdown"
                    aria-expanded="false">
                     Hệ Thống
                  </a>
                  <div class="dropdown-menu" aria-labelledby="dropdownMenuButton">
                    <a class="nav-link" id="" href="log">Xem File Log</a>
                  </div>
                </div>
              </div>
            </ul>
              <div class="navbar-nav">
                <div class="nav-item dropdown">
                  <a class="nav-link dropdown-toggle fullname" href="/login" id="navbarDropdownUser" data-bs-toggle="dropdown"
                    aria-expanded="false">
                    Hi, Lê Đức Thuận
                  </a>
                  <div class="dropdown-menu" aria-labelledby="dropdownMenuButton">
                    <a class="dropdown-item"id="infome">Thông tin cá nhân</a>
                    <a class="dropdown-item" id="changePasswordLink">Đổi mật khẩu</a>
                    <a class="dropdown-item" href="/">Đăng xuất</a>
                  </div>
                </div>
              </div>
          </div>
        </div>
      </nav>
      <div>
        
        <div class="m-3">
          <h1 class="d-flex justify-content-center">Lớp giảng dạy ngoài quy chuẩn</h1>
          <div class="tab-buttons">
            <button class="btn tab-button active" data-tab="tab1">Thêm lớp</button>
            <button class="btn tab-button" data-tab="tab2">Lớp của tôi</button>
          </div>
          <div class="tab-content active-tab" id="tab1">
            <form id="addClassForm" class="form" method="POST">
              <fieldset>
                <div id="add">
                  <h6>Nhập thông tin lớp:</h6>
                  <div class="row mb-3 d-flex">
                    <input type="text" id="GiangVien" name="GiangVien" hidden>
                    <input type="text" id="index" name="index" value="1" hidden>
                    <div style="width: max-content;">
                      <div>
                        <label for="TenHocPhan1">Tên học phần*</label>
                        <input class="form-control" type="text" name="TenHocPhan1" id="TenHocPhan1" required>
                      </div>
                      <div>
                        <label for="HinhThucKTGiuaKy1">Hình thức kiểm tra giữa kì:</label>
                        <select class="form-control" name="HinhThucKTGiuaKy1" id="HinhThucKTGiuaKy1">
                          <option value="none">None</option>
                          <option value="Coi, chấm TN">Coi, chấm trắc nghiệm trên giấy</option>
                          <option value="Coi, chấm viết">Coi, chấm tự luận</option>
                          <option value="Coi, chấm VĐ">Coi, chấm vấn đáp</option>
                          <option value="Coi, chấm TH">Coi, chấm thực hành</option>
                        </select>
                      </div>
                    </div>
                    <div style="width: max-content;">
                      <div>
                        <label for="Lop1">Mã lớp*</label>
                        <input type="text" class="form-control" name="Lop1" id="Lop1" required>
                      </div>
                      <div>
                        <label for="LoaiHinhDaoTao1">Loại hình đào tạo*</label>
                        <input class="form-control" type="text" name="LoaiHinhDaoTao1" id="LoaiHinhDaoTao1" required>
                      </div>
                    </div>
                    <div style="width: max-content;">
                      <div>
                        <label for="SoTC1">Số tín chỉ</label>
                        <input type="text" class="form-control" name="SoTC1" style="width: 100px;" id="SoTC1">
                      </div>
                      <div>
                        <label for="SoSV1">Số SV*</label>
                        <input type="text" class="form-control" name="SoSV1" id="SoSV1" style="width: 100px;" required>
                      </div>
                    </div>
                    <div style="width: max-content;">
                      <div>
                        <label for="SoTietCTDT1">Số tiết TKB</label>
                        <input type="text" class="form-control" name="SoTietCTDT1" id="SoTietCTDT1" style="width: 100px;">
                      </div>
                      <div>
                        <label for="HeSoT7CN1">Hệ số T7CN</label>
                        <select class="form-control" name="HeSoT7CN1" id="HeSoT7CN1">
                          <option value="1.0">1.0</option>
                          <option value="1.5">1.5</option>
                          <option value="2.0">2.0</option>
                          <option value="2.25">2.25</option>
                          <option value="3.0">3.0</option>
                          <option value="4.0">4.0</option>
                          <option value="4.5">4.5</option>
                          <option value="6.0">6.0</option>
                        </select>
                      </div>
                    </div>
                    <div style="width: max-content;">
                      <div>
                        <label for="QuyChuan1">Số tiết QC*</label>
                        <input type="text" class="form-control" name="QuyChuan1" id="QuyChuan1" style="width: 100px;" required>
                      </div>
                      <div>
                        <label for="HocKy1">Học kì</label>
                        <select class="form-control" name="HocKy1" id="HocKy1" style="width: 100px;">
                          <option value="1">Học kỳ 1</option>
                          <option value="2">Học kỳ 2</option>
                        </select>
                      </div>
                    </div>
                    <div style="width: max-content;">
                      
                      <div>
                        <label for="NamHoc1">Năm học</label>
                        <select class="form-control" name="NamHoc1" id="NamHoc1">
                        </select>
                      </div>
                    </div>
                  </div>    
                </div>        
                <div>
                  <button class="btn mx-5" id="submit">Thêm</button>
                  <button class="btn mx-5" type="button" onclick="addInputFields()">Thêm ô nhập lớp</button>
                </div>
              </fieldset>
            </form>
          </div>
          <div class="tab-content" id="tab2">
            <div class="">
              <div class="d-flex">
                <div class="cbb d-flex" style="margin-top: 20px;">
        
                  <!-- Combo box Kỳ -->
                  <select class="selectop mx-1" id="combobox-ki">
                    <option value="">Kỳ</option>
                  </select>
        
                  <!-- Combo box Năm -->
                  <select class="selectop mx-1" id="NamHoc">
                    <option value="">Năm học</option>
                  </select>
        
                  <button id="infoGvm" class="btn text-nowrap mx-2">Hiển thị</button>
                  <button onclick="submitData()" class="btn mx-2" id="update-qc">Cập nhật</button>
                </div>
              </div>
        
              <!-- Phần tìm kiếm xuống dưới -->
              <div class="d-flex my-3" style="height: 70px;">
                <input type="text" id="filterName" placeholder="Tìm theo tên giảng viên" class="form-control m-2 search"
                  style="width: 200px;" />
                <input type="text" id="filterClass" placeholder="Tìm theo tên học phần" class="form-control m-2 search"
                  style="width: 200px;" />
              </div>
              <script>
                function filterTable() {
                  const nameFilter = document.getElementById('filterName').value.toLowerCase();
                  const classFilter = document.getElementById('filterClass').value.toLowerCase();
                  const tableRows = document.querySelectorAll('#tableBody tr');
        
                  tableRows.forEach(row => {
                    const nameCell = row.querySelector('td:nth-child(3)'); // Cột tên giảng viên
                    const classCell = row.querySelector('td:nth-child(1)'); // Cột học phần
        
                    const name = nameCell ? nameCell.textContent.toLowerCase() : '';
                    const className = classCell ? classCell.textContent.toLowerCase() : '';
        
                    // Kiểm tra điều kiện lọc
                    const matchesName = name.includes(nameFilter);
                    const matchesClass = className.includes(classFilter);
        
                    // Hiện hoặc ẩn hàng dựa trên điều kiện lọc
                    if (matchesName && matchesClass) {
                      row.style.display = ''; // Hiện hàng nếu tất cả các điều kiện đều khớp
                    } else {
                      row.style.display = 'none'; // Ẩn hàng nếu không khớp
                    }
                  });
                }
        
                // Gán sự kiện cho các input filter
                document.getElementById('filterName').addEventListener('input', filterTable);
                document.getElementById('filterClass').addEventListener('input', filterTable);
              </script>
        
              <div id="renderInfo">
                <table class=" text-center" style="width: 100%;">
                  <thead>
                    <tr>
                      <th style="width: 200px;">Học phần</th>
                      <th style="width: 50px;">Số TC</th>
                      <th style="width: 200px;">GV giảng dạy</th>
                      <th style="width: 50px;">Mã lớp</th>
                      <th style="width: 100px;">Số SV</th>
                      <th style="width: 50px;">Hình thức thi giữa kỳ</th>
                      <th style="width: 100px;">Hệ số T7CN</th>
                      <th style="width: 50px;">Số đề</th>
                      <th style="width: 50px;">Ghi chú</th>
                      <th style="width: 80px; " id="select">
                        <label class="form-check-label" for="checkAllSelect" style="margin-left: 0px; margin-right: 0px;">Xoá lớp</label>
                      </th>
                    </tr>
                  </thead>
                  <tbody id="tableBody">
                    <!-- Dữ liệu sẽ được chèn vào đây -->
                  </tbody>
                </table>
              </div>
              <!-- Label tổng số tiết tách riêng với bảng -->
            </div>
          </div>
        </div>
        <!-- Modal form -->
        <div id="modalBackdrop" style="display: none;"></div> <!-- Nền tối -->
        <div id="noteForm" style="display: none;">
          <h3>Ghi chú</h3>
          <label for="noteInput">Nội dung:</label>
          <textarea id="noteInput"></textarea> <!-- Sử dụng textarea cho ghi chú dài -->
          <br />
          <div class="d-flex text-nowrap" style="text-align: right;">
            <button onclick="saveNote()">Lưu</button>
            <button onclick="doneNote()">Hoàn Thành</button>
            <button class="cancel" onclick="closeNoteForm()">Đóng</button>
          </div>
        </div>
      </div>
  <script src="https://ajax.googleapis.com/ajax/libs/jquery/3.7.1/jquery.min.js"></script>
  <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/js/bootstrap.bundle.min.js"></script>

  <script>
    document.addEventListener("DOMContentLoaded", () => {
      const isKhoa = localStorage.getItem("isKhoa");

      // Ẩn button ngay khi trang được tải
      const actionButton = document.getElementById('actionButton');
      const actionButton1 = document.getElementById('actionButton1');
      const actionButton2 = document.getElementById('actionButton2');
      const actionButton3 = document.getElementById('actionButton3');

      if (isKhoa == 0) {
        actionButton1.style.display = 'none'; // Ẩn actionButton1 nếu isKhoa = 0
        actionButton2.style.display = 'inline-block'; // Hiện actionButton2
            
      } else {
          actionButton1.style.display = 'inline-block'; // Hiện actionButton1 nếu isKhoa khác 0
          actionButton2.style.display = 'none'; // Ẩn actionButton2
      }
      const MaPhongBan = localStorage.getItem("MaPhongBan");
    
      // Gán URL động vào thuộc tính action của form
      if (MaPhongBan) {
        document.getElementById("addClassForm").action = `/addclass/${MaPhongBan}`;
      } else {
        console.error("Không tìm thấy MaPhongBan trong localStorage");
      }

      //Ẩn site duyệt
      const Quyen = localStorage.getItem("userRole");
      if (Quyen === "Lãnh đạo khoa" || Quyen === "Duyệt") {
        actionButton3.style.display = '';
      } else {
        actionButton3.style.display = 'none';
      }
      });
</script>
<script>
document.addEventListener('DOMContentLoaded', function () {
    const tabButtons = document.querySelectorAll('.tab-button');
    const tabContents = document.querySelectorAll('.tab-content');

    tabButtons.forEach(button => {
        button.addEventListener('click', function () {
            // Xóa trạng thái active khỏi tất cả các tab
            tabButtons.forEach(btn => btn.classList.remove('active'));
            tabContents.forEach(content => content.classList.remove('active-tab'));

            // Kích hoạt tab được chọn
            const tabId = this.dataset.tab;
            document.getElementById(tabId).classList.add('active-tab');  // Hiển thị nội dung tab
            this.classList.add('active');  // Thêm lớp active vào nút được chọn
        });
    });
});
</script>
<script>
    const Home = document.getElementById("Home");
    Home.addEventListener("click", function (event) {
        event.preventDefault(); // Ngăn chặn hành vi mặc định của liên kết

        const isKhoa = localStorage.getItem("isKhoa")

        if (isKhoa==0) { // Nếu là đào tạo hoặc tài chính
          window.location.href = "/maindt";
        } else {
          window.location.href = "/mainkhoa";
        }
    });
</script>
<script>
    window.onload = function () {
        const TenNhanVien = localStorage.getItem("TenNhanVien"); // Lấy tên người dùng từ localStorage
        let Role = localStorage.getItem("userRole");
        if (Role.toUpperCase() == 'LÃNH ĐẠO KHOA'){
          Role = 'LĐK';
        }      
        if (TenNhanVien) {
          document.getElementById("GiangVien").value = TenNhanVien;
            // Hiển thị tên người dùng trên phần tử HTML
          document.querySelector(".fullname").innerText = `${TenNhanVien} - ${Role}`;
        } else {
            document.querySelector('.fullname').innerText = 'Hi, Guest'; // Hiển thị nếu không có tên người dùng
        }      
        //document.querySelector('.role').innerText = `${Role}`;      
        };
</script>
<script>
    let counter = 2;
    function addInputFields() {
        const container = document.getElementById("add");
        const newDiv = document.createElement("div");
        newDiv.className = "row mb-3 d-flex";

        newDiv.innerHTML = `
              <h6>Nhập thông tin lớp:</h6>
              <div style="width: max-content;">
                  <div>
                    <label for="TenHocPhan${counter}">Tên học phần*</label>
                    <input required class="form-control" type="text" name="TenHocPhan${counter}" id="TenHocPhan${counter}">
                  </div>
                  <div>
                    <label for="HinhThucKTGiuaKy${counter}">Hình thức kiểm tra giữa kì</label>
                    <select class="form-control" name="HinhThucKTGiuaKy${counter}" id="HinhThucKTGiuaKy${counter}">
                      <option value="none">None</option>
                      <option value="Coi, chấm TN">Coi, chấm trắc nghiệm trên giấy</option>
                      <option value="Coi, chấm viết">Coi, chấm tự luận</option>
                      <option value="Coi, chấm VĐ">Coi, chấm vấn đáp</option>
                      <option value="Coi, chấm TH">Coi, chấm thực hành</option>
                    </select>
                  </div>
                </div>
                <div style="width: max-content;">
                  <div>
                    <label for="Lop${counter}">Lớp học phần*</label>
                    <input type="text" class="form-control" name="Lop${counter}" id="Lop${counter}" required>
                  </div>
                  <div>
                    <label for="LoaiHinhDaoTao${counter}">Loại hình đào tạo</label>
                    <input class="form-control" type="text" name="LoaiHinhDaoTao${counter}" id="LoaiHinhDaoTao${counter}">
                  </div>
                </div>
                <div style="width: max-content;">
                  <div>
                    <label for="SoTC${counter}">Số tín chỉ</label>
                    <input type="text" class="form-control" name="SoTC${counter}" style="width: 100px;" id="SoTC${counter}">
                  </div>
                  <div>
                    <label for="SoSV${counter}">Số SV*</label>
                    <input type="text" class="form-control" name="SoSV${counter}" id="SoSV${counter}" style="width: 100px;" required>
                  </div>
                </div>
                <div style="width: max-content;">
                  <div>
                    <label for="SoTietCTDT${counter}">Số tiết TKB</label>
                    <input type="text" class="form-control" name="SoTietCTDT${counter}" id="SoTietCTDT${counter}" style="width: 100px;">
                  </div>
                  <div>
                    <label for="HeSoT7CN${counter}">Hệ số T7CN</label>
                    <select class="form-control" name="HeSoT7CN${counter}" id="HeSoT7CN${counter}">
                      <option value="1.0">1.0</option>
                      <option value="1.5">1.5</option>
                      <option value="2.0">2.0</option>
                      <option value="2.25">2.25</option>
                      <option value="3.0">3.0</option>
                      <option value="4.0">4.0</option>
                      <option value="4.5">4.5</option>
                      <option value="6.0">6.0</option>
                    </select>                    
                  </div>
                </div>
                <div style="width: max-content;">
                  <div>
                    <label for="QuyChuan${counter}">Số tiết QC*</label>
                    <input type="text" class="form-control" name="QuyChuan${counter}" id="QuyChuan${counter}" style="width: 100px;" required>
                  </div>
                  <div>
                    <label for="HocKy${counter}">Học kì</label>
                    <select class="form-control" name="HocKy${counter}" id="HocKy${counter}" style="width: 100px;">
                      <option value="1">Học kỳ 1</option>
                      <option value="2">Học kỳ 2</option>
                    </select>
                  </div>
                </div>
                <div style="width: max-content;">
                  <div>
                    <label for="NamHoc${counter}">Năm học</label>
                    <select class="form-control" name="NamHoc${counter}" id="NamHoc${counter}">
                    </select>
                  </div>
                </div>
              <button type="button" class="btn btn-danger" onclick="removeField(this)" style="margin-bottom: 0px; width: 100px;">Xóa</button>
        `;

        container.appendChild(newDiv);
        document.getElementById("index").value = counter;
        updateNamHocOptions(`NamHoc${counter}`);
        counter++;
    }
    function removeField(button) {
    // Tìm đến phần tử `newDiv` chứa các trường và nút "Xóa"
    const fieldDiv = button.parentElement;
    fieldDiv.remove();  // Xóa `newDiv` khỏi DOM
    }
    function updateNamHocOptions(id) {
    $.ajax({
      url: '/getNamHoc',
      method: 'GET',
      success: function (response) {
        if (response.success) {
          const currentYear = new Date().getFullYear();
          response.NamHoc.forEach(function (item) {
            const isSelected = currentYear === item.NamHoc ? 'selected' : '';
            $(`#${id}`).append(
              `<option value="${item.NamHoc}" ${isSelected}>${item.NamHoc}</option>`
            );
          });
        } else {
          console.error("Không lấy được dữ liệu năm học:", response.message);
        }
      },
      error: function (error) {
        console.error("Lỗi khi lấy dữ liệu năm học:", error);
      }
    });
  }

  // $(document).ready(function () {
  //   updateNamHocOptions('NamHoc1');
  // });
</script>
<script>
  $(document).ready(function () {
    $.ajax({
      url: '/getNamHoc',
      method: 'GET',
      success: function (response) {
        if (response.success) {
          const currentYear = new Date().getFullYear();
          response.NamHoc.forEach(function (item) {
            console.log(item.NamHoc);
            const isSelected = currentYear === item.NamHoc ? 'selected' : '';
            $(`#NamHoc1`).append(
              `<option value="${item.NamHoc}" ${isSelected}>${item.NamHoc}</option>`
            );
          });
        } else {
          console.error("Không lấy được dữ liệu năm học:", response.message);
        }
      },
      error: function (error) {
        console.error("Lỗi khi lấy dữ liệu năm học:", error);
      }
    });
  });
</script>
<script>
  document.getElementById("infome").addEventListener("click", function(event) {
    event.preventDefault(); // Ngăn chặn hành vi mặc định của thẻ a
    const id_User = localStorage.getItem("id_User"); // Lấy id_User từ localStorage\
    if (id_User) {
        // Chuyển hướng đến trang infome và truyền id_User trong URL
        window.location.href = `/infome/${id_User}`;
    } else {
        alert("Không tìm thấy id_User trong localStorage.");
    }
  });
</script>
<script>
  $(document).ready(function () {
    $('#NamHoc option[value=""]').remove();
    $('#combobox-ki option[value=""]').remove();
    $('#combobox-dot option[value=""]').remove();

    $.ajax({
      url: '/getNamHoc',
      method: 'GET',
      success: function (response) {
        if (response.success) {

          response.NamHoc.forEach(function (item) {
            console.log(item.NamHoc);
            $('#NamHoc').append(
              `<option value="${item.NamHoc}">${item.NamHoc}</option>`
            );
          });

          response.Ki.forEach(function (item) {
            console.log(item.Ki);
            $('#combobox-ki').append(
              `<option value="${item.value}">${item.Ki}</option>`
            );
          });
          response.Dot.forEach(function (item) {
            console.log(item.Dot);
            $('#combobox-dot').append(
              `<option value="${item.value}">${item.Dot}</option>`
            );
          });
        } else {
          console.error("Không lấy được dữ liệu năm học:", response.message);
        }
      },
      error: function (error) {
        console.error("Lỗi khi lấy dữ liệu năm học:", error);
      }
    });
  });
</script>
</script>
<script>
  document.getElementById('infoGvm').addEventListener('click', loadLopMoiData);

  async function loadLopMoiData() {
    const MaPhongBan = localStorage.getItem('MaPhongBan'); // Lấy mã phòng ban từ localStorage
    const Ki = document.getElementById('combobox-ki').value;
    const Nam = document.getElementById('NamHoc').value;
    let MoiGiang = 0;
    if (!MaPhongBan) {
      alert("Mã phòng ban không tồn tại!");
      return;
    }

    try {
      const response = await fetch(`/getLopNgoaiQuyChuan/${MaPhongBan}/${Ki}/${Nam}`, {
        method: 'GET', // Gửi yêu cầu GET
      });
      if (!response.ok) {
        throw new Error(`Error: ${response.status} - ${response.statusText}`);
      }
      const data = await response.json(); // Lấy dữ liệu từ server
      console.log(data);
      if (data.success) {
        if (data.maBoMon && data.maBoMon.length > 0) {
          console.log('Dữ liệu bộ môn:', data);
          renderTable(data);
        } else {
          alert("Dữ liệu trống!");
        }
      } else {
        alert("Không tìm thấy dữ liệu!");
      }
    } catch (error) {
      console.error('Có lỗi xảy ra khi lấy dữ liệu:', error);
    }
  }

</script>
<script>
  function renderTable(data) {
    const role = localStorage.getItem("userRole");
    const MaPhongBan = localStorage.getItem("MaPhongBan");
    const isKhoa = localStorage.getItem("isKhoa");
    const TenNhanVien = localStorage.getItem("TenNhanVien");
    console.log( TenNhanVien);
    let tableRowData = [];

    const tableBody = document.getElementById('tableBody');
    tableBody.innerHTML = ''; // Xóa nội dung cũ
    //let index = -1;
    let filteredData = data.maBoMon;
    
    filteredData.forEach((row, index) => {

      const tableRow = document.createElement('tr');

      // Thêm id vào dữ liệu row để lưu trữ
      let rowWithId = {
        id: index,
        ...row
      };
      tableRowData.push(rowWithId);

      tableRow.setAttribute("data-id", row.MaGiangDay);

      // Lớp học phần
      const tenHocPhanTd = document.createElement('td');
      const tenHocPhanInput = document.createElement('input');
      tenHocPhanInput.type = 'text'; // Loại input là text
      tenHocPhanInput.value = row.TenHocPhan; // Gán giá trị ban đầu
      tenHocPhanInput.classList.add('border-light'); // Thêm class Bootstrap (tùy chọn)
      tenHocPhanInput.style.width = '100%'; // Đảm bảo input vừa với ô bảng

      // Gắn input vào ô td
      tenHocPhanTd.appendChild(tenHocPhanInput);
      tenHocPhanInput.id = `tenHocPhanInput_${index}`;
      tableRow.appendChild(tenHocPhanTd);
      

      // Số tín chỉ
      const soTCTd = document.createElement('td');
      const soTCInput = document.createElement('input');
      soTCInput.type = 'text'; // Loại input là text
      soTCInput.value = row.SoTC; // Gán giá trị ban đầu
      soTCInput.classList.add('border-light'); // Thêm class Bootstrap (tùy chọn)
      soTCInput.style.width = '100%'; // Đảm bảo input vừa với ô bảng
      // Gắn input vào ô td
      soTCTd.appendChild(soTCInput);
      soTCInput.id = `soTCInput_${index}`;
      tableRow.appendChild(soTCTd);

      // Giảng viên giảng dạy
      const giangVienTd = document.createElement('td');
      giangVienTd.textContent = row.GiangVien;
      tableRow.appendChild(giangVienTd);

      // Mã lớp
      const maLopTd = document.createElement('td');
      const maLopInput = document.createElement('input');
      maLopInput.type = 'text'; // Loại input là text
      maLopInput.value = row.Lop; // Gán giá trị ban đầu
      maLopInput.classList.add('border-light'); // Thêm class Bootstrap (tùy chọn)
      maLopInput.style.width = '100%'; // Đảm bảo input vừa với ô bảng
      // Gắn input vào ô td
      maLopTd.appendChild(maLopInput);
      maLopInput.id = `maLopInput_${index}`;
      tableRow.appendChild(maLopTd);

      // Số sinh viên
      const soSVTd = document.createElement('td');
      const soSVInput = document.createElement('input');
      soSVInput.type = 'text'; // Loại input là text
      soSVInput.value = row.SoSV; // Gán giá trị ban đầu
      soSVInput.classList.add('border-light'); // Thêm class Bootstrap (tùy chọn)
      soSVInput.style.width = '100%'; // Đảm bảo input vừa với ô bảng
      // Gắn input vào ô td
      soSVTd.appendChild(soSVInput);
      soSVInput.id = `soSVInput_${index}`;
      tableRow.appendChild(soSVTd);


      //Thẻ select hình thức thi giữa kỳ
      let hinhThucKTGiuaKyTd;
      let hinhThucKTGiuaKySelect;
      hinhThucKTGiuaKyTd = document.createElement('td');
      hinhThucKTGiuaKySelect = document.createElement('select');
      hinhThucKTGiuaKySelect.name = 'hinhThucKTGiuaKy';

      // Tạo các tùy chọn cho select (có thể thay đổi tùy theo yêu cầu)
      const options = [
        { value: 'none', text: 'None' },
        { value: 'Coi, chấm TN', text: 'Coi, chấm trắc nghiệm trên giấy' },
        { value: 'Coi, chấm viết', text: 'Coi, chấm tự luận' },
        { value: 'Coi, chấm VĐ', text: 'Coi, chấm vấn đáp' },
        { value: 'Coi, chấm TH', text: 'Coi, chấm thực hành' }
      ];

      // Thêm các tùy chọn vào select
      options.forEach(optionData => {
        const option = document.createElement('option');
        option.value = optionData.value;
        option.textContent = optionData.text;
        if (row.HinhThucKTGiuaKy === optionData.value) {
          option.selected = true;
        }
        hinhThucKTGiuaKySelect.appendChild(option);
      });

      hinhThucKTGiuaKyTd.appendChild(hinhThucKTGiuaKySelect);
      // Thêm id để lấy dữ liệu 
      hinhThucKTGiuaKySelect.id = `hinhThucKTGiuaKy_${index}`;
      tableRow.appendChild(hinhThucKTGiuaKyTd);

      // thẻ select hệ số t7CN
      let heSoT7CNTd;
      let heSoT7CNSelect;
      heSoT7CNTd = document.createElement('td');
      heSoT7CNSelect = document.createElement('select');
      heSoT7CNSelect.name = 'heSoT7CN';

      // Tạo các tùy chọn cho select (có thể thay đổi tùy theo yêu cầu)
      const options1 = [
        { value: '1.0', text: '1.0' },
        { value: '1.5', text: '1.5' },
        { value: '2.0', text: '2.0' },
        { value: '2.25', text: '2.25' },
        { value: '3.0', text: '3.0' },
        { value: '4.0', text: '4.0' },
        { value: '4.5', text: '4.5' },
        { value: '6.0', text: '6.0' }
      ];

      // Thêm các tùy chọn vào select
      options1.forEach(optionData => {
        const option = document.createElement('option');
        option.value = optionData.value;
        option.textContent = optionData.text;
        if (row.HeSoT7CN === optionData.value) {
          option.selected = true;
        }
        heSoT7CNSelect.appendChild(option);
      });

      heSoT7CNTd.appendChild(heSoT7CNSelect);
      // Thêm id để lấy dữ liệu 
      heSoT7CNSelect.id = `heSoT7CN_${index}`;
      tableRow.appendChild(heSoT7CNTd);

      let soDeTd;
      let soDeInput;
      soDeTd = document.createElement('td');
      soDeInput = document.createElement('input');
      soDeInput.type = 'text';
      soDeInput.name = 'soDe';
      soDeInput.classList.add('border-light');
      soDeInput.value = row.SoDe;
      soDeInput.id = `soDe_${index}`; // Gắn id để tiện truy cập sau
      soDeTd.appendChild(soDeInput);
      tableRow.appendChild(soDeTd);


      // Ghi chú
      const ghiChuTd = document.createElement("td");
      const ghiChuValue = row.GhiChu && row.GhiChu.trim() !== "" ? row.GhiChu : false;
      const hoanThanh = row.HoanThanh;
      if (role === 'GV' || role === 'Thường') {
        ghiChuTd.innerHTML = "📜"; // Hiển thị biểu tượng ghi chú nếu role là GV hoặc Thường
        ghiChuTd.style.cursor = "not-allowed"; // Thay đổi con trỏ chuột thành 'not-allowed' để báo hiệu không thể tương tác
        ghiChuTd.title = "Bạn không có quyền truy cập"; // Thêm tooltip để giải thích lý do không thể nhấn
      } else {

        if (ghiChuValue) {
          if (hoanThanh) {
            ghiChuTd.innerHTML = `📜 <span class="bi bi-check2-circle" style="color: green;"></span>`; // Hiển thị biểu tượng ghi chú và chấm đỏ
          } else {
            ghiChuTd.innerHTML = `📜 <span class="bi bi-circle" style="color: red;"></span>`; // Hiển thị biểu tượng ghi chú và chấm đỏ
          }

        } else {
          ghiChuTd.innerHTML = "📜"; // Hiển thị biểu tượng ghi chú nếu không có ghi chú
        }
        ghiChuTd.style.cursor = "pointer"; // Thay đổi con trỏ chuột khi di chuột qua biểu tượng
        ghiChuTd.onclick = () => openNoteForm(tableRow, ghiChuValue); // Gọi hàm mở form khi nhấn vào biểu tượng


      }
      tableRow.appendChild(ghiChuTd); // Thêm ô ghi chú vào hàng
      tableBody.appendChild(tableRow);

      //button xoá lớp
      let deleteButtonTd, deleteButton;
      deleteButtonTd = document.createElement('td');
      deleteButton = document.createElement('button');
      deleteButton.style.marginLeft = '30px'; // Canh chỉnh nút
      deleteButton.className = 'bi bi-trash3 action-button edit'; // Thêm class để định dạng nếu cần
      deleteButton.onclick = () => {
          const confirmed = confirm('Bạn có chắc chắn muốn xóa lớp này không?');
          if (confirmed) {
              tableRow.remove(); // Xóa dòng tương ứng
              // Có thể gọi thêm hàm để xóa dữ liệu liên quan nếu cần
              deleteData(row.MaGiangDay); // Gọi hàm xóa dữ liệu trong database
          }
      };
      deleteButtonTd.appendChild(deleteButton);
      tableRow.appendChild(deleteButtonTd);


      if(row.KhoaDuyet){
        tenHocPhanInput.disabled = true;
        soTCInput.disabled = true;
        maLopInput.disabled = true;
        soSVInput.disabled = true;
        hinhThucKTGiuaKySelect.disabled = true;
        soDeInput.disabled = true;
        heSoT7CNSelect.disabled = true;
        deleteButton.disabled = true;
      }
    });
    // Lưu dữ liệu với id vào localStorage
    localStorage.setItem('tableData', JSON.stringify(tableRowData));
  }

</script>
<script>
  async function submitData() {
    const isKhoa = localStorage.getItem("isKhoa");
    const role = localStorage.getItem("userRole");
    const MaPhongBan = localStorage.getItem("MaPhongBan");
    const GiangVien = localStorage.getItem("TenNhanVien");
    const rows = document.querySelectorAll('#tableBody tr'); // Lấy tất cả các hàng trong bảng
    const rowCount = rows.length;
    const globalData = [];
    
    rows.forEach((row, index) => {
      // Lấy checkbox "select"
      const update = row.querySelector('input[type="text"][name="hinhThucKTGiuaKy"]');
      
      // Kiểm tra nếu checkbox bị disable, bỏ qua dòng này
      if (update && update.disabled) {
        return; // Bỏ qua dòng này nếu checkbox bị disable
      }
      const tenHocPhanInput = document.getElementById(`tenHocPhanInput_${index}`);
      const tenHocPhan = tenHocPhanInput ? tenHocPhanInput.value : '';

      const soTCInput = document.getElementById(`soTCInput_${index}`);
      const soTC = soTCInput ? soTCInput.value : '';

      const maLopInput = document.getElementById(`maLopInput_${index}`);
      const maLop = maLopInput ? maLopInput.value : '';

      const soSVInput = document.getElementById(`soSVInput_${index}`);
      const soSV = soSVInput ? soSVInput.value : '';

      const hinhThucKTGiuaKyInput = document.getElementById(`hinhThucKTGiuaKy_${index}`);
      const hinhThucKTGiuaKy = hinhThucKTGiuaKyInput ? hinhThucKTGiuaKyInput.value : '';

      const heSoT7CNInput = document.getElementById(`heSoT7CN_${index}`);
      const heSoT7CN = heSoT7CNInput ? heSoT7CNInput.value : '';

      const soDeInput = document.getElementById(`soDe_${index}`);
      const soDe = soDeInput ? soDeInput.value : '';

      console.log(hinhThucKTGiuaKy);
      console.log(heSoT7CN);
      console.log(soDe);

      
      // Đẩy dữ liệu vào globalData
      globalData.push({
        tenHocPhan,
        soTC,
        maLop,
        soSV,
        hinhThucKTGiuaKy,
        heSoT7CN,
        MaGiangDay: row.dataset.id, // Thêm thông tin index vào để theo dõi
        soDe,
      });
      console.log(globalData);
    });

    // Gọi hàm update() sau khi đã thu thập tất cả dữ liệu
    update(globalData);
  }

  // Gửi dữ liệu lên server
  function update(globalData) {
    console.log('Dữ liệu gửi lên:', globalData);  // Kiểm tra dữ liệu trước khi gửi
    fetch('/updatelopngoaiquychuan', {
      method: 'POST',
      headers: {
        'Content-Type': 'application/json'
      },
      body: JSON.stringify(globalData) // Chuyển đổi globalData thành chuỗi JSON
    })
      .then(response => {
        if (!response.ok) {
          return response.json().then(err => {
            throw new Error(err.message || 'Lỗi khi gửi dữ liệu');
          });
        }
        return response.json(); // Chuyển đổi phản hồi thành JSON
      })
      .then(data => {
        console.log(data.message); // Thông báo khi dữ liệu gửi thành công
      })
      .catch(error => {
        console.error('Có lỗi xảy ra:', error);
        console.log(error.message);
      });
  }
  function deleteData(MaGiangDay) {
    fetch('/deletelopngoaiquychuan', {
        method: 'POST',
        headers: {
            'Content-Type': 'application/json',
        },
        body: JSON.stringify({ MaGiangDay }),
    })
    .then(response => {
        if (!response.ok) {
            return response.json().then(err => {
                throw new Error(err.message || 'Lỗi khi xóa dữ liệu');
            });
        }
        return response.json();
    })
    .then(data => {
        if (data.success) {
            alert('Xóa thành công!');
            // Cập nhật giao diện, ví dụ: xóa hàng khỏi bảng
            const row = document.querySelector(`tr[data-id="${MaGiangDay}"]`);
            if (row) row.remove();
        } else {
            alert(`Lỗi: ${data.message}`);
        }
    })
    .catch(error => {
        console.error('Có lỗi xảy ra:', error);
        alert(`Không thể xóa: ${error.message}`);
    });
  }
</script>
<script>
  let currentRow; // Biến toàn cục để lưu hàng hiện tại
  let typeclass = "Lớp ngoài quy chuẩn"

  function openNoteForm(row, GhiChu) {
    console.log(row, GhiChu);
    currentRow = row; // Lưu hàng hiện tại
    document.getElementById("noteForm").style.display = "block"; // Hiển thị form
    document.getElementById("modalBackdrop").style.display = "block"; // Hiển thị nền tối

    // Hiển thị giá trị ghi chú và hạn
    document.getElementById("noteInput").value = GhiChu || ""; // Hiển thị ghi chú
  }


  function closeNoteForm() {
    document.getElementById("noteForm").style.display = "none"; // Ẩn form
    document.getElementById("modalBackdrop").style.display = "none"; // Ẩn nền tối
  }
  window.onclick = function (event) {
    const modal = document.getElementById("noteForm");
    const modalBackdrop = document.getElementById("modalBackdrop");
    if (event.target === modalBackdrop) {
      closeNoteForm();
    }
  }
  async function saveNote() {
    const note = document.getElementById("noteInput").value;
    // const deadline = document.getElementById("deadlineInput").value;

    if (currentRow) {
      const id = currentRow.getAttribute("data-id"); // Lấy ID từ thuộc tính `data-id` của hàng

      // Kiểm tra ID có tồn tại
      if (id) {

        // Gửi dữ liệu đến API để lưu vào CSDL
        try {
          const response = await fetch('/savenotegk', {
            method: 'POST',
            headers: {
              'Content-Type': 'application/json',
            },
            body: JSON.stringify({ id, ghiChu: note, typeclass }),
          });
          const result = await response.json();
          if (!result.success) {
            alert("Lỗi khi lưu ghi chú vào CSDL: " + result.message);
          } else {
            alert("Cập nhật thành công");
          }
        } catch (error) {
          alert("Lỗi khi gửi yêu cầu đến server: " + error);
        }
      } else {
        alert("ID của hàng hiện tại không tồn tại.");
      }
    } else {
      alert("currentRow không được xác định.");
    }

    closeNoteForm();
  }
  async function doneNote() {
    const note = document.getElementById("noteInput").value;
    // const deadline = document.getElementById("deadlineInput").value;

    if (currentRow) {
      const id = currentRow.getAttribute("data-id"); // Lấy ID từ thuộc tính `data-id` của hàng

      // Kiểm tra ID có tồn tại
      if (id) {


        // Gửi dữ liệu đến API để lưu vào CSDL
        try {
          const response = await fetch('/donenotegk', {
            method: 'POST',
            headers: {
              'Content-Type': 'application/json',
            },
            body: JSON.stringify({ id, ghiChu: note, typeclass }),
          });
          const result = await response.json();
          if (!result.success) {
            alert("Lỗi khi lưu ghi chú vào CSDL: " + result.message);
          } else {
            alert("Cập nhật thành công");
          }
        } catch (error) {
          alert("Lỗi khi gửi yêu cầu đến server: " + error);
        }
      } else {
        alert("ID của hàng hiện tại không tồn tại.");
      }
    } else {
      alert("currentRow không được xác định.");
    }

    closeNoteForm();
  }
  // Sự kiện click ngoài modal để đóng modal
  window.onclick = function (event) {
    const modal = document.getElementById("noteForm");
    const modalBackdrop = document.getElementById("modalBackdrop");
    if (event.target === modalBackdrop) {
      closeNoteForm();
    }
  }
</script>
</body>
</html>

