<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>Học Viện Kỹ Thuật Mật Mã</title>
    <link
      rel="stylesheet"
      href="https://cdn.jsdelivr.net/npm/bootstrap@5.2.3/dist/css/bootstrap.min.css"
    />
    <link
      rel="stylesheet"
      href="https://cdn.jsdelivr.net/npm/bootstrap-icons@1.11.3/font/bootstrap-icons.css"
    />
    <link rel="stylesheet" href="/css/styles.css" />
    <link
      rel="stylesheet"
      href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.6.0/css/all.min.css"
    />
    <style>
      /* Định dạng cho bảng */
      .table {
        width: 70%;
        border-collapse: separate;
        border-spacing: 0;
        margin-top: 20px;
        font-size: 0.9em;
        box-shadow: 0 0 20px rgba(0, 0, 0, 0.15);
        border-radius: 8px;
        overflow: hidden;
        justify-self: center;
      }

      .table th,
      .table td {
        padding: 10px;
        text-align: left;
        border: 1px solid #dee2e6;
        border-right: 2px solid #dee2e6;
        border-left: 2px solid #dee2e6;
      }

      .table th {
        background-color: blue;
        color: white;
        font-weight: bold;
        border-right: 2px solid #fff;
      }

      .table th:last-child {
        border-right: 2px solid #dee2e6;
      }

      .table tbody tr {
        border-bottom: 1px solid #dddddd;
        transition: all 0.3s ease;
      }

      .table tbody tr:nth-child(even) {
        background-color: #f3f3f3;
      }

      .table tbody tr:last-of-type {
        border-bottom: 2px solid #009879;
      }

      .table tbody tr:hover {
        background-color: #f5f5f5;
        transform: scale(1.01);
      }

      /* Định dạng cho biểu đồ */
      .chart {
        width: 80%;
        margin-left: 10%;
      }

      /* Định dạng cho tiêu đề */
      h3 {
        color: #009879;
        text-align: center;
        margin: 30px 0;
        font-weight: 600;
        position: relative;
        padding-bottom: 10px;
      }

      h3:after {
        content: "";
        position: absolute;
        bottom: 0;
        left: 50%;
        transform: translateX(-50%);
        width: 100px;
        height: 3px;
        background: #009879;
      }

      /* Định dạng cho tổng số tiết */
      .total-label {
        background: #f8f9fa;
        padding: 15px 20px;
        border-radius: 8px;
        margin: 20px auto;
        width: fit-content;
        box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);
        font-weight: bold;
        color: #009879;
      }

      .value {
        color: #dc3545;
        font-size: 1.1em;
        margin-left: 5px;
      }

      /* Container cho các controls */
      .controls-container {
        display: flex;
        justify-content: start;
        align-items: center;
        gap: 10px;
        margin: 20px;
        flex-wrap: wrap;
      }

      /* Responsive design */
      @media (max-width: 768px) {
        #thongkethonghopCanvas {
          width: 70%;
          height: 300px;
        }

        .table {
          font-size: 0.8em;
        }
      }

      /* Thêm container cho 2 biểu đồ tất cả khoa */
      .charts-container {
        display: flex;
        justify-content: flex-start;
        align-items: flex-start;
        gap: 20px;
        margin: 5px 0;
        flex-wrap: wrap; /* Đảm bảo tương thích với màn hình nhỏ */
      }

      .chart-wrapper {
        flex: 1; /* Chia đều chiều rộng */
        min-width: 300px; /* Đảm bảo kích thước tối thiểu */
        max-width: 33%; /* Đảm bảo không vượt quá 33% chiều rộng */
        background: white;
        border-radius: 12px;
        box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
        padding: 15px;
      }
    </style>
  </head>

  <body>
    <!-- Phần header -->
    <%- include('header') %>

    <!-- Phần nội dung -->

    <script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
    <div class="chart">
      <h3>Thống kê tổng hợp</h3>
      <canvas id="chart"></canvas>
    </div>
    <div class="charts-container">
      <!-- Biểu đồ tròn 1: Số tiết mời giảng -->
      <div class="chart-wrapper">
        <h3>Phần trăm số tiết mời giảng</h3>
        <canvas id="moiGiangPieChart"></canvas>
      </div>

      <!-- Biểu đồ tròn 2: Số tiết vượt giờ -->
      <div class="chart-wrapper">
        <h3>Phần trăm số tiết vượt giờ</h3>
        <canvas id="vuotGioPieChart"></canvas>
      </div>

      <!-- Biểu đồ tròn 3: Tổng số tiết -->
      <div class="chart-wrapper">
        <h3>Tổng số tiết (Mời giảng + Vượt giờ)</h3>
        <canvas id="tongTietPieChart"></canvas>
      </div>
    </div>

    <script>
      async function fetchData() {
        try {
          const response = await fetch("/api/thongketonghop-data");
          const data = await response.json();
          console.log("Dữ liệu nhận được:", data);

          const labels = data.map((item) => item.Khoa);
          const moiGiangData = data.map((item) => item.TongSoTietMoiGiang);
          const vuotGioData = data.map((item) => item.TongSoTietVuotGio);

          // Tạo biểu đồ
          const ctx = document.getElementById("chart").getContext("2d");
          new Chart(ctx, {
            type: "bar",
            data: {
              labels: labels,
              datasets: [
                {
                  label: "Tổng số tiết mời giảng",
                  data: moiGiangData,
                  backgroundColor: "red",
                  borderColor: "rgba(75, 192, 192, 1)",
                  borderWidth: 1,
                },
                {
                  label: "Tổng số tiết vượt giờ",
                  data: vuotGioData,
                  backgroundColor: "blue",
                  borderColor: "rgba(255, 99, 132, 1)",
                  borderWidth: 1,
                },
              ],
            },
            options: {
              responsive: true,
              plugins: {
                legend: {
                  position: "top",
                },
              },
              scales: {
                x: {
                  stacked: true, // Chồng cột trên trục X
                  title: {
                    display: true,
                    text: "Khoa",
                  },
                },
                y: {
                  stacked: true, // Chồng cột trên trục Y
                  title: {
                    display: true,
                    text: "Số tiết",
                  },
                  beginAtZero: true,
                },
              },
            },
          });
        } catch (error) {
          console.error("Lỗi khi tải dữ liệu:", error);
        }
      }

      fetchData();
    </script>

    <h3 style="margin-top: 30px; text-align: center">
      Chi tiết số tiết giảng dạy
    </h3>
    <table
      class="table table-bordered my-2"
      border="1"
      id="thongketonghopTable"
    >
      <thead>
        <tr>
          <th>Khoa</th>
          <th>Số tiết mời giảng</th>
          <th>Số tiết giảng dạy</th>
          <th>Tổng số</th>
        </tr>
      </thead>
      <tbody id="detailTable">
        <!-- Dữ liệu sẽ được thêm vào đây -->
      </tbody>
    </table>

    <script>
      async function fetchThongKeMGData() {
        try {
          const response = await fetch("/api/thongketonghop-data");
          const data = await response.json();
          console.log("Dữ liệu nhận được:", data);

          // Cập nhật bảng
          const tableBody = document.querySelector("table tbody");
          tableBody.innerHTML = ""; // Xóa nội dung cũ của bảng

          data.forEach((item) => {
            const row = document.createElement("tr");
            row.innerHTML = `
                <td>${item.Khoa}</td>
                <td>${item.TongSoTietMoiGiang}</td>
                <td>${item.TongSoTietVuotGio}</td>
                <td>${item.Tongso}</td>
            `;
            tableBody.appendChild(row);
          });
        } catch (error) {
          console.error("Lỗi khi tải dữ liệu:", error);
        }
      }

      fetchThongKeMGData();
    </script>
    <script>
      async function fetchData() {
        try {
          const response = await fetch("/api/thongketonghop-data");
          const data = await response.json();
          console.log("Dữ liệu nhận được:", data);

          const labels = data.map((item) => item.Khoa);
          const moiGiangData = data.map((item) =>
            parseFloat(item.TongSoTietMoiGiang)
          );
          const vuotGioData = data.map((item) =>
            parseFloat(item.TongSoTietVuotGio)
          );
          const tongSoTietData = data.map((item) => parseFloat(item.Tongso));

          // Định nghĩa màu sắc cố định cho các khoa
          const colors = [
            "#FF6384", // Màu đỏ
            "#36A2EB", // Màu xanh dương
            "#FFCE56", // Màu vàng
            "#4BC0C0", // Màu xanh ngọc
            "#9966FF", // Màu tím
            "#FF9F40", // Màu cam
            "#C9CBCF", // Màu xám
          ];

          // Biểu đồ tròn: Số tiết mời giảng
          const moiGiangCtx = document
            .getElementById("moiGiangPieChart")
            .getContext("2d");
          new Chart(moiGiangCtx, {
            type: "pie",
            data: {
              labels: labels,
              datasets: [
                {
                  label: "Số tiết mời giảng",
                  data: moiGiangData,
                  backgroundColor: colors,
                },
              ],
            },
            options: {
              responsive: true,
              plugins: {
                legend: { position: "top" },
              },
            },
          });

          // Biểu đồ tròn: Số tiết vượt giờ
          const vuotGioCtx = document
            .getElementById("vuotGioPieChart")
            .getContext("2d");
          new Chart(vuotGioCtx, {
            type: "pie",
            data: {
              labels: labels,
              datasets: [
                {
                  label: "Số tiết vượt giờ",
                  data: vuotGioData,
                  backgroundColor: colors,
                },
              ],
            },
            options: {
              responsive: true,
              plugins: {
                legend: { position: "top" },
              },
            },
          });

          // Biểu đồ tròn: Tổng số tiết
          const tongTietCtx = document
            .getElementById("tongTietPieChart")
            .getContext("2d");
          new Chart(tongTietCtx, {
            type: "pie",
            data: {
              labels: labels,
              datasets: [
                {
                  label: "Tổng số tiết",
                  data: tongSoTietData,
                  backgroundColor: colors,
                },
              ],
            },
            options: {
              responsive: true,
              plugins: {
                legend: { position: "top" },
              },
            },
          });
        } catch (error) {
          console.error("Lỗi khi tải dữ liệu:", error);
        }
      }

      fetchData();
    </script>
  </body>
</html>
