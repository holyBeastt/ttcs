<!DOCTYPE html>
<html lang="en">

<head>
  <meta charset="UTF-8" />
  <meta name="viewport" content="width=device-width, initial-scale=1.0" />
  <title>Sửa Tài Khoản</title>
  <link rel="stylesheet" href="/css/admin.css" />
  <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap@5.2.3/dist/css/bootstrap.min.css" />
  <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap-icons@1.11.3/font/bootstrap-icons.css" />
  <link rel="stylesheet" href="/css/styles.css" />
</head>
<style>
  #suggestionBox {
    position: absolute;
    z-index: 9999;
    /* Đảm bảo hiển thị trên tất cả các phần khác */
    background-color: white;
    /* Để nội dung rõ ràng */
    border: 1px solid #ccc;
    width: 200px;
    /*Căn theo độ rộng của input */
    max-height: 200px;
    /* Giới hạn chiều cao */
    overflow-y: auto;
    /* Thêm thanh cuộn nếu danh sách quá dài */
    box-shadow: 0px 4px 6px rgba(0, 0, 0, 0.1);
    /* Đổ bóng cho đẹp */
  }
</style>
</style>

<body>
  <%- include('adminHeader') %>

    <div class="container my-5 box">
      <h2>Sửa Tài Khoản</h2>
      <form id="themTK" action="/updateTK/<%= accountList.TenDangNhap %>" method="POST">
        <div class="row mb-3">
          <div class="col-md-4 input-wrapper">
            <label for="username" class="form-label">Tên Nhân Viên</label>
            <input class="form-control" type="text" id="TenNhanVien" onkeyup="suggest()"
              value="<%= id.TenNhanVien %>" />
            <div id="suggestionBox"></div>
          </div>
        </div>

        <div class="row mb-3">
          <div class="col-md-4 input-wrapper">
            <label for="username" class="form-label">Tên đăng nhập</label>
            <input type="text" class="form-control" id="TenDangNhap" name="TenDangNhap"
              value="<%= accountList.TenDangNhap %>" readonly />
          </div>
        </div>
        <div class="row mb-3" hidden>
          <div class="col-md-4 input-wrapper">
            <label for="id_User" class="form-label">id_User</label>
            <input type="text" name="id_User" id="id_User" value="<%= id.id_User %>" />
            <!-- <select id="id_User" name="id_User" onchange="fetchPhongBan()">
                  <% user.forEach(function(user) { %>
                    <option value="<%= user.id_User %>"
                      <%= String(user.id_User) === String(id.id_User) ? 'selected': '' %>>
                      <%= user.id_User %>
                    </option>
                  <% }); %>
                </select> -->
          </div>
        </div>
        <div class="row mb-3">
          <div class="col-md-4 input-wrapper">
            <label for="password" class="form-label">Mật khẩu</label>
            <input type="password" class="form-control" id="MatKhau" name="MatKhau" value="<%= accountList.MatKhau %>"
              required />
          </div>
        </div>
        <div class="row mb-3">
          <div class="col-md-4 input-wrapper">
            <label for="MaPhongBan" class="form-label">Mã Phòng ban</label>
            <input type="text" class="form-control" id="MaPhongBan" name="MaPhongBan" value="<%= id.MaPhongBan %>"
              readonly />
          </div>
        </div>
        <div class="row mb-3">
          <div class="col-md-4 input-wrapper">
            <label for="Quyen" class="form-label">Quyền</label>
            <select id="Quyen" name="Quyen" class="form-control">
              <option value="<%= role.Quyen %>">
                <%= role.Quyen %>
              </option>
            </select>
          </div>
        </div>
        <div class="row mb-3">
          <div class="col-md-4 input-wrapper" hidden>
            <label class="form-check-label" for="isKhoa"> isKhoa </label>
            <input class="form-control" type="text" id="isKhoa" name="isKhoa" value="<%= id.isKhoa %>" readonly />
          </div>
        </div>
        <button type="submit" class="btn">Cập nhật</button>
        <button type="button" class="btn mx-5" onclick="window.location.href='/thongTinTK'">
          Trở về
        </button>
      </form>
    </div>

    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.2.3/dist/js/bootstrap.bundle.min.js"></script>
    <script>
      // Helper function để decode HTML entities
      function decodeHTMLEntities(text) {
        const textArea = document.createElement('textarea');
        textArea.innerHTML = text;
        return textArea.value;
      }

      document.addEventListener("DOMContentLoaded", function () {
        const khoa = parseInt("<%= id.isKhoa %>");
        const maPhongBan = decodeHTMLEntities("<%= id.MaPhongBan %>");
        const quyenSelect = document.getElementById('Quyen');

        // Debug: In ra giá trị để kiểm tra
        console.log("khoa:", khoa, "maPhongBan:", maPhongBan);

        // Biến để xác định phòng Khảo Thí
        const phongKhaoThi = (maPhongBan === APP_DEPARTMENTS.ktDbcl && khoa === 0);
        console.log("phongKhaoThi:", phongKhaoThi);

        // Kiểm tra isKhoa và cập nhật quyền dựa theo giá trị
        if (khoa === 1) {
          console.log("Applying khoa = 1 permissions");
          quyenSelect.innerHTML = `
              <option value="${APP_ROLES.gv_khoa}">Giảng Viên</option>
              <option value="${APP_ROLES.gv_cnbm_khoa}">Giáo vụ - Chủ nhiệm bộ môn</option>
              <option value="${APP_ROLES.lanhDao_khoa}">Lãnh đạo khoa</option>`;
        } else {
          quyenSelect.innerHTML = `
              <option value="${APP_ROLES.lanhDao_phong}">Lãnh đạo</option>
              <option value="${APP_ROLES.troLy_phong}">Trợ lý</option>
              <option value="${APP_ROLES.thuong}">Thường</option>`;
        }
        const quyenValue = "<%= role.Quyen %>";
        localStorage.setItem("Quyen", quyenValue);

        // Đặt option có value khớp với role.Quyen là selected
        const optionToSelect = quyenSelect.querySelector(`option[value="${quyenValue}"]`);
        if (optionToSelect) {
          optionToSelect.selected = true;
        }
      })
    </script>
    <script>
      document
        .getElementById("changePasswordLink")
        .addEventListener("click", function (event) {
          event.preventDefault(); // Ngăn chặn hành vi mặc định của thẻ a
          const tenDangNhap = localStorage.getItem("TenDangNhap"); // Lấy TenDangNhap từ localStorage

          if (tenDangNhap) {
            // Chuyển hướng đến trang changePassword và truyền TenDangNhap trong URL
            window.location.href = `/changePassword?tenDangNhap=${encodeURIComponent(
              tenDangNhap
            )}`;
          } else {
            alert("Không tìm thấy TenDangNhap trong localStorage.");
          }
        });
    </script>
    <script>
      function fetchPhongBan() {
        const TenNhanVien = document.getElementById("TenNhanVien").value;
        console.log("Giá trị TenNhanVien:", TenNhanVien); // Kiểm tra giá trị TenNhanVien

        // Gửi yêu cầu tới server để lấy MaPhongBan và isKhoa
        fetch(`/getTenNhanVien?TenNhanVien=${TenNhanVien}`)
          .then((response) => {
            console.log("Trạng thái phản hồi:", response.status); // Kiểm tra trạng thái phản hồi
            if (!response.ok) {
              throw new Error("Network response was not ok");
            }
            return response.json();
          })
          .then((data) => {
            console.log("Dữ liệu trả về từ server:", data); // Kiểm tra dữ liệu trả về từ server
            // Cập nhật giá trị vào các thẻ input
            document.getElementById("MaPhongBan").value =
              data.MaPhongBan || "Không có dữ liệu";
            document.getElementById("isKhoa").value = data.isKhoa ? "1" : "0";
            document.getElementById("id_User").value =
              data.id_User || "Không có dữ liệu";

            const quyenSelect = document.getElementById("Quyen");
            quyenSelect.innerHTML = ""; // Xóa các option cũ

            // Debug: In ra giá trị để kiểm tra
            console.log("data.MaPhongBan:", data.MaPhongBan, "data.isKhoa:", data.isKhoa);

            // Biến để xác định phòng Khảo Thí
            const phongKhaoThi = (data.MaPhongBan === APP_DEPARTMENTS.ktDbcl && data.isKhoa === 0);
            console.log("phongKhaoThi in fetchPhongBan:", phongKhaoThi);

            // Kiểm tra isKhoa và cập nhật quyền dựa theo giá trị
            if (data.isKhoa === 1) {
              console.log("Applying khoa = 1 permissions in fetchPhongBan");
              quyenSelect.innerHTML = `
          <option value="${APP_ROLES.gv_khoa}">Giảng Viên</option>
          <option value="${APP_ROLES.gv_cnbm_khoa}">Giảng viên-Chủ nhiệm bộ môn</option>
          <option value="${APP_ROLES.lanhDao_khoa}">Lãnh đạo khoa</option>`;
            } else if (phongKhaoThi) {
              console.log("Applying KT&ĐBCL permissions in fetchPhongBan");
              // Trường hợp riêng cho phòng Khảo Thí (KT&ĐBCL)
              quyenSelect.innerHTML = `
          <option value="${APP_ROLES.lanhDao_phong}">Lãnh đạo</option>
          <option value="${APP_ROLES.troLy_phong}">Trợ lý</option>
          <option value="${APP_ROLES.thuong}">Thường</option>`;
            } else {
              console.log("Applying default permissions in fetchPhongBan");
              // Các phòng ban hành chính khác
              quyenSelect.innerHTML = `
          <option value="${APP_ROLES.troLy_phong}">Trợ lý</option>
          <option value="${APP_ROLES.thuong}">Thường</option>`;
            }
            const quyenValue = localStorage.getItem("Quyen");
            const optionToSelect = quyenSelect.querySelector(
              `option[value="${quyenValue}"]`
            );
            if (optionToSelect) {
              optionToSelect.selected = true;
            }
          })
          .catch((error) => {
            console.error("Lỗi khi lấy dữ liệu:", error.message); // Xử lý lỗi nếu có
          });
      }
    </script>
    <script>
      const searchInput = document.getElementById("searchInput");
      const select = document.getElementById("TenNhanVien");

      searchInput.addEventListener("input", function () {
        const filter = searchInput.value.toLowerCase();
        const options = select.options;

        for (let i = 0; i < options.length; i++) {
          const option = options[i];
          const text = option.text.toLowerCase();

          // Hiện/ẩn option dựa trên kết quả tìm kiếm
          option.style.display = text.includes(filter) ? "" : "none";
        }
      });
    </script>
    <script>
      function suggest() {
        const query = document.getElementById("TenNhanVien").value;
        if (query.length === 0) {
          document.getElementById("suggestionBox").innerHTML = "";
          return;
        }

        fetch(`/suggest/${query}`)
          .then((response) => response.json())
          .then((data) => {
            // Lấy mảng tên nhân viên từ phần tử đầu tiên
            let results = data[0]; // Lấy dữ liệu từ phần tử đầu tiên

            // Kiểm tra xem results có phải là mảng và có phần tử hay không
            if (Array.isArray(results) && results.length > 0) {
              let suggestions = results
                .map((item) => {
                  return `<div onclick="selectSuggestion('${item.TenNhanVien.trim()}')">${item.TenNhanVien.trim()}</div>`;
                })
                .join(""); // Kết hợp tất cả các phần tử thành chuỗi HTML

              // Chèn danh sách vào suggestionBox
              document.getElementById("suggestionBox").innerHTML = suggestions;
            } else {
              // Nếu không có kết quả, hiển thị thông báo
              document.getElementById("suggestionBox").innerHTML =
                "<div>No results found</div>";
            }
          })
          .catch((error) => console.error("Lỗi khi lấy dữ liệu:", error));
      }
      // Hàm này sẽ được gọi khi người dùng click vào một gợi ý
      function selectSuggestion(value) {
        // Thêm giá trị vào ô input
        document.getElementById("TenNhanVien").value = value;

        // Xóa các gợi ý khi chọn một tên
        document.getElementById("suggestionBox").innerHTML = "";

        fetchPhongBan(value);
      }
    </script>
</body>

</html>
